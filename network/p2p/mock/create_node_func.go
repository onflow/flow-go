// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockp2p

import (
	host "github.com/libp2p/go-libp2p/core/host"
	mock "github.com/stretchr/testify/mock"

	p2p "github.com/onflow/flow-go/network/p2p"

	zerolog "github.com/rs/zerolog"
)

// CreateNodeFunc is an autogenerated mock type for the CreateNodeFunc type
type CreateNodeFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2, _a3, _a4
func (_m *CreateNodeFunc) Execute(_a0 zerolog.Logger, _a1 host.Host, _a2 p2p.ProtocolPeerCache, _a3 p2p.PeerManager, _a4 *p2p.DisallowListCacheConfig) p2p.LibP2PNode {
	ret := _m.Called(_a0, _a1, _a2, _a3, _a4)

	var r0 p2p.LibP2PNode
	if rf, ok := ret.Get(0).(func(zerolog.Logger, host.Host, p2p.ProtocolPeerCache, p2p.PeerManager, *p2p.DisallowListCacheConfig) p2p.LibP2PNode); ok {
		r0 = rf(_a0, _a1, _a2, _a3, _a4)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(p2p.LibP2PNode)
		}
	}

	return r0
}

type mockConstructorTestingTNewCreateNodeFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateNodeFunc creates a new instance of CreateNodeFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateNodeFunc(t mockConstructorTestingTNewCreateNodeFunc) *CreateNodeFunc {
	mock := &CreateNodeFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
