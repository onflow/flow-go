// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockp2p

import mock "github.com/stretchr/testify/mock"

// InspectorTopicOracle is an autogenerated mock type for the InspectorTopicOracle type
type InspectorTopicOracle struct {
	mock.Mock
}

// SetTopicOracle provides a mock function with given fields: topicOracle
func (_m *InspectorTopicOracle) SetTopicOracle(topicOracle func() []string) error {
	ret := _m.Called(topicOracle)

	var r0 error
	if rf, ok := ret.Get(0).(func(func() []string) error); ok {
		r0 = rf(topicOracle)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewInspectorTopicOracle interface {
	mock.TestingT
	Cleanup(func())
}

// NewInspectorTopicOracle creates a new instance of InspectorTopicOracle. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInspectorTopicOracle(t mockConstructorTestingTNewInspectorTopicOracle) *InspectorTopicOracle {
	mock := &InspectorTopicOracle{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
