// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockp2p

import (
	context "context"

	p2p "github.com/onflow/flow-go/network/p2p"
	mock "github.com/stretchr/testify/mock"

	peer "github.com/libp2p/go-libp2p/core/peer"

	pubsub "github.com/libp2p/go-libp2p-pubsub"
)

// TopicValidatorFunc is an autogenerated mock type for the TopicValidatorFunc type
type TopicValidatorFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2
func (_m *TopicValidatorFunc) Execute(_a0 context.Context, _a1 peer.ID, _a2 *pubsub.Message) p2p.ValidationResult {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 p2p.ValidationResult
	if rf, ok := ret.Get(0).(func(context.Context, peer.ID, *pubsub.Message) p2p.ValidationResult); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(p2p.ValidationResult)
	}

	return r0
}

type mockConstructorTestingTNewTopicValidatorFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewTopicValidatorFunc creates a new instance of TopicValidatorFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTopicValidatorFunc(t mockConstructorTestingTNewTopicValidatorFunc) *TopicValidatorFunc {
	mock := &TopicValidatorFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
