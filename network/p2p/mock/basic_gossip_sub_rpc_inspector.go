// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockp2p

import (
	mock "github.com/stretchr/testify/mock"

	peer "github.com/libp2p/go-libp2p/core/peer"

	pubsub "github.com/libp2p/go-libp2p-pubsub"
)

// BasicGossipSubRPCInspector is an autogenerated mock type for the BasicGossipSubRPCInspector type
type BasicGossipSubRPCInspector struct {
	mock.Mock
}

// Inspect provides a mock function with given fields: _a0, _a1
func (_m *BasicGossipSubRPCInspector) Inspect(_a0 peer.ID, _a1 *pubsub.RPC) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(peer.ID, *pubsub.RPC) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBasicGossipSubRPCInspector interface {
	mock.TestingT
	Cleanup(func())
}

// NewBasicGossipSubRPCInspector creates a new instance of BasicGossipSubRPCInspector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBasicGossipSubRPCInspector(t mockConstructorTestingTNewBasicGossipSubRPCInspector) *BasicGossipSubRPCInspector {
	mock := &BasicGossipSubRPCInspector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
