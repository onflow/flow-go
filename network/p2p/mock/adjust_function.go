// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockp2p

import (
	mock "github.com/stretchr/testify/mock"

	p2p "github.com/onflow/flow-go/network/p2p"
)

// AdjustFunction is an autogenerated mock type for the AdjustFunction type
type AdjustFunction struct {
	mock.Mock
}

// Execute provides a mock function with given fields: record
func (_m *AdjustFunction) Execute(record p2p.GossipSubSpamRecord) p2p.GossipSubSpamRecord {
	ret := _m.Called(record)

	var r0 p2p.GossipSubSpamRecord
	if rf, ok := ret.Get(0).(func(p2p.GossipSubSpamRecord) p2p.GossipSubSpamRecord); ok {
		r0 = rf(record)
	} else {
		r0 = ret.Get(0).(p2p.GossipSubSpamRecord)
	}

	return r0
}

type mockConstructorTestingTNewAdjustFunction interface {
	mock.TestingT
	Cleanup(func())
}

// NewAdjustFunction creates a new instance of AdjustFunction. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAdjustFunction(t mockConstructorTestingTNewAdjustFunction) *AdjustFunction {
	mock := &AdjustFunction{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
