// Code generated by mockery v2.13.1. DO NOT EDIT.

package mockp2p

import (
	mock "github.com/stretchr/testify/mock"

	peer "github.com/libp2p/go-libp2p/core/peer"
)

// PeerConnections is an autogenerated mock type for the PeerConnections type
type PeerConnections struct {
	mock.Mock
}

// IsConnected provides a mock function with given fields: peerID
func (_m *PeerConnections) IsConnected(peerID peer.ID) (bool, error) {
	ret := _m.Called(peerID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(peer.ID) bool); ok {
		r0 = rf(peerID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(peer.ID) error); ok {
		r1 = rf(peerID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPeerConnections interface {
	mock.TestingT
	Cleanup(func())
}

// NewPeerConnections creates a new instance of PeerConnections. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPeerConnections(t mockConstructorTestingTNewPeerConnections) *PeerConnections {
	mock := &PeerConnections{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
