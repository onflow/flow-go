// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockp2p

import (
	mock "github.com/stretchr/testify/mock"

	peer "github.com/libp2p/go-libp2p/core/peer"
)

// SubscriptionProvider is an autogenerated mock type for the SubscriptionProvider type
type SubscriptionProvider struct {
	mock.Mock
}

// GetSubscribedTopics provides a mock function with given fields: pid
func (_m *SubscriptionProvider) GetSubscribedTopics(pid peer.ID) []string {
	ret := _m.Called(pid)

	var r0 []string
	if rf, ok := ret.Get(0).(func(peer.ID) []string); ok {
		r0 = rf(pid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

type mockConstructorTestingTNewSubscriptionProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewSubscriptionProvider creates a new instance of SubscriptionProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSubscriptionProvider(t mockConstructorTestingTNewSubscriptionProvider) *SubscriptionProvider {
	mock := &SubscriptionProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
