// Code generated by mockery v2.43.2. DO NOT EDIT.

package mockp2p

import (
	mock "github.com/stretchr/testify/mock"

	peer "github.com/libp2p/go-libp2p/core/peer"
)

// RateLimiterConsumer is an autogenerated mock type for the RateLimiterConsumer type
type RateLimiterConsumer struct {
	mock.Mock
}

// OnRateLimitedPeer provides a mock function with given fields: pid, role, msgType, topic, reason
func (_m *RateLimiterConsumer) OnRateLimitedPeer(pid peer.ID, role string, msgType string, topic string, reason string) {
	_m.Called(pid, role, msgType, topic, reason)
}

// NewRateLimiterConsumer creates a new instance of RateLimiterConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRateLimiterConsumer(t interface {
	mock.TestingT
	Cleanup(func())
}) *RateLimiterConsumer {
	mock := &RateLimiterConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
