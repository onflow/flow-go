// Code generated by mockery v2.13.1. DO NOT EDIT.

package mockp2p

import mock "github.com/stretchr/testify/mock"

// PeerManager is an autogenerated mock type for the PeerManager type
type PeerManager struct {
	mock.Mock
}

// Done provides a mock function with given fields:
func (_m *PeerManager) Done() <-chan struct{} {
	ret := _m.Called()

	var r0 <-chan struct{}
	if rf, ok := ret.Get(0).(func() <-chan struct{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan struct{})
		}
	}

	return r0
}

// ForceUpdatePeers provides a mock function with given fields:
func (_m *PeerManager) ForceUpdatePeers() {
	_m.Called()
}

// Ready provides a mock function with given fields:
func (_m *PeerManager) Ready() <-chan struct{} {
	ret := _m.Called()

	var r0 <-chan struct{}
	if rf, ok := ret.Get(0).(func() <-chan struct{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan struct{})
		}
	}

	return r0
}

// RequestPeerUpdate provides a mock function with given fields:
func (_m *PeerManager) RequestPeerUpdate() {
	_m.Called()
}

type mockConstructorTestingTNewPeerManager interface {
	mock.TestingT
	Cleanup(func())
}

// NewPeerManager creates a new instance of PeerManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPeerManager(t mockConstructorTestingTNewPeerManager) *PeerManager {
	mock := &PeerManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
