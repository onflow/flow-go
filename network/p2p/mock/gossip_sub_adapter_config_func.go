// Code generated by mockery v2.43.2. DO NOT EDIT.

package mockp2p

import (
	p2p "github.com/onflow/flow-go/network/p2p"
	mock "github.com/stretchr/testify/mock"
)

// GossipSubAdapterConfigFunc is an autogenerated mock type for the GossipSubAdapterConfigFunc type
type GossipSubAdapterConfigFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *GossipSubAdapterConfigFunc) Execute(_a0 *p2p.BasePubSubAdapterConfig) p2p.PubSubAdapterConfig {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 p2p.PubSubAdapterConfig
	if rf, ok := ret.Get(0).(func(*p2p.BasePubSubAdapterConfig) p2p.PubSubAdapterConfig); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(p2p.PubSubAdapterConfig)
		}
	}

	return r0
}

// NewGossipSubAdapterConfigFunc creates a new instance of GossipSubAdapterConfigFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGossipSubAdapterConfigFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *GossipSubAdapterConfigFunc {
	mock := &GossipSubAdapterConfigFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
