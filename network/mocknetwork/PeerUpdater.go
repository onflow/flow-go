// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocknetwork

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	peer "github.com/libp2p/go-libp2p/core/peer"
)

// MockPeerUpdater is an autogenerated mock type for the PeerUpdater type
type MockPeerUpdater struct {
	mock.Mock
}

type MockPeerUpdater_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPeerUpdater) EXPECT() *MockPeerUpdater_Expecter {
	return &MockPeerUpdater_Expecter{mock: &_m.Mock}
}

// UpdatePeers provides a mock function with given fields: ctx, peerIDs
func (_m *MockPeerUpdater) UpdatePeers(ctx context.Context, peerIDs peer.IDSlice) {
	_m.Called(ctx, peerIDs)
}

// MockPeerUpdater_UpdatePeers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdatePeers'
type MockPeerUpdater_UpdatePeers_Call struct {
	*mock.Call
}

// UpdatePeers is a helper method to define mock.On call
//   - ctx context.Context
//   - peerIDs peer.IDSlice
func (_e *MockPeerUpdater_Expecter) UpdatePeers(ctx interface{}, peerIDs interface{}) *MockPeerUpdater_UpdatePeers_Call {
	return &MockPeerUpdater_UpdatePeers_Call{Call: _e.mock.On("UpdatePeers", ctx, peerIDs)}
}

func (_c *MockPeerUpdater_UpdatePeers_Call) Run(run func(ctx context.Context, peerIDs peer.IDSlice)) *MockPeerUpdater_UpdatePeers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(peer.IDSlice))
	})
	return _c
}

func (_c *MockPeerUpdater_UpdatePeers_Call) Return() *MockPeerUpdater_UpdatePeers_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockPeerUpdater_UpdatePeers_Call) RunAndReturn(run func(context.Context, peer.IDSlice)) *MockPeerUpdater_UpdatePeers_Call {
	_c.Run(run)
	return _c
}

// NewMockPeerUpdater creates a new instance of MockPeerUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPeerUpdater(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPeerUpdater {
	mock := &MockPeerUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
