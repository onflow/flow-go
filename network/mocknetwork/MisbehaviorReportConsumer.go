// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocknetwork

import (
	channels "github.com/onflow/flow-go/network/channels"
	mock "github.com/stretchr/testify/mock"

	network "github.com/onflow/flow-go/network"
)

// MockMisbehaviorReportConsumer is an autogenerated mock type for the MisbehaviorReportConsumer type
type MockMisbehaviorReportConsumer struct {
	mock.Mock
}

type MockMisbehaviorReportConsumer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMisbehaviorReportConsumer) EXPECT() *MockMisbehaviorReportConsumer_Expecter {
	return &MockMisbehaviorReportConsumer_Expecter{mock: &_m.Mock}
}

// ReportMisbehaviorOnChannel provides a mock function with given fields: channel, report
func (_m *MockMisbehaviorReportConsumer) ReportMisbehaviorOnChannel(channel channels.Channel, report network.MisbehaviorReport) {
	_m.Called(channel, report)
}

// MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReportMisbehaviorOnChannel'
type MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call struct {
	*mock.Call
}

// ReportMisbehaviorOnChannel is a helper method to define mock.On call
//   - channel channels.Channel
//   - report network.MisbehaviorReport
func (_e *MockMisbehaviorReportConsumer_Expecter) ReportMisbehaviorOnChannel(channel interface{}, report interface{}) *MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call {
	return &MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call{Call: _e.mock.On("ReportMisbehaviorOnChannel", channel, report)}
}

func (_c *MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call) Run(run func(channel channels.Channel, report network.MisbehaviorReport)) *MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Channel), args[1].(network.MisbehaviorReport))
	})
	return _c
}

func (_c *MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call) Return() *MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call) RunAndReturn(run func(channels.Channel, network.MisbehaviorReport)) *MockMisbehaviorReportConsumer_ReportMisbehaviorOnChannel_Call {
	_c.Run(run)
	return _c
}

// NewMockMisbehaviorReportConsumer creates a new instance of MockMisbehaviorReportConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMisbehaviorReportConsumer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMisbehaviorReportConsumer {
	mock := &MockMisbehaviorReportConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
