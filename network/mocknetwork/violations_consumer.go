// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocknetwork

import (
	slashing "github.com/onflow/flow-go/network/slashing"
	mock "github.com/stretchr/testify/mock"
)

// ViolationsConsumer is an autogenerated mock type for the ViolationsConsumer type
type ViolationsConsumer struct {
	mock.Mock
}

// OnInvalidMsgError provides a mock function with given fields: violation
func (_m *ViolationsConsumer) OnInvalidMsgError(violation *slashing.Violation) {
	_m.Called(violation)
}

// OnSenderEjectedError provides a mock function with given fields: violation
func (_m *ViolationsConsumer) OnSenderEjectedError(violation *slashing.Violation) {
	_m.Called(violation)
}

// OnUnAuthorizedSenderError provides a mock function with given fields: violation
func (_m *ViolationsConsumer) OnUnAuthorizedSenderError(violation *slashing.Violation) {
	_m.Called(violation)
}

// OnUnknownMsgTypeError provides a mock function with given fields: violation
func (_m *ViolationsConsumer) OnUnknownMsgTypeError(violation *slashing.Violation) {
	_m.Called(violation)
}

type mockConstructorTestingTNewViolationsConsumer interface {
	mock.TestingT
	Cleanup(func())
}

// NewViolationsConsumer creates a new instance of ViolationsConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewViolationsConsumer(t mockConstructorTestingTNewViolationsConsumer) *ViolationsConsumer {
	mock := &ViolationsConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
