// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocknetwork

import (
	message "github.com/onflow/flow-go/network/message"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MessageValidator is an autogenerated mock type for the MessageValidator type
type MessageValidator struct {
	mock.Mock
}

// Validate provides a mock function with given fields: msg
func (_m *MessageValidator) Validate(msg message.Message) bool {
	ret := _m.Called(msg)

	var r0 bool
	if rf, ok := ret.Get(0).(func(message.Message) bool); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewMessageValidator creates a new instance of MessageValidator. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMessageValidator(t testing.TB) *MessageValidator {
	mock := &MessageValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
