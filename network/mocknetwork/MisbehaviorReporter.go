// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocknetwork

import (
	network "github.com/onflow/flow-go/network"
	mock "github.com/stretchr/testify/mock"
)

// MockMisbehaviorReporter is an autogenerated mock type for the MisbehaviorReporter type
type MockMisbehaviorReporter struct {
	mock.Mock
}

type MockMisbehaviorReporter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMisbehaviorReporter) EXPECT() *MockMisbehaviorReporter_Expecter {
	return &MockMisbehaviorReporter_Expecter{mock: &_m.Mock}
}

// ReportMisbehavior provides a mock function with given fields: _a0
func (_m *MockMisbehaviorReporter) ReportMisbehavior(_a0 network.MisbehaviorReport) {
	_m.Called(_a0)
}

// MockMisbehaviorReporter_ReportMisbehavior_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReportMisbehavior'
type MockMisbehaviorReporter_ReportMisbehavior_Call struct {
	*mock.Call
}

// ReportMisbehavior is a helper method to define mock.On call
//   - _a0 network.MisbehaviorReport
func (_e *MockMisbehaviorReporter_Expecter) ReportMisbehavior(_a0 interface{}) *MockMisbehaviorReporter_ReportMisbehavior_Call {
	return &MockMisbehaviorReporter_ReportMisbehavior_Call{Call: _e.mock.On("ReportMisbehavior", _a0)}
}

func (_c *MockMisbehaviorReporter_ReportMisbehavior_Call) Run(run func(_a0 network.MisbehaviorReport)) *MockMisbehaviorReporter_ReportMisbehavior_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(network.MisbehaviorReport))
	})
	return _c
}

func (_c *MockMisbehaviorReporter_ReportMisbehavior_Call) Return() *MockMisbehaviorReporter_ReportMisbehavior_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockMisbehaviorReporter_ReportMisbehavior_Call) RunAndReturn(run func(network.MisbehaviorReport)) *MockMisbehaviorReporter_ReportMisbehavior_Call {
	_c.Run(run)
	return _c
}

// NewMockMisbehaviorReporter creates a new instance of MockMisbehaviorReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMisbehaviorReporter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMisbehaviorReporter {
	mock := &MockMisbehaviorReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
