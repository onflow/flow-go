// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocknetwork

import (
	p2p "github.com/onflow/flow-go/network/p2p"
	mock "github.com/stretchr/testify/mock"
)

// MockGossipSubInvCtrlMsgNotifConsumer is an autogenerated mock type for the GossipSubInvCtrlMsgNotifConsumer type
type MockGossipSubInvCtrlMsgNotifConsumer struct {
	mock.Mock
}

type MockGossipSubInvCtrlMsgNotifConsumer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockGossipSubInvCtrlMsgNotifConsumer) EXPECT() *MockGossipSubInvCtrlMsgNotifConsumer_Expecter {
	return &MockGossipSubInvCtrlMsgNotifConsumer_Expecter{mock: &_m.Mock}
}

// OnInvalidControlMessageNotification provides a mock function with given fields: _a0
func (_m *MockGossipSubInvCtrlMsgNotifConsumer) OnInvalidControlMessageNotification(_a0 *p2p.InvCtrlMsgNotif) {
	_m.Called(_a0)
}

// MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnInvalidControlMessageNotification'
type MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call struct {
	*mock.Call
}

// OnInvalidControlMessageNotification is a helper method to define mock.On call
//   - _a0 *p2p.InvCtrlMsgNotif
func (_e *MockGossipSubInvCtrlMsgNotifConsumer_Expecter) OnInvalidControlMessageNotification(_a0 interface{}) *MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call {
	return &MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call{Call: _e.mock.On("OnInvalidControlMessageNotification", _a0)}
}

func (_c *MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call) Run(run func(_a0 *p2p.InvCtrlMsgNotif)) *MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*p2p.InvCtrlMsgNotif))
	})
	return _c
}

func (_c *MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call) Return() *MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call) RunAndReturn(run func(*p2p.InvCtrlMsgNotif)) *MockGossipSubInvCtrlMsgNotifConsumer_OnInvalidControlMessageNotification_Call {
	_c.Run(run)
	return _c
}

// NewMockGossipSubInvCtrlMsgNotifConsumer creates a new instance of MockGossipSubInvCtrlMsgNotifConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGossipSubInvCtrlMsgNotifConsumer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGossipSubInvCtrlMsgNotifConsumer {
	mock := &MockGossipSubInvCtrlMsgNotifConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
