// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocknetwork

import (
	host "github.com/libp2p/go-libp2p/core/host"
	irrecoverable "github.com/onflow/flow-go/module/irrecoverable"

	mock "github.com/stretchr/testify/mock"

	p2p "github.com/onflow/flow-go/network/p2p"

	pubsub "github.com/libp2p/go-libp2p-pubsub"

	routing "github.com/libp2p/go-libp2p/core/routing"
)

// MockGossipSubBuilder is an autogenerated mock type for the GossipSubBuilder type
type MockGossipSubBuilder struct {
	mock.Mock
}

type MockGossipSubBuilder_Expecter struct {
	mock *mock.Mock
}

func (_m *MockGossipSubBuilder) EXPECT() *MockGossipSubBuilder_Expecter {
	return &MockGossipSubBuilder_Expecter{mock: &_m.Mock}
}

// Build provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) Build(_a0 irrecoverable.SignalerContext) (p2p.PubSubAdapter, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Build")
	}

	var r0 p2p.PubSubAdapter
	var r1 error
	if rf, ok := ret.Get(0).(func(irrecoverable.SignalerContext) (p2p.PubSubAdapter, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(irrecoverable.SignalerContext) p2p.PubSubAdapter); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(p2p.PubSubAdapter)
		}
	}

	if rf, ok := ret.Get(1).(func(irrecoverable.SignalerContext) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockGossipSubBuilder_Build_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Build'
type MockGossipSubBuilder_Build_Call struct {
	*mock.Call
}

// Build is a helper method to define mock.On call
//   - _a0 irrecoverable.SignalerContext
func (_e *MockGossipSubBuilder_Expecter) Build(_a0 interface{}) *MockGossipSubBuilder_Build_Call {
	return &MockGossipSubBuilder_Build_Call{Call: _e.mock.On("Build", _a0)}
}

func (_c *MockGossipSubBuilder_Build_Call) Run(run func(_a0 irrecoverable.SignalerContext)) *MockGossipSubBuilder_Build_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(irrecoverable.SignalerContext))
	})
	return _c
}

func (_c *MockGossipSubBuilder_Build_Call) Return(_a0 p2p.PubSubAdapter, _a1 error) *MockGossipSubBuilder_Build_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockGossipSubBuilder_Build_Call) RunAndReturn(run func(irrecoverable.SignalerContext) (p2p.PubSubAdapter, error)) *MockGossipSubBuilder_Build_Call {
	_c.Call.Return(run)
	return _c
}

// EnableGossipSubScoringWithOverride provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) EnableGossipSubScoringWithOverride(_a0 *p2p.PeerScoringConfigOverride) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EnableGossipSubScoringWithOverride'
type MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call struct {
	*mock.Call
}

// EnableGossipSubScoringWithOverride is a helper method to define mock.On call
//   - _a0 *p2p.PeerScoringConfigOverride
func (_e *MockGossipSubBuilder_Expecter) EnableGossipSubScoringWithOverride(_a0 interface{}) *MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call {
	return &MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call{Call: _e.mock.On("EnableGossipSubScoringWithOverride", _a0)}
}

func (_c *MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call) Run(run func(_a0 *p2p.PeerScoringConfigOverride)) *MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*p2p.PeerScoringConfigOverride))
	})
	return _c
}

func (_c *MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call) Return() *MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call) RunAndReturn(run func(*p2p.PeerScoringConfigOverride)) *MockGossipSubBuilder_EnableGossipSubScoringWithOverride_Call {
	_c.Run(run)
	return _c
}

// OverrideDefaultRpcInspectorFactory provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) OverrideDefaultRpcInspectorFactory(_a0 p2p.GossipSubRpcInspectorFactoryFunc) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OverrideDefaultRpcInspectorFactory'
type MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call struct {
	*mock.Call
}

// OverrideDefaultRpcInspectorFactory is a helper method to define mock.On call
//   - _a0 p2p.GossipSubRpcInspectorFactoryFunc
func (_e *MockGossipSubBuilder_Expecter) OverrideDefaultRpcInspectorFactory(_a0 interface{}) *MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call {
	return &MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call{Call: _e.mock.On("OverrideDefaultRpcInspectorFactory", _a0)}
}

func (_c *MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call) Run(run func(_a0 p2p.GossipSubRpcInspectorFactoryFunc)) *MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(p2p.GossipSubRpcInspectorFactoryFunc))
	})
	return _c
}

func (_c *MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call) Return() *MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call) RunAndReturn(run func(p2p.GossipSubRpcInspectorFactoryFunc)) *MockGossipSubBuilder_OverrideDefaultRpcInspectorFactory_Call {
	_c.Run(run)
	return _c
}

// OverrideDefaultValidateQueueSize provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) OverrideDefaultValidateQueueSize(_a0 int) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OverrideDefaultValidateQueueSize'
type MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call struct {
	*mock.Call
}

// OverrideDefaultValidateQueueSize is a helper method to define mock.On call
//   - _a0 int
func (_e *MockGossipSubBuilder_Expecter) OverrideDefaultValidateQueueSize(_a0 interface{}) *MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call {
	return &MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call{Call: _e.mock.On("OverrideDefaultValidateQueueSize", _a0)}
}

func (_c *MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call) Run(run func(_a0 int)) *MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call) Return() *MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call) RunAndReturn(run func(int)) *MockGossipSubBuilder_OverrideDefaultValidateQueueSize_Call {
	_c.Run(run)
	return _c
}

// SetGossipSubConfigFunc provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) SetGossipSubConfigFunc(_a0 p2p.GossipSubAdapterConfigFunc) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_SetGossipSubConfigFunc_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetGossipSubConfigFunc'
type MockGossipSubBuilder_SetGossipSubConfigFunc_Call struct {
	*mock.Call
}

// SetGossipSubConfigFunc is a helper method to define mock.On call
//   - _a0 p2p.GossipSubAdapterConfigFunc
func (_e *MockGossipSubBuilder_Expecter) SetGossipSubConfigFunc(_a0 interface{}) *MockGossipSubBuilder_SetGossipSubConfigFunc_Call {
	return &MockGossipSubBuilder_SetGossipSubConfigFunc_Call{Call: _e.mock.On("SetGossipSubConfigFunc", _a0)}
}

func (_c *MockGossipSubBuilder_SetGossipSubConfigFunc_Call) Run(run func(_a0 p2p.GossipSubAdapterConfigFunc)) *MockGossipSubBuilder_SetGossipSubConfigFunc_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(p2p.GossipSubAdapterConfigFunc))
	})
	return _c
}

func (_c *MockGossipSubBuilder_SetGossipSubConfigFunc_Call) Return() *MockGossipSubBuilder_SetGossipSubConfigFunc_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_SetGossipSubConfigFunc_Call) RunAndReturn(run func(p2p.GossipSubAdapterConfigFunc)) *MockGossipSubBuilder_SetGossipSubConfigFunc_Call {
	_c.Run(run)
	return _c
}

// SetGossipSubFactory provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) SetGossipSubFactory(_a0 p2p.GossipSubFactoryFunc) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_SetGossipSubFactory_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetGossipSubFactory'
type MockGossipSubBuilder_SetGossipSubFactory_Call struct {
	*mock.Call
}

// SetGossipSubFactory is a helper method to define mock.On call
//   - _a0 p2p.GossipSubFactoryFunc
func (_e *MockGossipSubBuilder_Expecter) SetGossipSubFactory(_a0 interface{}) *MockGossipSubBuilder_SetGossipSubFactory_Call {
	return &MockGossipSubBuilder_SetGossipSubFactory_Call{Call: _e.mock.On("SetGossipSubFactory", _a0)}
}

func (_c *MockGossipSubBuilder_SetGossipSubFactory_Call) Run(run func(_a0 p2p.GossipSubFactoryFunc)) *MockGossipSubBuilder_SetGossipSubFactory_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(p2p.GossipSubFactoryFunc))
	})
	return _c
}

func (_c *MockGossipSubBuilder_SetGossipSubFactory_Call) Return() *MockGossipSubBuilder_SetGossipSubFactory_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_SetGossipSubFactory_Call) RunAndReturn(run func(p2p.GossipSubFactoryFunc)) *MockGossipSubBuilder_SetGossipSubFactory_Call {
	_c.Run(run)
	return _c
}

// SetHost provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) SetHost(_a0 host.Host) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_SetHost_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetHost'
type MockGossipSubBuilder_SetHost_Call struct {
	*mock.Call
}

// SetHost is a helper method to define mock.On call
//   - _a0 host.Host
func (_e *MockGossipSubBuilder_Expecter) SetHost(_a0 interface{}) *MockGossipSubBuilder_SetHost_Call {
	return &MockGossipSubBuilder_SetHost_Call{Call: _e.mock.On("SetHost", _a0)}
}

func (_c *MockGossipSubBuilder_SetHost_Call) Run(run func(_a0 host.Host)) *MockGossipSubBuilder_SetHost_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(host.Host))
	})
	return _c
}

func (_c *MockGossipSubBuilder_SetHost_Call) Return() *MockGossipSubBuilder_SetHost_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_SetHost_Call) RunAndReturn(run func(host.Host)) *MockGossipSubBuilder_SetHost_Call {
	_c.Run(run)
	return _c
}

// SetRoutingSystem provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) SetRoutingSystem(_a0 routing.Routing) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_SetRoutingSystem_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetRoutingSystem'
type MockGossipSubBuilder_SetRoutingSystem_Call struct {
	*mock.Call
}

// SetRoutingSystem is a helper method to define mock.On call
//   - _a0 routing.Routing
func (_e *MockGossipSubBuilder_Expecter) SetRoutingSystem(_a0 interface{}) *MockGossipSubBuilder_SetRoutingSystem_Call {
	return &MockGossipSubBuilder_SetRoutingSystem_Call{Call: _e.mock.On("SetRoutingSystem", _a0)}
}

func (_c *MockGossipSubBuilder_SetRoutingSystem_Call) Run(run func(_a0 routing.Routing)) *MockGossipSubBuilder_SetRoutingSystem_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(routing.Routing))
	})
	return _c
}

func (_c *MockGossipSubBuilder_SetRoutingSystem_Call) Return() *MockGossipSubBuilder_SetRoutingSystem_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_SetRoutingSystem_Call) RunAndReturn(run func(routing.Routing)) *MockGossipSubBuilder_SetRoutingSystem_Call {
	_c.Run(run)
	return _c
}

// SetSubscriptionFilter provides a mock function with given fields: _a0
func (_m *MockGossipSubBuilder) SetSubscriptionFilter(_a0 pubsub.SubscriptionFilter) {
	_m.Called(_a0)
}

// MockGossipSubBuilder_SetSubscriptionFilter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetSubscriptionFilter'
type MockGossipSubBuilder_SetSubscriptionFilter_Call struct {
	*mock.Call
}

// SetSubscriptionFilter is a helper method to define mock.On call
//   - _a0 pubsub.SubscriptionFilter
func (_e *MockGossipSubBuilder_Expecter) SetSubscriptionFilter(_a0 interface{}) *MockGossipSubBuilder_SetSubscriptionFilter_Call {
	return &MockGossipSubBuilder_SetSubscriptionFilter_Call{Call: _e.mock.On("SetSubscriptionFilter", _a0)}
}

func (_c *MockGossipSubBuilder_SetSubscriptionFilter_Call) Run(run func(_a0 pubsub.SubscriptionFilter)) *MockGossipSubBuilder_SetSubscriptionFilter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(pubsub.SubscriptionFilter))
	})
	return _c
}

func (_c *MockGossipSubBuilder_SetSubscriptionFilter_Call) Return() *MockGossipSubBuilder_SetSubscriptionFilter_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubBuilder_SetSubscriptionFilter_Call) RunAndReturn(run func(pubsub.SubscriptionFilter)) *MockGossipSubBuilder_SetSubscriptionFilter_Call {
	_c.Run(run)
	return _c
}

// NewMockGossipSubBuilder creates a new instance of MockGossipSubBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGossipSubBuilder(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGossipSubBuilder {
	mock := &MockGossipSubBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
