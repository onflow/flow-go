// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocknetwork

import (
	context "context"

	message "github.com/onflow/flow-go/network/message"
	mock "github.com/stretchr/testify/mock"

	peer "github.com/libp2p/go-libp2p-core/peer"

	time "time"
)

// PingService is an autogenerated mock type for the PingService type
type PingService struct {
	mock.Mock
}

// Ping provides a mock function with given fields: ctx, peerID
func (_m *PingService) Ping(ctx context.Context, peerID peer.ID) (message.PingResponse, time.Duration, error) {
	ret := _m.Called(ctx, peerID)

	var r0 message.PingResponse
	if rf, ok := ret.Get(0).(func(context.Context, peer.ID) message.PingResponse); ok {
		r0 = rf(ctx, peerID)
	} else {
		r0 = ret.Get(0).(message.PingResponse)
	}

	var r1 time.Duration
	if rf, ok := ret.Get(1).(func(context.Context, peer.ID) time.Duration); ok {
		r1 = rf(ctx, peerID)
	} else {
		r1 = ret.Get(1).(time.Duration)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, peer.ID) error); ok {
		r2 = rf(ctx, peerID)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
