// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocknetwork

import mock "github.com/stretchr/testify/mock"

// MessageQueue is an autogenerated mock type for the MessageQueue type
type MessageQueue struct {
	mock.Mock
}

// Insert provides a mock function with given fields: message
func (_m *MessageQueue) Insert(message interface{}) error {
	ret := _m.Called(message)

	if len(ret) == 0 {
		panic("no return value specified for Insert")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Len provides a mock function with given fields:
func (_m *MessageQueue) Len() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Len")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Remove provides a mock function with given fields:
func (_m *MessageQueue) Remove() interface{} {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Remove")
	}

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// NewMessageQueue creates a new instance of MessageQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMessageQueue(t interface {
	mock.TestingT
	Cleanup(func())
}) *MessageQueue {
	mock := &MessageQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
