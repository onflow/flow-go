// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocknetwork

import (
	p2p "github.com/onflow/flow-go/network/p2p"
	mock "github.com/stretchr/testify/mock"
)

// MockPeerScore is an autogenerated mock type for the PeerScore type
type MockPeerScore struct {
	mock.Mock
}

type MockPeerScore_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPeerScore) EXPECT() *MockPeerScore_Expecter {
	return &MockPeerScore_Expecter{mock: &_m.Mock}
}

// PeerScoreExposer provides a mock function with no fields
func (_m *MockPeerScore) PeerScoreExposer() p2p.PeerScoreExposer {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for PeerScoreExposer")
	}

	var r0 p2p.PeerScoreExposer
	if rf, ok := ret.Get(0).(func() p2p.PeerScoreExposer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(p2p.PeerScoreExposer)
		}
	}

	return r0
}

// MockPeerScore_PeerScoreExposer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PeerScoreExposer'
type MockPeerScore_PeerScoreExposer_Call struct {
	*mock.Call
}

// PeerScoreExposer is a helper method to define mock.On call
func (_e *MockPeerScore_Expecter) PeerScoreExposer() *MockPeerScore_PeerScoreExposer_Call {
	return &MockPeerScore_PeerScoreExposer_Call{Call: _e.mock.On("PeerScoreExposer")}
}

func (_c *MockPeerScore_PeerScoreExposer_Call) Run(run func()) *MockPeerScore_PeerScoreExposer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPeerScore_PeerScoreExposer_Call) Return(_a0 p2p.PeerScoreExposer) *MockPeerScore_PeerScoreExposer_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPeerScore_PeerScoreExposer_Call) RunAndReturn(run func() p2p.PeerScoreExposer) *MockPeerScore_PeerScoreExposer_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPeerScore creates a new instance of MockPeerScore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPeerScore(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPeerScore {
	mock := &MockPeerScore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
