// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocknetwork

import (
	network "github.com/onflow/flow-go/network"
	mock "github.com/stretchr/testify/mock"
)

// MockViolationsConsumer is an autogenerated mock type for the ViolationsConsumer type
type MockViolationsConsumer struct {
	mock.Mock
}

type MockViolationsConsumer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockViolationsConsumer) EXPECT() *MockViolationsConsumer_Expecter {
	return &MockViolationsConsumer_Expecter{mock: &_m.Mock}
}

// OnInvalidMsgError provides a mock function with given fields: violation
func (_m *MockViolationsConsumer) OnInvalidMsgError(violation *network.Violation) {
	_m.Called(violation)
}

// MockViolationsConsumer_OnInvalidMsgError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnInvalidMsgError'
type MockViolationsConsumer_OnInvalidMsgError_Call struct {
	*mock.Call
}

// OnInvalidMsgError is a helper method to define mock.On call
//   - violation *network.Violation
func (_e *MockViolationsConsumer_Expecter) OnInvalidMsgError(violation interface{}) *MockViolationsConsumer_OnInvalidMsgError_Call {
	return &MockViolationsConsumer_OnInvalidMsgError_Call{Call: _e.mock.On("OnInvalidMsgError", violation)}
}

func (_c *MockViolationsConsumer_OnInvalidMsgError_Call) Run(run func(violation *network.Violation)) *MockViolationsConsumer_OnInvalidMsgError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*network.Violation))
	})
	return _c
}

func (_c *MockViolationsConsumer_OnInvalidMsgError_Call) Return() *MockViolationsConsumer_OnInvalidMsgError_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockViolationsConsumer_OnInvalidMsgError_Call) RunAndReturn(run func(*network.Violation)) *MockViolationsConsumer_OnInvalidMsgError_Call {
	_c.Run(run)
	return _c
}

// OnSenderEjectedError provides a mock function with given fields: violation
func (_m *MockViolationsConsumer) OnSenderEjectedError(violation *network.Violation) {
	_m.Called(violation)
}

// MockViolationsConsumer_OnSenderEjectedError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnSenderEjectedError'
type MockViolationsConsumer_OnSenderEjectedError_Call struct {
	*mock.Call
}

// OnSenderEjectedError is a helper method to define mock.On call
//   - violation *network.Violation
func (_e *MockViolationsConsumer_Expecter) OnSenderEjectedError(violation interface{}) *MockViolationsConsumer_OnSenderEjectedError_Call {
	return &MockViolationsConsumer_OnSenderEjectedError_Call{Call: _e.mock.On("OnSenderEjectedError", violation)}
}

func (_c *MockViolationsConsumer_OnSenderEjectedError_Call) Run(run func(violation *network.Violation)) *MockViolationsConsumer_OnSenderEjectedError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*network.Violation))
	})
	return _c
}

func (_c *MockViolationsConsumer_OnSenderEjectedError_Call) Return() *MockViolationsConsumer_OnSenderEjectedError_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockViolationsConsumer_OnSenderEjectedError_Call) RunAndReturn(run func(*network.Violation)) *MockViolationsConsumer_OnSenderEjectedError_Call {
	_c.Run(run)
	return _c
}

// OnUnAuthorizedSenderError provides a mock function with given fields: violation
func (_m *MockViolationsConsumer) OnUnAuthorizedSenderError(violation *network.Violation) {
	_m.Called(violation)
}

// MockViolationsConsumer_OnUnAuthorizedSenderError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUnAuthorizedSenderError'
type MockViolationsConsumer_OnUnAuthorizedSenderError_Call struct {
	*mock.Call
}

// OnUnAuthorizedSenderError is a helper method to define mock.On call
//   - violation *network.Violation
func (_e *MockViolationsConsumer_Expecter) OnUnAuthorizedSenderError(violation interface{}) *MockViolationsConsumer_OnUnAuthorizedSenderError_Call {
	return &MockViolationsConsumer_OnUnAuthorizedSenderError_Call{Call: _e.mock.On("OnUnAuthorizedSenderError", violation)}
}

func (_c *MockViolationsConsumer_OnUnAuthorizedSenderError_Call) Run(run func(violation *network.Violation)) *MockViolationsConsumer_OnUnAuthorizedSenderError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*network.Violation))
	})
	return _c
}

func (_c *MockViolationsConsumer_OnUnAuthorizedSenderError_Call) Return() *MockViolationsConsumer_OnUnAuthorizedSenderError_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockViolationsConsumer_OnUnAuthorizedSenderError_Call) RunAndReturn(run func(*network.Violation)) *MockViolationsConsumer_OnUnAuthorizedSenderError_Call {
	_c.Run(run)
	return _c
}

// OnUnauthorizedPublishOnChannel provides a mock function with given fields: violation
func (_m *MockViolationsConsumer) OnUnauthorizedPublishOnChannel(violation *network.Violation) {
	_m.Called(violation)
}

// MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUnauthorizedPublishOnChannel'
type MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call struct {
	*mock.Call
}

// OnUnauthorizedPublishOnChannel is a helper method to define mock.On call
//   - violation *network.Violation
func (_e *MockViolationsConsumer_Expecter) OnUnauthorizedPublishOnChannel(violation interface{}) *MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call {
	return &MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call{Call: _e.mock.On("OnUnauthorizedPublishOnChannel", violation)}
}

func (_c *MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call) Run(run func(violation *network.Violation)) *MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*network.Violation))
	})
	return _c
}

func (_c *MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call) Return() *MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call) RunAndReturn(run func(*network.Violation)) *MockViolationsConsumer_OnUnauthorizedPublishOnChannel_Call {
	_c.Run(run)
	return _c
}

// OnUnauthorizedUnicastOnChannel provides a mock function with given fields: violation
func (_m *MockViolationsConsumer) OnUnauthorizedUnicastOnChannel(violation *network.Violation) {
	_m.Called(violation)
}

// MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUnauthorizedUnicastOnChannel'
type MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call struct {
	*mock.Call
}

// OnUnauthorizedUnicastOnChannel is a helper method to define mock.On call
//   - violation *network.Violation
func (_e *MockViolationsConsumer_Expecter) OnUnauthorizedUnicastOnChannel(violation interface{}) *MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call {
	return &MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call{Call: _e.mock.On("OnUnauthorizedUnicastOnChannel", violation)}
}

func (_c *MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call) Run(run func(violation *network.Violation)) *MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*network.Violation))
	})
	return _c
}

func (_c *MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call) Return() *MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call) RunAndReturn(run func(*network.Violation)) *MockViolationsConsumer_OnUnauthorizedUnicastOnChannel_Call {
	_c.Run(run)
	return _c
}

// OnUnexpectedError provides a mock function with given fields: violation
func (_m *MockViolationsConsumer) OnUnexpectedError(violation *network.Violation) {
	_m.Called(violation)
}

// MockViolationsConsumer_OnUnexpectedError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUnexpectedError'
type MockViolationsConsumer_OnUnexpectedError_Call struct {
	*mock.Call
}

// OnUnexpectedError is a helper method to define mock.On call
//   - violation *network.Violation
func (_e *MockViolationsConsumer_Expecter) OnUnexpectedError(violation interface{}) *MockViolationsConsumer_OnUnexpectedError_Call {
	return &MockViolationsConsumer_OnUnexpectedError_Call{Call: _e.mock.On("OnUnexpectedError", violation)}
}

func (_c *MockViolationsConsumer_OnUnexpectedError_Call) Run(run func(violation *network.Violation)) *MockViolationsConsumer_OnUnexpectedError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*network.Violation))
	})
	return _c
}

func (_c *MockViolationsConsumer_OnUnexpectedError_Call) Return() *MockViolationsConsumer_OnUnexpectedError_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockViolationsConsumer_OnUnexpectedError_Call) RunAndReturn(run func(*network.Violation)) *MockViolationsConsumer_OnUnexpectedError_Call {
	_c.Run(run)
	return _c
}

// OnUnknownMsgTypeError provides a mock function with given fields: violation
func (_m *MockViolationsConsumer) OnUnknownMsgTypeError(violation *network.Violation) {
	_m.Called(violation)
}

// MockViolationsConsumer_OnUnknownMsgTypeError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUnknownMsgTypeError'
type MockViolationsConsumer_OnUnknownMsgTypeError_Call struct {
	*mock.Call
}

// OnUnknownMsgTypeError is a helper method to define mock.On call
//   - violation *network.Violation
func (_e *MockViolationsConsumer_Expecter) OnUnknownMsgTypeError(violation interface{}) *MockViolationsConsumer_OnUnknownMsgTypeError_Call {
	return &MockViolationsConsumer_OnUnknownMsgTypeError_Call{Call: _e.mock.On("OnUnknownMsgTypeError", violation)}
}

func (_c *MockViolationsConsumer_OnUnknownMsgTypeError_Call) Run(run func(violation *network.Violation)) *MockViolationsConsumer_OnUnknownMsgTypeError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*network.Violation))
	})
	return _c
}

func (_c *MockViolationsConsumer_OnUnknownMsgTypeError_Call) Return() *MockViolationsConsumer_OnUnknownMsgTypeError_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockViolationsConsumer_OnUnknownMsgTypeError_Call) RunAndReturn(run func(*network.Violation)) *MockViolationsConsumer_OnUnknownMsgTypeError_Call {
	_c.Run(run)
	return _c
}

// NewMockViolationsConsumer creates a new instance of MockViolationsConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockViolationsConsumer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockViolationsConsumer {
	mock := &MockViolationsConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
