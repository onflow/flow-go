// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockalsp

import (
	alsp "github.com/onflow/flow-go/network/alsp"
	mock "github.com/stretchr/testify/mock"
)

// MisbehaviorReportOpt is an autogenerated mock type for the MisbehaviorReportOpt type
type MisbehaviorReportOpt struct {
	mock.Mock
}

// Execute provides a mock function with given fields: r
func (_m *MisbehaviorReportOpt) Execute(r *alsp.MisbehaviorReport) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(*alsp.MisbehaviorReport) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMisbehaviorReportOpt interface {
	mock.TestingT
	Cleanup(func())
}

// NewMisbehaviorReportOpt creates a new instance of MisbehaviorReportOpt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMisbehaviorReportOpt(t mockConstructorTestingTNewMisbehaviorReportOpt) *MisbehaviorReportOpt {
	mock := &MisbehaviorReportOpt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
