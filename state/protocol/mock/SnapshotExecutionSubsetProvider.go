// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	protocol "github.com/onflow/flow-go/state/protocol"
)

// MockSnapshotExecutionSubsetProvider is an autogenerated mock type for the SnapshotExecutionSubsetProvider type
type MockSnapshotExecutionSubsetProvider struct {
	mock.Mock
}

type MockSnapshotExecutionSubsetProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSnapshotExecutionSubsetProvider) EXPECT() *MockSnapshotExecutionSubsetProvider_Expecter {
	return &MockSnapshotExecutionSubsetProvider_Expecter{mock: &_m.Mock}
}

// AtBlockID provides a mock function with given fields: blockID
func (_m *MockSnapshotExecutionSubsetProvider) AtBlockID(blockID flow.Identifier) protocol.SnapshotExecutionSubset {
	ret := _m.Called(blockID)

	if len(ret) == 0 {
		panic("no return value specified for AtBlockID")
	}

	var r0 protocol.SnapshotExecutionSubset
	if rf, ok := ret.Get(0).(func(flow.Identifier) protocol.SnapshotExecutionSubset); ok {
		r0 = rf(blockID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(protocol.SnapshotExecutionSubset)
		}
	}

	return r0
}

// MockSnapshotExecutionSubsetProvider_AtBlockID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AtBlockID'
type MockSnapshotExecutionSubsetProvider_AtBlockID_Call struct {
	*mock.Call
}

// AtBlockID is a helper method to define mock.On call
//   - blockID flow.Identifier
func (_e *MockSnapshotExecutionSubsetProvider_Expecter) AtBlockID(blockID interface{}) *MockSnapshotExecutionSubsetProvider_AtBlockID_Call {
	return &MockSnapshotExecutionSubsetProvider_AtBlockID_Call{Call: _e.mock.On("AtBlockID", blockID)}
}

func (_c *MockSnapshotExecutionSubsetProvider_AtBlockID_Call) Run(run func(blockID flow.Identifier)) *MockSnapshotExecutionSubsetProvider_AtBlockID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier))
	})
	return _c
}

func (_c *MockSnapshotExecutionSubsetProvider_AtBlockID_Call) Return(_a0 protocol.SnapshotExecutionSubset) *MockSnapshotExecutionSubsetProvider_AtBlockID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSnapshotExecutionSubsetProvider_AtBlockID_Call) RunAndReturn(run func(flow.Identifier) protocol.SnapshotExecutionSubset) *MockSnapshotExecutionSubsetProvider_AtBlockID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSnapshotExecutionSubsetProvider creates a new instance of MockSnapshotExecutionSubsetProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSnapshotExecutionSubsetProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSnapshotExecutionSubsetProvider {
	mock := &MockSnapshotExecutionSubsetProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
