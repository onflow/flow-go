// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockVersionedEncodable is an autogenerated mock type for the VersionedEncodable type
type MockVersionedEncodable struct {
	mock.Mock
}

type MockVersionedEncodable_Expecter struct {
	mock *mock.Mock
}

func (_m *MockVersionedEncodable) EXPECT() *MockVersionedEncodable_Expecter {
	return &MockVersionedEncodable_Expecter{mock: &_m.Mock}
}

// VersionedEncode provides a mock function with no fields
func (_m *MockVersionedEncodable) VersionedEncode() (uint64, []byte, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for VersionedEncode")
	}

	var r0 uint64
	var r1 []byte
	var r2 error
	if rf, ok := ret.Get(0).(func() (uint64, []byte, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	if rf, ok := ret.Get(1).(func() []byte); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]byte)
		}
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockVersionedEncodable_VersionedEncode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VersionedEncode'
type MockVersionedEncodable_VersionedEncode_Call struct {
	*mock.Call
}

// VersionedEncode is a helper method to define mock.On call
func (_e *MockVersionedEncodable_Expecter) VersionedEncode() *MockVersionedEncodable_VersionedEncode_Call {
	return &MockVersionedEncodable_VersionedEncode_Call{Call: _e.mock.On("VersionedEncode")}
}

func (_c *MockVersionedEncodable_VersionedEncode_Call) Run(run func()) *MockVersionedEncodable_VersionedEncode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockVersionedEncodable_VersionedEncode_Call) Return(_a0 uint64, _a1 []byte, _a2 error) *MockVersionedEncodable_VersionedEncode_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockVersionedEncodable_VersionedEncode_Call) RunAndReturn(run func() (uint64, []byte, error)) *MockVersionedEncodable_VersionedEncode_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockVersionedEncodable creates a new instance of MockVersionedEncodable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockVersionedEncodable(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockVersionedEncodable {
	mock := &MockVersionedEncodable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
