// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockHeights is an autogenerated mock type for the Heights type
type MockHeights struct {
	mock.Mock
}

type MockHeights_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHeights) EXPECT() *MockHeights_Expecter {
	return &MockHeights_Expecter{mock: &_m.Mock}
}

// OnHeight provides a mock function with given fields: height, callback
func (_m *MockHeights) OnHeight(height uint64, callback func()) {
	_m.Called(height, callback)
}

// MockHeights_OnHeight_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnHeight'
type MockHeights_OnHeight_Call struct {
	*mock.Call
}

// OnHeight is a helper method to define mock.On call
//   - height uint64
//   - callback func()
func (_e *MockHeights_Expecter) OnHeight(height interface{}, callback interface{}) *MockHeights_OnHeight_Call {
	return &MockHeights_OnHeight_Call{Call: _e.mock.On("OnHeight", height, callback)}
}

func (_c *MockHeights_OnHeight_Call) Run(run func(height uint64, callback func())) *MockHeights_OnHeight_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64), args[1].(func()))
	})
	return _c
}

func (_c *MockHeights_OnHeight_Call) Return() *MockHeights_OnHeight_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeights_OnHeight_Call) RunAndReturn(run func(uint64, func())) *MockHeights_OnHeight_Call {
	_c.Run(run)
	return _c
}

// NewMockHeights creates a new instance of MockHeights. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHeights(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHeights {
	mock := &MockHeights{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
