// Code generated by mockery. DO NOT EDIT.

package mock

import (
	lockctx "github.com/jordanschalm/lockctx"
	mock "github.com/stretchr/testify/mock"
)

// LockManager is an autogenerated mock type for the LockManager type
type LockManager struct {
	mock.Mock
}

// NewContext provides a mock function with no fields
func (_m *LockManager) NewContext() lockctx.Context {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for NewContext")
	}

	var r0 lockctx.Context
	if rf, ok := ret.Get(0).(func() lockctx.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(lockctx.Context)
		}
	}

	return r0
}

// NewLockManager creates a new instance of LockManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLockManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *LockManager {
	mock := &LockManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
