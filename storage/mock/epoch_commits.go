// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock

import (
	badger "github.com/dgraph-io/badger/v2"
	flow "github.com/onflow/flow-go/model/flow"

	mock "github.com/stretchr/testify/mock"
)

// EpochCommits is an autogenerated mock type for the EpochCommits type
type EpochCommits struct {
	mock.Mock
}

// ByID provides a mock function with given fields: _a0
func (_m *EpochCommits) ByID(_a0 flow.Identifier) (*flow.EpochCommit, error) {
	ret := _m.Called(_a0)

	var r0 *flow.EpochCommit
	if rf, ok := ret.Get(0).(func(flow.Identifier) *flow.EpochCommit); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*flow.EpochCommit)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(flow.Identifier) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StoreTx provides a mock function with given fields: commit
func (_m *EpochCommits) StoreTx(commit *flow.EpochCommit) func(*badger.Txn) error {
	ret := _m.Called(commit)

	var r0 func(*badger.Txn) error
	if rf, ok := ret.Get(0).(func(*flow.EpochCommit) func(*badger.Txn) error); ok {
		r0 = rf(commit)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(*badger.Txn) error)
		}
	}

	return r0
}
