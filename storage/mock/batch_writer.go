// Code generated by mockery v2.21.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// BatchWriter is an autogenerated mock type for the BatchWriter type
type BatchWriter struct {
	mock.Mock
}

// Delete provides a mock function with given fields: key
func (_m *BatchWriter) Delete(key []byte) error {
	ret := _m.Called(key)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: key, val
func (_m *BatchWriter) Set(key []byte, val []byte) error {
	ret := _m.Called(key, val)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, []byte) error); ok {
		r0 = rf(key, val)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBatchWriter interface {
	mock.TestingT
	Cleanup(func())
}

// NewBatchWriter creates a new instance of BatchWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBatchWriter(t mockConstructorTestingTNewBatchWriter) *BatchWriter {
	mock := &BatchWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
