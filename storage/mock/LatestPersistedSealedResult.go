// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	storage "github.com/onflow/flow-go/storage"
)

// MockLatestPersistedSealedResult is an autogenerated mock type for the LatestPersistedSealedResult type
type MockLatestPersistedSealedResult struct {
	mock.Mock
}

type MockLatestPersistedSealedResult_Expecter struct {
	mock *mock.Mock
}

func (_m *MockLatestPersistedSealedResult) EXPECT() *MockLatestPersistedSealedResult_Expecter {
	return &MockLatestPersistedSealedResult_Expecter{mock: &_m.Mock}
}

// BatchSet provides a mock function with given fields: resultID, height, batch
func (_m *MockLatestPersistedSealedResult) BatchSet(resultID flow.Identifier, height uint64, batch storage.ReaderBatchWriter) error {
	ret := _m.Called(resultID, height, batch)

	if len(ret) == 0 {
		panic("no return value specified for BatchSet")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(flow.Identifier, uint64, storage.ReaderBatchWriter) error); ok {
		r0 = rf(resultID, height, batch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockLatestPersistedSealedResult_BatchSet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BatchSet'
type MockLatestPersistedSealedResult_BatchSet_Call struct {
	*mock.Call
}

// BatchSet is a helper method to define mock.On call
//   - resultID flow.Identifier
//   - height uint64
//   - batch storage.ReaderBatchWriter
func (_e *MockLatestPersistedSealedResult_Expecter) BatchSet(resultID interface{}, height interface{}, batch interface{}) *MockLatestPersistedSealedResult_BatchSet_Call {
	return &MockLatestPersistedSealedResult_BatchSet_Call{Call: _e.mock.On("BatchSet", resultID, height, batch)}
}

func (_c *MockLatestPersistedSealedResult_BatchSet_Call) Run(run func(resultID flow.Identifier, height uint64, batch storage.ReaderBatchWriter)) *MockLatestPersistedSealedResult_BatchSet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier), args[1].(uint64), args[2].(storage.ReaderBatchWriter))
	})
	return _c
}

func (_c *MockLatestPersistedSealedResult_BatchSet_Call) Return(_a0 error) *MockLatestPersistedSealedResult_BatchSet_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockLatestPersistedSealedResult_BatchSet_Call) RunAndReturn(run func(flow.Identifier, uint64, storage.ReaderBatchWriter) error) *MockLatestPersistedSealedResult_BatchSet_Call {
	_c.Call.Return(run)
	return _c
}

// Latest provides a mock function with no fields
func (_m *MockLatestPersistedSealedResult) Latest() (flow.Identifier, uint64) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Latest")
	}

	var r0 flow.Identifier
	var r1 uint64
	if rf, ok := ret.Get(0).(func() (flow.Identifier, uint64)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() flow.Identifier); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.Identifier)
		}
	}

	if rf, ok := ret.Get(1).(func() uint64); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(uint64)
	}

	return r0, r1
}

// MockLatestPersistedSealedResult_Latest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Latest'
type MockLatestPersistedSealedResult_Latest_Call struct {
	*mock.Call
}

// Latest is a helper method to define mock.On call
func (_e *MockLatestPersistedSealedResult_Expecter) Latest() *MockLatestPersistedSealedResult_Latest_Call {
	return &MockLatestPersistedSealedResult_Latest_Call{Call: _e.mock.On("Latest")}
}

func (_c *MockLatestPersistedSealedResult_Latest_Call) Run(run func()) *MockLatestPersistedSealedResult_Latest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockLatestPersistedSealedResult_Latest_Call) Return(_a0 flow.Identifier, _a1 uint64) *MockLatestPersistedSealedResult_Latest_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockLatestPersistedSealedResult_Latest_Call) RunAndReturn(run func() (flow.Identifier, uint64)) *MockLatestPersistedSealedResult_Latest_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockLatestPersistedSealedResult creates a new instance of MockLatestPersistedSealedResult. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLatestPersistedSealedResult(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLatestPersistedSealedResult {
	mock := &MockLatestPersistedSealedResult{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
