// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockCommitsReader is an autogenerated mock type for the CommitsReader type
type MockCommitsReader struct {
	mock.Mock
}

type MockCommitsReader_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCommitsReader) EXPECT() *MockCommitsReader_Expecter {
	return &MockCommitsReader_Expecter{mock: &_m.Mock}
}

// ByBlockID provides a mock function with given fields: blockID
func (_m *MockCommitsReader) ByBlockID(blockID flow.Identifier) (flow.StateCommitment, error) {
	ret := _m.Called(blockID)

	if len(ret) == 0 {
		panic("no return value specified for ByBlockID")
	}

	var r0 flow.StateCommitment
	var r1 error
	if rf, ok := ret.Get(0).(func(flow.Identifier) (flow.StateCommitment, error)); ok {
		return rf(blockID)
	}
	if rf, ok := ret.Get(0).(func(flow.Identifier) flow.StateCommitment); ok {
		r0 = rf(blockID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.StateCommitment)
		}
	}

	if rf, ok := ret.Get(1).(func(flow.Identifier) error); ok {
		r1 = rf(blockID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockCommitsReader_ByBlockID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ByBlockID'
type MockCommitsReader_ByBlockID_Call struct {
	*mock.Call
}

// ByBlockID is a helper method to define mock.On call
//   - blockID flow.Identifier
func (_e *MockCommitsReader_Expecter) ByBlockID(blockID interface{}) *MockCommitsReader_ByBlockID_Call {
	return &MockCommitsReader_ByBlockID_Call{Call: _e.mock.On("ByBlockID", blockID)}
}

func (_c *MockCommitsReader_ByBlockID_Call) Run(run func(blockID flow.Identifier)) *MockCommitsReader_ByBlockID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier))
	})
	return _c
}

func (_c *MockCommitsReader_ByBlockID_Call) Return(_a0 flow.StateCommitment, _a1 error) *MockCommitsReader_ByBlockID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockCommitsReader_ByBlockID_Call) RunAndReturn(run func(flow.Identifier) (flow.StateCommitment, error)) *MockCommitsReader_ByBlockID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCommitsReader creates a new instance of MockCommitsReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCommitsReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCommitsReader {
	mock := &MockCommitsReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
