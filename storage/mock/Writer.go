// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	storage "github.com/onflow/flow-go/storage"
	mock "github.com/stretchr/testify/mock"
)

// MockWriter is an autogenerated mock type for the Writer type
type MockWriter struct {
	mock.Mock
}

type MockWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockWriter) EXPECT() *MockWriter_Expecter {
	return &MockWriter_Expecter{mock: &_m.Mock}
}

// Delete provides a mock function with given fields: key
func (_m *MockWriter) Delete(key []byte) error {
	ret := _m.Called(key)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockWriter_Delete_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Delete'
type MockWriter_Delete_Call struct {
	*mock.Call
}

// Delete is a helper method to define mock.On call
//   - key []byte
func (_e *MockWriter_Expecter) Delete(key interface{}) *MockWriter_Delete_Call {
	return &MockWriter_Delete_Call{Call: _e.mock.On("Delete", key)}
}

func (_c *MockWriter_Delete_Call) Run(run func(key []byte)) *MockWriter_Delete_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *MockWriter_Delete_Call) Return(_a0 error) *MockWriter_Delete_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockWriter_Delete_Call) RunAndReturn(run func([]byte) error) *MockWriter_Delete_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteByRange provides a mock function with given fields: globalReader, startPrefix, endPrefix
func (_m *MockWriter) DeleteByRange(globalReader storage.Reader, startPrefix []byte, endPrefix []byte) error {
	ret := _m.Called(globalReader, startPrefix, endPrefix)

	if len(ret) == 0 {
		panic("no return value specified for DeleteByRange")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(storage.Reader, []byte, []byte) error); ok {
		r0 = rf(globalReader, startPrefix, endPrefix)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockWriter_DeleteByRange_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteByRange'
type MockWriter_DeleteByRange_Call struct {
	*mock.Call
}

// DeleteByRange is a helper method to define mock.On call
//   - globalReader storage.Reader
//   - startPrefix []byte
//   - endPrefix []byte
func (_e *MockWriter_Expecter) DeleteByRange(globalReader interface{}, startPrefix interface{}, endPrefix interface{}) *MockWriter_DeleteByRange_Call {
	return &MockWriter_DeleteByRange_Call{Call: _e.mock.On("DeleteByRange", globalReader, startPrefix, endPrefix)}
}

func (_c *MockWriter_DeleteByRange_Call) Run(run func(globalReader storage.Reader, startPrefix []byte, endPrefix []byte)) *MockWriter_DeleteByRange_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(storage.Reader), args[1].([]byte), args[2].([]byte))
	})
	return _c
}

func (_c *MockWriter_DeleteByRange_Call) Return(_a0 error) *MockWriter_DeleteByRange_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockWriter_DeleteByRange_Call) RunAndReturn(run func(storage.Reader, []byte, []byte) error) *MockWriter_DeleteByRange_Call {
	_c.Call.Return(run)
	return _c
}

// Set provides a mock function with given fields: k, v
func (_m *MockWriter) Set(k []byte, v []byte) error {
	ret := _m.Called(k, v)

	if len(ret) == 0 {
		panic("no return value specified for Set")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, []byte) error); ok {
		r0 = rf(k, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockWriter_Set_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Set'
type MockWriter_Set_Call struct {
	*mock.Call
}

// Set is a helper method to define mock.On call
//   - k []byte
//   - v []byte
func (_e *MockWriter_Expecter) Set(k interface{}, v interface{}) *MockWriter_Set_Call {
	return &MockWriter_Set_Call{Call: _e.mock.On("Set", k, v)}
}

func (_c *MockWriter_Set_Call) Run(run func(k []byte, v []byte)) *MockWriter_Set_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte), args[1].([]byte))
	})
	return _c
}

func (_c *MockWriter_Set_Call) Return(_a0 error) *MockWriter_Set_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockWriter_Set_Call) RunAndReturn(run func([]byte, []byte) error) *MockWriter_Set_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockWriter creates a new instance of MockWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWriter {
	mock := &MockWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
