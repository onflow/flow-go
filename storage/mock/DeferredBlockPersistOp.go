// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	transaction "github.com/onflow/flow-go/storage/badger/transaction"
)

// MockDeferredBlockPersistOp is an autogenerated mock type for the DeferredBlockPersistOp type
type MockDeferredBlockPersistOp struct {
	mock.Mock
}

type MockDeferredBlockPersistOp_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDeferredBlockPersistOp) EXPECT() *MockDeferredBlockPersistOp_Expecter {
	return &MockDeferredBlockPersistOp_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: blockID, tx
func (_m *MockDeferredBlockPersistOp) Execute(blockID flow.Identifier, tx *transaction.Tx) error {
	ret := _m.Called(blockID, tx)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(flow.Identifier, *transaction.Tx) error); ok {
		r0 = rf(blockID, tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockDeferredBlockPersistOp_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockDeferredBlockPersistOp_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - blockID flow.Identifier
//   - tx *transaction.Tx
func (_e *MockDeferredBlockPersistOp_Expecter) Execute(blockID interface{}, tx interface{}) *MockDeferredBlockPersistOp_Execute_Call {
	return &MockDeferredBlockPersistOp_Execute_Call{Call: _e.mock.On("Execute", blockID, tx)}
}

func (_c *MockDeferredBlockPersistOp_Execute_Call) Run(run func(blockID flow.Identifier, tx *transaction.Tx)) *MockDeferredBlockPersistOp_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier), args[1].(*transaction.Tx))
	})
	return _c
}

func (_c *MockDeferredBlockPersistOp_Execute_Call) Return(_a0 error) *MockDeferredBlockPersistOp_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDeferredBlockPersistOp_Execute_Call) RunAndReturn(run func(flow.Identifier, *transaction.Tx) error) *MockDeferredBlockPersistOp_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDeferredBlockPersistOp creates a new instance of MockDeferredBlockPersistOp. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDeferredBlockPersistOp(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDeferredBlockPersistOp {
	mock := &MockDeferredBlockPersistOp{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
