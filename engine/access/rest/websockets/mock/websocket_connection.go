// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// WebsocketConnection is an autogenerated mock type for the WebsocketConnection type
type WebsocketConnection struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *WebsocketConnection) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadJSON provides a mock function with given fields: v
func (_m *WebsocketConnection) ReadJSON(v interface{}) error {
	ret := _m.Called(v)

	if len(ret) == 0 {
		panic("no return value specified for ReadJSON")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetPongHandler provides a mock function with given fields: h
func (_m *WebsocketConnection) SetPongHandler(h func(string) error) {
	_m.Called(h)
}

// SetReadDeadline provides a mock function with given fields: deadline
func (_m *WebsocketConnection) SetReadDeadline(deadline time.Time) error {
	ret := _m.Called(deadline)

	if len(ret) == 0 {
		panic("no return value specified for SetReadDeadline")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Time) error); ok {
		r0 = rf(deadline)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetWriteDeadline provides a mock function with given fields: deadline
func (_m *WebsocketConnection) SetWriteDeadline(deadline time.Time) error {
	ret := _m.Called(deadline)

	if len(ret) == 0 {
		panic("no return value specified for SetWriteDeadline")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Time) error); ok {
		r0 = rf(deadline)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteControl provides a mock function with given fields: messageType, deadline
func (_m *WebsocketConnection) WriteControl(messageType int, deadline time.Time) error {
	ret := _m.Called(messageType, deadline)

	if len(ret) == 0 {
		panic("no return value specified for WriteControl")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int, time.Time) error); ok {
		r0 = rf(messageType, deadline)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteJSON provides a mock function with given fields: v
func (_m *WebsocketConnection) WriteJSON(v interface{}) error {
	ret := _m.Called(v)

	if len(ret) == 0 {
		panic("no return value specified for WriteJSON")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWebsocketConnection creates a new instance of WebsocketConnection. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWebsocketConnection(t interface {
	mock.TestingT
	Cleanup(func())
}) *WebsocketConnection {
	mock := &WebsocketConnection{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
