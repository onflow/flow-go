package websockets

import (
	"fmt"

	randutils "github.com/onflow/flow-go/utils/rand"
)

const maxLen = 20

// SubscriptionID represents a subscription identifier used in websockets.
// The ID can either be provided by the client or generated by the server.
// - If provided by the client, it must adhere to specific restrictions.
// - If generated by the server, it is created as a UUID.
type SubscriptionID struct {
	id string
}

// NewSubscriptionID creates a new SubscriptionID based on the provided input.
// - If the input `id` is empty, a random ID is generated and returned.
// - If the input `id` is non-empty, it is validated and returned if no errors.
func NewSubscriptionID(id string) (SubscriptionID, error) {
	if len(id) == 0 {
		randomString, err := randutils.GenerateRandomString(maxLen)
		if err != nil {
			return SubscriptionID{}, fmt.Errorf("could not generate subscription ID: %w", err)
		}

		return SubscriptionID{
			id: randomString,
		}, nil
	}

	newID, err := ParseClientSubscriptionID(id)
	if err != nil {
		return SubscriptionID{}, err
	}

	return newID, nil
}

func ParseClientSubscriptionID(id string) (SubscriptionID, error) {
	if len(id) == 0 {
		return SubscriptionID{}, fmt.Errorf("subscription ID provided by the client must not be empty")
	}

	if len(id) > maxLen {
		return SubscriptionID{}, fmt.Errorf("subscription ID provided by the client must not exceed %d characters", maxLen)
	}

	return SubscriptionID{
		id: id,
	}, nil
}

// String returns the string representation of the SubscriptionID.
func (id SubscriptionID) String() string {
	return id.id
}
