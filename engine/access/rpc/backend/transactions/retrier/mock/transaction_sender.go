// Code generated by mockery v2.53.3. DO NOT EDIT.

package mock

import (
	context "context"

	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// TransactionSender is an autogenerated mock type for the TransactionSender type
type TransactionSender struct {
	mock.Mock
}

// SendRawTransaction provides a mock function with given fields: ctx, tx
func (_m *TransactionSender) SendRawTransaction(ctx context.Context, tx *flow.TransactionBody) error {
	ret := _m.Called(ctx, tx)

	if len(ret) == 0 {
		panic("no return value specified for SendRawTransaction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *flow.TransactionBody) error); ok {
		r0 = rf(ctx, tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTransactionSender creates a new instance of TransactionSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTransactionSender(t interface {
	mock.TestingT
	Cleanup(func())
}) *TransactionSender {
	mock := &TransactionSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
