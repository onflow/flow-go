// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockNodeSelector is an autogenerated mock type for the NodeSelector type
type MockNodeSelector struct {
	mock.Mock
}

type MockNodeSelector_Expecter struct {
	mock *mock.Mock
}

func (_m *MockNodeSelector) EXPECT() *MockNodeSelector_Expecter {
	return &MockNodeSelector_Expecter{mock: &_m.Mock}
}

// HasNext provides a mock function with no fields
func (_m *MockNodeSelector) HasNext() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HasNext")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockNodeSelector_HasNext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HasNext'
type MockNodeSelector_HasNext_Call struct {
	*mock.Call
}

// HasNext is a helper method to define mock.On call
func (_e *MockNodeSelector_Expecter) HasNext() *MockNodeSelector_HasNext_Call {
	return &MockNodeSelector_HasNext_Call{Call: _e.mock.On("HasNext")}
}

func (_c *MockNodeSelector_HasNext_Call) Run(run func()) *MockNodeSelector_HasNext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNodeSelector_HasNext_Call) Return(_a0 bool) *MockNodeSelector_HasNext_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNodeSelector_HasNext_Call) RunAndReturn(run func() bool) *MockNodeSelector_HasNext_Call {
	_c.Call.Return(run)
	return _c
}

// Next provides a mock function with no fields
func (_m *MockNodeSelector) Next() *flow.IdentitySkeleton {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Next")
	}

	var r0 *flow.IdentitySkeleton
	if rf, ok := ret.Get(0).(func() *flow.IdentitySkeleton); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*flow.IdentitySkeleton)
		}
	}

	return r0
}

// MockNodeSelector_Next_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Next'
type MockNodeSelector_Next_Call struct {
	*mock.Call
}

// Next is a helper method to define mock.On call
func (_e *MockNodeSelector_Expecter) Next() *MockNodeSelector_Next_Call {
	return &MockNodeSelector_Next_Call{Call: _e.mock.On("Next")}
}

func (_c *MockNodeSelector_Next_Call) Run(run func()) *MockNodeSelector_Next_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNodeSelector_Next_Call) Return(_a0 *flow.IdentitySkeleton) *MockNodeSelector_Next_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNodeSelector_Next_Call) RunAndReturn(run func() *flow.IdentitySkeleton) *MockNodeSelector_Next_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockNodeSelector creates a new instance of MockNodeSelector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockNodeSelector(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockNodeSelector {
	mock := &MockNodeSelector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
