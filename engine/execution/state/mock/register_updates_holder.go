// Code generated by mockery v2.12.1. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// RegisterUpdatesHolder is an autogenerated mock type for the RegisterUpdatesHolder type
type RegisterUpdatesHolder struct {
	mock.Mock
}

// RegisterUpdates provides a mock function with given fields:
func (_m *RegisterUpdatesHolder) RegisterUpdates() ([]flow.RegisterID, [][]byte) {
	ret := _m.Called()

	var r0 []flow.RegisterID
	if rf, ok := ret.Get(0).(func() []flow.RegisterID); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]flow.RegisterID)
		}
	}

	var r1 [][]byte
	if rf, ok := ret.Get(1).(func() [][]byte); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([][]byte)
		}
	}

	return r0, r1
}

// NewRegisterUpdatesHolder creates a new instance of RegisterUpdatesHolder. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegisterUpdatesHolder(t testing.TB) *RegisterUpdatesHolder {
	mock := &RegisterUpdatesHolder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
