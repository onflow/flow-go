// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockRegisterUpdatesHolder is an autogenerated mock type for the RegisterUpdatesHolder type
type MockRegisterUpdatesHolder struct {
	mock.Mock
}

type MockRegisterUpdatesHolder_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRegisterUpdatesHolder) EXPECT() *MockRegisterUpdatesHolder_Expecter {
	return &MockRegisterUpdatesHolder_Expecter{mock: &_m.Mock}
}

// UpdatedRegisterSet provides a mock function with no fields
func (_m *MockRegisterUpdatesHolder) UpdatedRegisterSet() map[flow.RegisterID][]byte {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for UpdatedRegisterSet")
	}

	var r0 map[flow.RegisterID][]byte
	if rf, ok := ret.Get(0).(func() map[flow.RegisterID][]byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[flow.RegisterID][]byte)
		}
	}

	return r0
}

// MockRegisterUpdatesHolder_UpdatedRegisterSet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdatedRegisterSet'
type MockRegisterUpdatesHolder_UpdatedRegisterSet_Call struct {
	*mock.Call
}

// UpdatedRegisterSet is a helper method to define mock.On call
func (_e *MockRegisterUpdatesHolder_Expecter) UpdatedRegisterSet() *MockRegisterUpdatesHolder_UpdatedRegisterSet_Call {
	return &MockRegisterUpdatesHolder_UpdatedRegisterSet_Call{Call: _e.mock.On("UpdatedRegisterSet")}
}

func (_c *MockRegisterUpdatesHolder_UpdatedRegisterSet_Call) Run(run func()) *MockRegisterUpdatesHolder_UpdatedRegisterSet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRegisterUpdatesHolder_UpdatedRegisterSet_Call) Return(_a0 map[flow.RegisterID][]byte) *MockRegisterUpdatesHolder_UpdatedRegisterSet_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRegisterUpdatesHolder_UpdatedRegisterSet_Call) RunAndReturn(run func() map[flow.RegisterID][]byte) *MockRegisterUpdatesHolder_UpdatedRegisterSet_Call {
	_c.Call.Return(run)
	return _c
}

// UpdatedRegisters provides a mock function with no fields
func (_m *MockRegisterUpdatesHolder) UpdatedRegisters() flow.RegisterEntries {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for UpdatedRegisters")
	}

	var r0 flow.RegisterEntries
	if rf, ok := ret.Get(0).(func() flow.RegisterEntries); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.RegisterEntries)
		}
	}

	return r0
}

// MockRegisterUpdatesHolder_UpdatedRegisters_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdatedRegisters'
type MockRegisterUpdatesHolder_UpdatedRegisters_Call struct {
	*mock.Call
}

// UpdatedRegisters is a helper method to define mock.On call
func (_e *MockRegisterUpdatesHolder_Expecter) UpdatedRegisters() *MockRegisterUpdatesHolder_UpdatedRegisters_Call {
	return &MockRegisterUpdatesHolder_UpdatedRegisters_Call{Call: _e.mock.On("UpdatedRegisters")}
}

func (_c *MockRegisterUpdatesHolder_UpdatedRegisters_Call) Run(run func()) *MockRegisterUpdatesHolder_UpdatedRegisters_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRegisterUpdatesHolder_UpdatedRegisters_Call) Return(_a0 flow.RegisterEntries) *MockRegisterUpdatesHolder_UpdatedRegisters_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRegisterUpdatesHolder_UpdatedRegisters_Call) RunAndReturn(run func() flow.RegisterEntries) *MockRegisterUpdatesHolder_UpdatedRegisters_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRegisterUpdatesHolder creates a new instance of MockRegisterUpdatesHolder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRegisterUpdatesHolder(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRegisterUpdatesHolder {
	mock := &MockRegisterUpdatesHolder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
