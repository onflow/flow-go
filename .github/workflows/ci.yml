name: CI

on:
  push:
    branches:
      - master
      - 'auto-cadence-upgrade/**'
      - staging
      - trying
      - 'feature/**'
  pull_request:
    branches:
      - master
      - 'auto-cadence-upgrade/**'
      - 'feature/**'

jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Build relic
      run: make crypto/relic/build
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v2.3.0
      with:
        # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
        version: v1.41
        args: -v --build-tags relic
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        scandir: './crypto'
        ignore: 'relic'
  unit-test:
    name: Unit Tests
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - 1.15
          - 1.16
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Run tests
      if: github.actor != 'bors[bot]'
      run: make ci
    - name: Run tests (Bors)
      if: github.actor == 'bors[bot]'
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 25
        max_attempts: 2
        command: make ci
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      if: ${{ matrix.go-version == '1.15' }}
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella

  integration-test:
    name: Integration Tests
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - 1.15
          - 1.16
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version}}
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Build relic
      run: make crypto/relic/build
    - name: Docker build
      run: make docker-build-flow
    - name: Run tests
      if: github.actor != 'bors[bot]'
      run: make ci-integration
    - name: Run tests (Bors)
      if: github.actor == 'bors[bot]'
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: make ci-integration