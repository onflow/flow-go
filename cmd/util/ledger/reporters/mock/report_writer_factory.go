// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	reporters "github.com/onflow/flow-go/cmd/util/ledger/reporters"
	mock "github.com/stretchr/testify/mock"
)

// ReportWriterFactory is an autogenerated mock type for the ReportWriterFactory type
type ReportWriterFactory struct {
	mock.Mock
}

// ReportWriter provides a mock function with given fields: dataNamespace
func (_m *ReportWriterFactory) ReportWriter(dataNamespace string) reporters.ReportWriter {
	ret := _m.Called(dataNamespace)

	if len(ret) == 0 {
		panic("no return value specified for ReportWriter")
	}

	var r0 reporters.ReportWriter
	if rf, ok := ret.Get(0).(func(string) reporters.ReportWriter); ok {
		r0 = rf(dataNamespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(reporters.ReportWriter)
		}
	}

	return r0
}

// NewReportWriterFactory creates a new instance of ReportWriterFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReportWriterFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *ReportWriterFactory {
	mock := &ReportWriterFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
