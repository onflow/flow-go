// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockReportWriter is an autogenerated mock type for the ReportWriter type
type MockReportWriter struct {
	mock.Mock
}

type MockReportWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockReportWriter) EXPECT() *MockReportWriter_Expecter {
	return &MockReportWriter_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with no fields
func (_m *MockReportWriter) Close() {
	_m.Called()
}

// MockReportWriter_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type MockReportWriter_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *MockReportWriter_Expecter) Close() *MockReportWriter_Close_Call {
	return &MockReportWriter_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *MockReportWriter_Close_Call) Run(run func()) *MockReportWriter_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockReportWriter_Close_Call) Return() *MockReportWriter_Close_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReportWriter_Close_Call) RunAndReturn(run func()) *MockReportWriter_Close_Call {
	_c.Run(run)
	return _c
}

// Write provides a mock function with given fields: dataPoint
func (_m *MockReportWriter) Write(dataPoint interface{}) {
	_m.Called(dataPoint)
}

// MockReportWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type MockReportWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - dataPoint interface{}
func (_e *MockReportWriter_Expecter) Write(dataPoint interface{}) *MockReportWriter_Write_Call {
	return &MockReportWriter_Write_Call{Call: _e.mock.On("Write", dataPoint)}
}

func (_c *MockReportWriter_Write_Call) Run(run func(dataPoint interface{})) *MockReportWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interface{}))
	})
	return _c
}

func (_c *MockReportWriter_Write_Call) Return() *MockReportWriter_Write_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReportWriter_Write_Call) RunAndReturn(run func(interface{})) *MockReportWriter_Write_Call {
	_c.Run(run)
	return _c
}

// NewMockReportWriter creates a new instance of MockReportWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockReportWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockReportWriter {
	mock := &MockReportWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
