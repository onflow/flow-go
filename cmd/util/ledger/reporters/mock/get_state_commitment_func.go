// Code generated by mockery v2.21.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// GetStateCommitmentFunc is an autogenerated mock type for the GetStateCommitmentFunc type
type GetStateCommitmentFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *GetStateCommitmentFunc) Execute() flow.StateCommitment {
	ret := _m.Called()

	var r0 flow.StateCommitment
	if rf, ok := ret.Get(0).(func() flow.StateCommitment); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.StateCommitment)
		}
	}

	return r0
}

type mockConstructorTestingTNewGetStateCommitmentFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewGetStateCommitmentFunc creates a new instance of GetStateCommitmentFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGetStateCommitmentFunc(t mockConstructorTestingTNewGetStateCommitmentFunc) *GetStateCommitmentFunc {
	mock := &GetStateCommitmentFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
