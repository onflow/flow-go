// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockinsecure

import (
	flow "github.com/onflow/flow-go/model/flow"
	channels "github.com/onflow/flow-go/network/channels"

	mock "github.com/stretchr/testify/mock"
)

// IngressController is an autogenerated mock type for the IngressController type
type IngressController struct {
	mock.Mock
}

// HandleIncomingEvent provides a mock function with given fields: _a0, _a1, _a2
func (_m *IngressController) HandleIncomingEvent(_a0 interface{}, _a1 channels.Channel, _a2 flow.Identifier) bool {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 bool
	if rf, ok := ret.Get(0).(func(interface{}, channels.Channel, flow.Identifier) bool); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewIngressController interface {
	mock.TestingT
	Cleanup(func())
}

// NewIngressController creates a new instance of IngressController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIngressController(t mockConstructorTestingTNewIngressController) *IngressController {
	mock := &IngressController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
