// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	common "github.com/onflow/cadence/common"

	mock "github.com/stretchr/testify/mock"
)

// MockAccountLocalIDGenerator is an autogenerated mock type for the AccountLocalIDGenerator type
type MockAccountLocalIDGenerator struct {
	mock.Mock
}

type MockAccountLocalIDGenerator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAccountLocalIDGenerator) EXPECT() *MockAccountLocalIDGenerator_Expecter {
	return &MockAccountLocalIDGenerator_Expecter{mock: &_m.Mock}
}

// GenerateAccountID provides a mock function with given fields: address
func (_m *MockAccountLocalIDGenerator) GenerateAccountID(address common.Address) (uint64, error) {
	ret := _m.Called(address)

	if len(ret) == 0 {
		panic("no return value specified for GenerateAccountID")
	}

	var r0 uint64
	var r1 error
	if rf, ok := ret.Get(0).(func(common.Address) (uint64, error)); ok {
		return rf(address)
	}
	if rf, ok := ret.Get(0).(func(common.Address) uint64); ok {
		r0 = rf(address)
	} else {
		r0 = ret.Get(0).(uint64)
	}

	if rf, ok := ret.Get(1).(func(common.Address) error); ok {
		r1 = rf(address)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAccountLocalIDGenerator_GenerateAccountID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateAccountID'
type MockAccountLocalIDGenerator_GenerateAccountID_Call struct {
	*mock.Call
}

// GenerateAccountID is a helper method to define mock.On call
//   - address common.Address
func (_e *MockAccountLocalIDGenerator_Expecter) GenerateAccountID(address interface{}) *MockAccountLocalIDGenerator_GenerateAccountID_Call {
	return &MockAccountLocalIDGenerator_GenerateAccountID_Call{Call: _e.mock.On("GenerateAccountID", address)}
}

func (_c *MockAccountLocalIDGenerator_GenerateAccountID_Call) Run(run func(address common.Address)) *MockAccountLocalIDGenerator_GenerateAccountID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(common.Address))
	})
	return _c
}

func (_c *MockAccountLocalIDGenerator_GenerateAccountID_Call) Return(_a0 uint64, _a1 error) *MockAccountLocalIDGenerator_GenerateAccountID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAccountLocalIDGenerator_GenerateAccountID_Call) RunAndReturn(run func(common.Address) (uint64, error)) *MockAccountLocalIDGenerator_GenerateAccountID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAccountLocalIDGenerator creates a new instance of MockAccountLocalIDGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAccountLocalIDGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAccountLocalIDGenerator {
	mock := &MockAccountLocalIDGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
