// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockUUIDGenerator is an autogenerated mock type for the UUIDGenerator type
type MockUUIDGenerator struct {
	mock.Mock
}

type MockUUIDGenerator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUUIDGenerator) EXPECT() *MockUUIDGenerator_Expecter {
	return &MockUUIDGenerator_Expecter{mock: &_m.Mock}
}

// GenerateUUID provides a mock function with no fields
func (_m *MockUUIDGenerator) GenerateUUID() (uint64, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GenerateUUID")
	}

	var r0 uint64
	var r1 error
	if rf, ok := ret.Get(0).(func() (uint64, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockUUIDGenerator_GenerateUUID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateUUID'
type MockUUIDGenerator_GenerateUUID_Call struct {
	*mock.Call
}

// GenerateUUID is a helper method to define mock.On call
func (_e *MockUUIDGenerator_Expecter) GenerateUUID() *MockUUIDGenerator_GenerateUUID_Call {
	return &MockUUIDGenerator_GenerateUUID_Call{Call: _e.mock.On("GenerateUUID")}
}

func (_c *MockUUIDGenerator_GenerateUUID_Call) Run(run func()) *MockUUIDGenerator_GenerateUUID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUUIDGenerator_GenerateUUID_Call) Return(_a0 uint64, _a1 error) *MockUUIDGenerator_GenerateUUID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockUUIDGenerator_GenerateUUID_Call) RunAndReturn(run func() (uint64, error)) *MockUUIDGenerator_GenerateUUID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUUIDGenerator creates a new instance of MockUUIDGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUUIDGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUUIDGenerator {
	mock := &MockUUIDGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
