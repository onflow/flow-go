// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// RandomGenerator is an autogenerated mock type for the RandomGenerator type
type RandomGenerator struct {
	mock.Mock
}

// ReadRandom provides a mock function with given fields: _a0
func (_m *RandomGenerator) ReadRandom(_a0 []byte) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for ReadRandom")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRandomGenerator creates a new instance of RandomGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRandomGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *RandomGenerator {
	mock := &RandomGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
