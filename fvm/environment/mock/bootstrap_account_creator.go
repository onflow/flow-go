// Code generated by mockery v2.21.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// BootstrapAccountCreator is an autogenerated mock type for the BootstrapAccountCreator type
type BootstrapAccountCreator struct {
	mock.Mock
}

// CreateBootstrapAccount provides a mock function with given fields: publicKeys
func (_m *BootstrapAccountCreator) CreateBootstrapAccount(publicKeys []flow.AccountPublicKey) (flow.Address, error) {
	ret := _m.Called(publicKeys)

	var r0 flow.Address
	var r1 error
	if rf, ok := ret.Get(0).(func([]flow.AccountPublicKey) (flow.Address, error)); ok {
		return rf(publicKeys)
	}
	if rf, ok := ret.Get(0).(func([]flow.AccountPublicKey) flow.Address); ok {
		r0 = rf(publicKeys)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.Address)
		}
	}

	if rf, ok := ret.Get(1).(func([]flow.AccountPublicKey) error); ok {
		r1 = rf(publicKeys)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBootstrapAccountCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewBootstrapAccountCreator creates a new instance of BootstrapAccountCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBootstrapAccountCreator(t mockConstructorTestingTNewBootstrapAccountCreator) *BootstrapAccountCreator {
	mock := &BootstrapAccountCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
