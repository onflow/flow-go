// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockBootstrapAccountCreator is an autogenerated mock type for the BootstrapAccountCreator type
type MockBootstrapAccountCreator struct {
	mock.Mock
}

type MockBootstrapAccountCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBootstrapAccountCreator) EXPECT() *MockBootstrapAccountCreator_Expecter {
	return &MockBootstrapAccountCreator_Expecter{mock: &_m.Mock}
}

// CreateBootstrapAccount provides a mock function with given fields: publicKeys
func (_m *MockBootstrapAccountCreator) CreateBootstrapAccount(publicKeys []flow.AccountPublicKey) (flow.Address, error) {
	ret := _m.Called(publicKeys)

	if len(ret) == 0 {
		panic("no return value specified for CreateBootstrapAccount")
	}

	var r0 flow.Address
	var r1 error
	if rf, ok := ret.Get(0).(func([]flow.AccountPublicKey) (flow.Address, error)); ok {
		return rf(publicKeys)
	}
	if rf, ok := ret.Get(0).(func([]flow.AccountPublicKey) flow.Address); ok {
		r0 = rf(publicKeys)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.Address)
		}
	}

	if rf, ok := ret.Get(1).(func([]flow.AccountPublicKey) error); ok {
		r1 = rf(publicKeys)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockBootstrapAccountCreator_CreateBootstrapAccount_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateBootstrapAccount'
type MockBootstrapAccountCreator_CreateBootstrapAccount_Call struct {
	*mock.Call
}

// CreateBootstrapAccount is a helper method to define mock.On call
//   - publicKeys []flow.AccountPublicKey
func (_e *MockBootstrapAccountCreator_Expecter) CreateBootstrapAccount(publicKeys interface{}) *MockBootstrapAccountCreator_CreateBootstrapAccount_Call {
	return &MockBootstrapAccountCreator_CreateBootstrapAccount_Call{Call: _e.mock.On("CreateBootstrapAccount", publicKeys)}
}

func (_c *MockBootstrapAccountCreator_CreateBootstrapAccount_Call) Run(run func(publicKeys []flow.AccountPublicKey)) *MockBootstrapAccountCreator_CreateBootstrapAccount_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]flow.AccountPublicKey))
	})
	return _c
}

func (_c *MockBootstrapAccountCreator_CreateBootstrapAccount_Call) Return(_a0 flow.Address, _a1 error) *MockBootstrapAccountCreator_CreateBootstrapAccount_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockBootstrapAccountCreator_CreateBootstrapAccount_Call) RunAndReturn(run func([]flow.AccountPublicKey) (flow.Address, error)) *MockBootstrapAccountCreator_CreateBootstrapAccount_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockBootstrapAccountCreator creates a new instance of MockBootstrapAccountCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBootstrapAccountCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBootstrapAccountCreator {
	mock := &MockBootstrapAccountCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
