// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	fvm "github.com/onflow/flow-go/fvm"
	mock "github.com/stretchr/testify/mock"
)

// BootstrapProcedureOption is an autogenerated mock type for the BootstrapProcedureOption type
type BootstrapProcedureOption struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *BootstrapProcedureOption) Execute(_a0 *fvm.BootstrapProcedure) *fvm.BootstrapProcedure {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *fvm.BootstrapProcedure
	if rf, ok := ret.Get(0).(func(*fvm.BootstrapProcedure) *fvm.BootstrapProcedure); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fvm.BootstrapProcedure)
		}
	}

	return r0
}

// NewBootstrapProcedureOption creates a new instance of BootstrapProcedureOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBootstrapProcedureOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *BootstrapProcedureOption {
	mock := &BootstrapProcedureOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
