// Code generated by mockery v2.13.0. DO NOT EDIT.

package mock

import (
	fvm "github.com/onflow/flow-go/fvm"
	mock "github.com/stretchr/testify/mock"
)

// Option is an autogenerated mock type for the Option type
type Option struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx
func (_m *Option) Execute(ctx fvm.Context) fvm.Context {
	ret := _m.Called(ctx)

	var r0 fvm.Context
	if rf, ok := ret.Get(0).(func(fvm.Context) fvm.Context); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(fvm.Context)
	}

	return r0
}

type NewOptionT interface {
	mock.TestingT
	Cleanup(func())
}

// NewOption creates a new instance of Option. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOption(t NewOptionT) *Option {
	mock := &Option{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
