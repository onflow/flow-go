// Code generated by mockery v2.13.1. DO NOT EDIT.

package mock

import (
	common "github.com/onflow/cadence/runtime/common"

	mock "github.com/stretchr/testify/mock"
)

// StandardLibraryInterface is an autogenerated mock type for the StandardLibraryInterface type
type StandardLibraryInterface struct {
	mock.Mock
}

// SetAccountFrozen provides a mock function with given fields: address, frozen
func (_m *StandardLibraryInterface) SetAccountFrozen(address common.Address, frozen bool) error {
	ret := _m.Called(address, frozen)

	var r0 error
	if rf, ok := ret.Get(0).(func(common.Address, bool) error); ok {
		r0 = rf(address, frozen)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewStandardLibraryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewStandardLibraryInterface creates a new instance of StandardLibraryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStandardLibraryInterface(t mockConstructorTestingTNewStandardLibraryInterface) *StandardLibraryInterface {
	mock := &StandardLibraryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
