// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	flow "github.com/onflow/flow-go/model/flow"

	mock "github.com/stretchr/testify/mock"

	model "github.com/onflow/flow-go/consensus/hotstuff/model"
)

// TimeoutCollectorConsumer is an autogenerated mock type for the TimeoutCollectorConsumer type
type TimeoutCollectorConsumer struct {
	mock.Mock
}

// OnNewQcDiscovered provides a mock function with given fields: certificate
func (_m *TimeoutCollectorConsumer) OnNewQcDiscovered(certificate *flow.QuorumCertificate) {
	_m.Called(certificate)
}

// OnNewTcDiscovered provides a mock function with given fields: certificate
func (_m *TimeoutCollectorConsumer) OnNewTcDiscovered(certificate *flow.TimeoutCertificate) {
	_m.Called(certificate)
}

// OnPartialTcCreated provides a mock function with given fields: view, newestQC, lastViewTC
func (_m *TimeoutCollectorConsumer) OnPartialTcCreated(view uint64, newestQC *flow.QuorumCertificate, lastViewTC *flow.TimeoutCertificate) {
	_m.Called(view, newestQC, lastViewTC)
}

// OnTcConstructedFromTimeouts provides a mock function with given fields: certificate
func (_m *TimeoutCollectorConsumer) OnTcConstructedFromTimeouts(certificate *flow.TimeoutCertificate) {
	_m.Called(certificate)
}

// OnTimeoutProcessed provides a mock function with given fields: timeout
func (_m *TimeoutCollectorConsumer) OnTimeoutProcessed(timeout *model.TimeoutObject) {
	_m.Called(timeout)
}

// NewTimeoutCollectorConsumer creates a new instance of TimeoutCollectorConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTimeoutCollectorConsumer(t interface {
	mock.TestingT
	Cleanup(func())
}) *TimeoutCollectorConsumer {
	mock := &TimeoutCollectorConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
