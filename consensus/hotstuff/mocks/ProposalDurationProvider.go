// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	flow "github.com/onflow/flow-go/model/flow"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockProposalDurationProvider is an autogenerated mock type for the ProposalDurationProvider type
type MockProposalDurationProvider struct {
	mock.Mock
}

type MockProposalDurationProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *MockProposalDurationProvider) EXPECT() *MockProposalDurationProvider_Expecter {
	return &MockProposalDurationProvider_Expecter{mock: &_m.Mock}
}

// TargetPublicationTime provides a mock function with given fields: proposalView, timeViewEntered, parentBlockId
func (_m *MockProposalDurationProvider) TargetPublicationTime(proposalView uint64, timeViewEntered time.Time, parentBlockId flow.Identifier) time.Time {
	ret := _m.Called(proposalView, timeViewEntered, parentBlockId)

	if len(ret) == 0 {
		panic("no return value specified for TargetPublicationTime")
	}

	var r0 time.Time
	if rf, ok := ret.Get(0).(func(uint64, time.Time, flow.Identifier) time.Time); ok {
		r0 = rf(proposalView, timeViewEntered, parentBlockId)
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// MockProposalDurationProvider_TargetPublicationTime_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TargetPublicationTime'
type MockProposalDurationProvider_TargetPublicationTime_Call struct {
	*mock.Call
}

// TargetPublicationTime is a helper method to define mock.On call
//   - proposalView uint64
//   - timeViewEntered time.Time
//   - parentBlockId flow.Identifier
func (_e *MockProposalDurationProvider_Expecter) TargetPublicationTime(proposalView interface{}, timeViewEntered interface{}, parentBlockId interface{}) *MockProposalDurationProvider_TargetPublicationTime_Call {
	return &MockProposalDurationProvider_TargetPublicationTime_Call{Call: _e.mock.On("TargetPublicationTime", proposalView, timeViewEntered, parentBlockId)}
}

func (_c *MockProposalDurationProvider_TargetPublicationTime_Call) Run(run func(proposalView uint64, timeViewEntered time.Time, parentBlockId flow.Identifier)) *MockProposalDurationProvider_TargetPublicationTime_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64), args[1].(time.Time), args[2].(flow.Identifier))
	})
	return _c
}

func (_c *MockProposalDurationProvider_TargetPublicationTime_Call) Return(_a0 time.Time) *MockProposalDurationProvider_TargetPublicationTime_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockProposalDurationProvider_TargetPublicationTime_Call) RunAndReturn(run func(uint64, time.Time, flow.Identifier) time.Time) *MockProposalDurationProvider_TargetPublicationTime_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockProposalDurationProvider creates a new instance of MockProposalDurationProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockProposalDurationProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockProposalDurationProvider {
	mock := &MockProposalDurationProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
