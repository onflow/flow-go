// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockWorkers is an autogenerated mock type for the Workers type
type MockWorkers struct {
	mock.Mock
}

type MockWorkers_Expecter struct {
	mock *mock.Mock
}

func (_m *MockWorkers) EXPECT() *MockWorkers_Expecter {
	return &MockWorkers_Expecter{mock: &_m.Mock}
}

// Submit provides a mock function with given fields: task
func (_m *MockWorkers) Submit(task func()) {
	_m.Called(task)
}

// MockWorkers_Submit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Submit'
type MockWorkers_Submit_Call struct {
	*mock.Call
}

// Submit is a helper method to define mock.On call
//   - task func()
func (_e *MockWorkers_Expecter) Submit(task interface{}) *MockWorkers_Submit_Call {
	return &MockWorkers_Submit_Call{Call: _e.mock.On("Submit", task)}
}

func (_c *MockWorkers_Submit_Call) Run(run func(task func())) *MockWorkers_Submit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(func()))
	})
	return _c
}

func (_c *MockWorkers_Submit_Call) Return() *MockWorkers_Submit_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockWorkers_Submit_Call) RunAndReturn(run func(func())) *MockWorkers_Submit_Call {
	_c.Run(run)
	return _c
}

// NewMockWorkers creates a new instance of MockWorkers. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWorkers(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWorkers {
	mock := &MockWorkers{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
