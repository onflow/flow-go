// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	model "github.com/onflow/flow-go/consensus/hotstuff/model"
	mock "github.com/stretchr/testify/mock"
)

// TimeoutProcessor is an autogenerated mock type for the TimeoutProcessor type
type TimeoutProcessor struct {
	mock.Mock
}

// Process provides a mock function with given fields: timeout
func (_m *TimeoutProcessor) Process(timeout *model.TimeoutObject) error {
	ret := _m.Called(timeout)

	if len(ret) == 0 {
		panic("no return value specified for Process")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.TimeoutObject) error); ok {
		r0 = rf(timeout)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTimeoutProcessor creates a new instance of TimeoutProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTimeoutProcessor(t interface {
	mock.TestingT
	Cleanup(func())
}) *TimeoutProcessor {
	mock := &TimeoutProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
