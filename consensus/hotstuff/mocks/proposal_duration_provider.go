// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	flow "github.com/onflow/flow-go/model/flow"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// ProposalDurationProvider is an autogenerated mock type for the ProposalDurationProvider type
type ProposalDurationProvider struct {
	mock.Mock
}

// TargetPublicationTime provides a mock function with given fields: proposalView, timeViewEntered, parentBlockId
func (_m *ProposalDurationProvider) TargetPublicationTime(proposalView uint64, timeViewEntered time.Time, parentBlockId flow.Identifier) time.Time {
	ret := _m.Called(proposalView, timeViewEntered, parentBlockId)

	if len(ret) == 0 {
		panic("no return value specified for TargetPublicationTime")
	}

	var r0 time.Time
	if rf, ok := ret.Get(0).(func(uint64, time.Time, flow.Identifier) time.Time); ok {
		r0 = rf(proposalView, timeViewEntered, parentBlockId)
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// NewProposalDurationProvider creates a new instance of ProposalDurationProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProposalDurationProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProposalDurationProvider {
	mock := &ProposalDurationProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
