// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	flow "github.com/onflow/flow-go/model/flow"

	mock "github.com/stretchr/testify/mock"
)

// MockBlockSignerDecoder is an autogenerated mock type for the BlockSignerDecoder type
type MockBlockSignerDecoder struct {
	mock.Mock
}

type MockBlockSignerDecoder_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBlockSignerDecoder) EXPECT() *MockBlockSignerDecoder_Expecter {
	return &MockBlockSignerDecoder_Expecter{mock: &_m.Mock}
}

// DecodeSignerIDs provides a mock function with given fields: header
func (_m *MockBlockSignerDecoder) DecodeSignerIDs(header *flow.Header) (flow.IdentifierList, error) {
	ret := _m.Called(header)

	if len(ret) == 0 {
		panic("no return value specified for DecodeSignerIDs")
	}

	var r0 flow.IdentifierList
	var r1 error
	if rf, ok := ret.Get(0).(func(*flow.Header) (flow.IdentifierList, error)); ok {
		return rf(header)
	}
	if rf, ok := ret.Get(0).(func(*flow.Header) flow.IdentifierList); ok {
		r0 = rf(header)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.IdentifierList)
		}
	}

	if rf, ok := ret.Get(1).(func(*flow.Header) error); ok {
		r1 = rf(header)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockBlockSignerDecoder_DecodeSignerIDs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DecodeSignerIDs'
type MockBlockSignerDecoder_DecodeSignerIDs_Call struct {
	*mock.Call
}

// DecodeSignerIDs is a helper method to define mock.On call
//   - header *flow.Header
func (_e *MockBlockSignerDecoder_Expecter) DecodeSignerIDs(header interface{}) *MockBlockSignerDecoder_DecodeSignerIDs_Call {
	return &MockBlockSignerDecoder_DecodeSignerIDs_Call{Call: _e.mock.On("DecodeSignerIDs", header)}
}

func (_c *MockBlockSignerDecoder_DecodeSignerIDs_Call) Run(run func(header *flow.Header)) *MockBlockSignerDecoder_DecodeSignerIDs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*flow.Header))
	})
	return _c
}

func (_c *MockBlockSignerDecoder_DecodeSignerIDs_Call) Return(_a0 flow.IdentifierList, _a1 error) *MockBlockSignerDecoder_DecodeSignerIDs_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockBlockSignerDecoder_DecodeSignerIDs_Call) RunAndReturn(run func(*flow.Header) (flow.IdentifierList, error)) *MockBlockSignerDecoder_DecodeSignerIDs_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockBlockSignerDecoder creates a new instance of MockBlockSignerDecoder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBlockSignerDecoder(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBlockSignerDecoder {
	mock := &MockBlockSignerDecoder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
