// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	hotstuff "github.com/onflow/flow-go/consensus/hotstuff"
	mock "github.com/stretchr/testify/mock"
)

// MockTimeoutProcessorFactory is an autogenerated mock type for the TimeoutProcessorFactory type
type MockTimeoutProcessorFactory struct {
	mock.Mock
}

type MockTimeoutProcessorFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTimeoutProcessorFactory) EXPECT() *MockTimeoutProcessorFactory_Expecter {
	return &MockTimeoutProcessorFactory_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: view
func (_m *MockTimeoutProcessorFactory) Create(view uint64) (hotstuff.TimeoutProcessor, error) {
	ret := _m.Called(view)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 hotstuff.TimeoutProcessor
	var r1 error
	if rf, ok := ret.Get(0).(func(uint64) (hotstuff.TimeoutProcessor, error)); ok {
		return rf(view)
	}
	if rf, ok := ret.Get(0).(func(uint64) hotstuff.TimeoutProcessor); ok {
		r0 = rf(view)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(hotstuff.TimeoutProcessor)
		}
	}

	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(view)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockTimeoutProcessorFactory_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockTimeoutProcessorFactory_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - view uint64
func (_e *MockTimeoutProcessorFactory_Expecter) Create(view interface{}) *MockTimeoutProcessorFactory_Create_Call {
	return &MockTimeoutProcessorFactory_Create_Call{Call: _e.mock.On("Create", view)}
}

func (_c *MockTimeoutProcessorFactory_Create_Call) Run(run func(view uint64)) *MockTimeoutProcessorFactory_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockTimeoutProcessorFactory_Create_Call) Return(_a0 hotstuff.TimeoutProcessor, _a1 error) *MockTimeoutProcessorFactory_Create_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockTimeoutProcessorFactory_Create_Call) RunAndReturn(run func(uint64) (hotstuff.TimeoutProcessor, error)) *MockTimeoutProcessorFactory_Create_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTimeoutProcessorFactory creates a new instance of MockTimeoutProcessorFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTimeoutProcessorFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTimeoutProcessorFactory {
	mock := &MockTimeoutProcessorFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
