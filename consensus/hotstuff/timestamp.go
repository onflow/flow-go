package hotstuff

import (
	"time"
)

// BlockTimestamp is a helper structure that performs building and validation of valid
// timestamp for blocks that are generated by block builder and checked by hotstuff event loop.
// Let τ be the time stamp of the parent block and t be the current clock time of the proposer that is building the child block
// An honest proposer sets the Timestamp of its proposal according to the following rule:
// if t is within the interval [τ + minInterval, τ + maxInterval], then the proposer sets Timestamp := t
// otherwise, the proposer chooses the time stamp from the interval that is closest to its current time t, i.e.
// if t < τ + minInterval, the proposer sets Timestamp := τ + minInterval
// if τ + maxInterval < t, the proposer sets Timestamp := τ + maxInterval
type BlockTimestamp interface {
	// Build generates a timestamp based on definition of valid timestamp.
	Build(parentTimestamp time.Time) time.Time
	// Validate accepts parent and current timestamps and checks if current timestamp satisfies
	// definition of valid timestamp.
	// Timestamp is valid if: Timestamp ∈ [τ + minInterval, τ + maxInterval]
	// Returns:
	//	* model.ErrInvalidBlockTimestamp - timestamp is invalid
	//  * nil - success
	Validate(parentTimestamp, currentTimestamp time.Time) error
}
