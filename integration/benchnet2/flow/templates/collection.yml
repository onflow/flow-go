{{- range $k, $v := .Values.collection.nodes }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  # This is the full name of your deployment. It must be unique
  name: {{ $k }}
  labels:
    app: {{ $k }}
    branch: {{ $.Values.branch }}
    nodeType: collection
    service: flow
    project: {{ $.Values.commit }}

spec:
  serviceName: {{ $k }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ $k }}
      nodeType: collection
      service: flow

  template:
    metadata:
      labels:
        app: {{ $k }}
        branch: {{ $.Values.branch }}
        nodeType: collection
        service: flow
        project: {{ $.Values.commit }}
    spec:
      containers:
        - name: {{ $k }}
          image: {{ $v.image }}

          {{ if $v.imagePullPolicy }}
          imagePullPolicy: {{ $v.imagePullPolicy| toYaml | nindent 12 }}
          {{ else}}
          imagePullPolicy: {{ $.Values.collection.defaults.imagePullPolicy | toYaml | nindent 12 }}
          {{ end }}

          args: {{ $v.args | toYaml | nindent 12}}

          {{ if $v.ports }}
          ports: {{ $v.ports | toYaml | nindent 12 }}
          {{ else}}
          ports: {{ $.Values.collection.defaults.containerPorts | toYaml | nindent 12 }}
          {{ end }}
  
          {{ if $v.env }}
          env: {{ $v.env | toYaml | nindent 12 }}
          {{ else}}
          env: {{ $.Values.collection.defaults.env | toYaml | nindent 12 }}
          {{ end }}
          
          volumeMounts:
            - name: data
              mountPath: /data

            - name: node-info-pub-json
              readOnly: true
              mountPath: /bootstrap/public-root-information/node-infos.pub.json
              subPath: node-infos.pub.json

            - name: node-info-priv-json
              readOnly: true
              mountPath: /bootstrap/private-root-information/private-node-info_{{ $v.nodeId }}/node-info.priv.json
              subPath: node-info.priv.json

            - name: node-machine-account-info-priv-json
              readOnly: true
              mountPath: /bootstrap/private-root-information/private-node-info_{{ $v.nodeId }}/node-machine-account-info.priv.json
              subPath: node-machine-account-info.priv.json

            - name: root-block-json
              readOnly: true
              mountPath: /bootstrap/public-root-information/root-block.json
              subPath: root-block.json

            - name: root-protocol-state-snapshot-json
              readOnly: true
              mountPath: /bootstrap/public-root-information/root-protocol-state-snapshot.json
              subPath: root-protocol-state-snapshot.json

            - name: secretsdb-key
              readOnly: true
              mountPath: /bootstrap/private-root-information/private-node-info_{{ $v.nodeId }}/secretsdb-key
              subPath: secretsdb-key

          {{ if $v.resources }}
          resources: {{ $v.resources | toYaml | nindent 12 }}
          {{ else}}
          resources: {{ $.Values.collection.defaults.resources | toYaml | nindent 12 }}
          {{ end }}

      volumes:
        - name: node-info-priv-json
          secret: 
            secretName: {{ $.Values.commit }}.{{ $v.nodeId }}.node-info.priv.json

        - name: node-info-pub-json
          secret: 
            secretName: {{ $.Values.commit }}.node-infos.pub.json

        - name: root-block-json
          secret: 
            secretName: {{ $.Values.commit }}.root-block.json

        - name: root-protocol-state-snapshot-json
          secret: 
            secretName: {{ $.Values.commit }}.root-protocol-state-snapshot.json

        - name: node-machine-account-info-priv-json
          secret: 
            secretName: {{ $.Values.commit }}.{{ $v.nodeId }}.node-machine-account-info.priv.json

        - name: secretsdb-key
          secret: 
            secretName: {{ $.Values.commit }}.{{ $v.nodeId }}.secretsdb-key

  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          project: {{ $.Values.commit }}
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            {{ if $v.storage }}
            storage: {{ $v.storage }}
            {{ else}}
            storage: {{ $.Values.collection.defaults.storage }}
            {{ end }}
{{- end }}

{{- range $k, $v := $.Values.collection.nodes }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $k }}
  labels:
    app: {{ $k }}
    project: {{ $.Values.commit }}
spec:
  {{ if $v.servicePorts }}
  ports: {{ $v.servicePorts | toYaml | nindent 12 }}
  {{ else}}
  ports: {{ $.Values.collection.defaults.servicePorts  | toYaml | nindent 4 }}
  {{ end }}
  selector:
    app: {{ $k }}
  type: NodePort
{{- end }}