// Code generated by mockery. DO NOT EDIT.

package mock

import (
	execution_data "github.com/onflow/flow-go/module/executiondatasync/execution_data"
	mock "github.com/stretchr/testify/mock"
)

// ProcessedHeightRecorder is an autogenerated mock type for the ProcessedHeightRecorder type
type ProcessedHeightRecorder struct {
	mock.Mock
}

// HighestCompleteHeight provides a mock function with no fields
func (_m *ProcessedHeightRecorder) HighestCompleteHeight() uint64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HighestCompleteHeight")
	}

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// OnBlockProcessed provides a mock function with given fields: _a0
func (_m *ProcessedHeightRecorder) OnBlockProcessed(_a0 uint64) {
	_m.Called(_a0)
}

// SetHeightUpdatesConsumer provides a mock function with given fields: _a0
func (_m *ProcessedHeightRecorder) SetHeightUpdatesConsumer(_a0 execution_data.HeightUpdatesConsumer) {
	_m.Called(_a0)
}

// NewProcessedHeightRecorder creates a new instance of ProcessedHeightRecorder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProcessedHeightRecorder(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProcessedHeightRecorder {
	mock := &ProcessedHeightRecorder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
