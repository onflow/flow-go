// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	pipeline "github.com/onflow/flow-go/module/executiondatasync/optimistic_syncing"
	mock "github.com/stretchr/testify/mock"
)

// MockStateUpdatePublisher is an autogenerated mock type for the StateUpdatePublisher type
type MockStateUpdatePublisher struct {
	mock.Mock
}

type MockStateUpdatePublisher_Expecter struct {
	mock *mock.Mock
}

func (_m *MockStateUpdatePublisher) EXPECT() *MockStateUpdatePublisher_Expecter {
	return &MockStateUpdatePublisher_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: update
func (_m *MockStateUpdatePublisher) Execute(update pipeline.StateUpdate) {
	_m.Called(update)
}

// MockStateUpdatePublisher_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockStateUpdatePublisher_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - update pipeline.StateUpdate
func (_e *MockStateUpdatePublisher_Expecter) Execute(update interface{}) *MockStateUpdatePublisher_Execute_Call {
	return &MockStateUpdatePublisher_Execute_Call{Call: _e.mock.On("Execute", update)}
}

func (_c *MockStateUpdatePublisher_Execute_Call) Run(run func(update pipeline.StateUpdate)) *MockStateUpdatePublisher_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(pipeline.StateUpdate))
	})
	return _c
}

func (_c *MockStateUpdatePublisher_Execute_Call) Return() *MockStateUpdatePublisher_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockStateUpdatePublisher_Execute_Call) RunAndReturn(run func(pipeline.StateUpdate)) *MockStateUpdatePublisher_Execute_Call {
	_c.Run(run)
	return _c
}

// NewMockStateUpdatePublisher creates a new instance of MockStateUpdatePublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockStateUpdatePublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockStateUpdatePublisher {
	mock := &MockStateUpdatePublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
