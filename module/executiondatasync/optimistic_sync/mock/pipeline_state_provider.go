// Code generated by mockery. DO NOT EDIT.

package mock

import (
	optimistic_sync "github.com/onflow/flow-go/module/executiondatasync/optimistic_sync"
	mock "github.com/stretchr/testify/mock"
)

// PipelineStateProvider is an autogenerated mock type for the PipelineStateProvider type
type PipelineStateProvider struct {
	mock.Mock
}

// GetState provides a mock function with no fields
func (_m *PipelineStateProvider) GetState() optimistic_sync.State {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetState")
	}

	var r0 optimistic_sync.State
	if rf, ok := ret.Get(0).(func() optimistic_sync.State); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(optimistic_sync.State)
	}

	return r0
}

// NewPipelineStateProvider creates a new instance of PipelineStateProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPipelineStateProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *PipelineStateProvider {
	mock := &PipelineStateProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
