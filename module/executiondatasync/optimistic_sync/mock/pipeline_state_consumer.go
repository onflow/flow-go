// Code generated by mockery. DO NOT EDIT.

package mock

import (
	optimistic_sync "github.com/onflow/flow-go/module/executiondatasync/optimistic_sync"
	mock "github.com/stretchr/testify/mock"
)

// PipelineStateConsumer is an autogenerated mock type for the PipelineStateConsumer type
type PipelineStateConsumer struct {
	mock.Mock
}

// OnStateUpdated provides a mock function with given fields: newState
func (_m *PipelineStateConsumer) OnStateUpdated(newState optimistic_sync.State) {
	_m.Called(newState)
}

// NewPipelineStateConsumer creates a new instance of PipelineStateConsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPipelineStateConsumer(t interface {
	mock.TestingT
	Cleanup(func())
}) *PipelineStateConsumer {
	mock := &PipelineStateConsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
