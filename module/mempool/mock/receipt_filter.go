// Code generated by mockery v2.13.0. DO NOT EDIT.

package mempool

import (
	flow "github.com/onflow/flow-go/model/flow"

	mock "github.com/stretchr/testify/mock"
)

// ReceiptFilter is an autogenerated mock type for the ReceiptFilter type
type ReceiptFilter struct {
	mock.Mock
}

// Execute provides a mock function with given fields: receipt
func (_m *ReceiptFilter) Execute(receipt *flow.ExecutionReceipt) bool {
	ret := _m.Called(receipt)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*flow.ExecutionReceipt) bool); ok {
		r0 = rf(receipt)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type NewReceiptFilterT interface {
	mock.TestingT
	Cleanup(func())
}

// NewReceiptFilter creates a new instance of ReceiptFilter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewReceiptFilter(t NewReceiptFilterT) *ReceiptFilter {
	mock := &ReceiptFilter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
