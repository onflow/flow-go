// Code generated by mockery v1.0.0. DO NOT EDIT.

package mempool

import (
	flow "github.com/onflow/flow-go/model/flow"

	mock "github.com/stretchr/testify/mock"
)

// TransactionTimings is an autogenerated mock type for the TransactionTimings type
type TransactionTimings struct {
	mock.Mock
}

// Add provides a mock function with given fields: tx
func (_m *TransactionTimings) Add(tx *flow.TransactionTiming) bool {
	ret := _m.Called(tx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*flow.TransactionTiming) bool); ok {
		r0 = rf(tx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Adjust provides a mock function with given fields: txID, f
func (_m *TransactionTimings) Adjust(txID flow.Identifier, f func(*flow.TransactionTiming) *flow.TransactionTiming) (*flow.TransactionTiming, bool) {
	ret := _m.Called(txID, f)

	var r0 *flow.TransactionTiming
	if rf, ok := ret.Get(0).(func(flow.Identifier, func(*flow.TransactionTiming) *flow.TransactionTiming) *flow.TransactionTiming); ok {
		r0 = rf(txID, f)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*flow.TransactionTiming)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(flow.Identifier, func(*flow.TransactionTiming) *flow.TransactionTiming) bool); ok {
		r1 = rf(txID, f)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// All provides a mock function with given fields:
func (_m *TransactionTimings) All() []*flow.TransactionTiming {
	ret := _m.Called()

	var r0 []*flow.TransactionTiming
	if rf, ok := ret.Get(0).(func() []*flow.TransactionTiming); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*flow.TransactionTiming)
		}
	}

	return r0
}

// ByID provides a mock function with given fields: txID
func (_m *TransactionTimings) ByID(txID flow.Identifier) (*flow.TransactionTiming, bool) {
	ret := _m.Called(txID)

	var r0 *flow.TransactionTiming
	if rf, ok := ret.Get(0).(func(flow.Identifier) *flow.TransactionTiming); ok {
		r0 = rf(txID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*flow.TransactionTiming)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(flow.Identifier) bool); ok {
		r1 = rf(txID)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Rem provides a mock function with given fields: txID
func (_m *TransactionTimings) Rem(txID flow.Identifier) bool {
	ret := _m.Called(txID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(flow.Identifier) bool); ok {
		r0 = rf(txID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
