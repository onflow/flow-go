// Code generated by mockery v2.13.0. DO NOT EDIT.

package mempool

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// ChunkRequestHistoryUpdaterFunc is an autogenerated mock type for the ChunkRequestHistoryUpdaterFunc type
type ChunkRequestHistoryUpdaterFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *ChunkRequestHistoryUpdaterFunc) Execute(_a0 uint64, _a1 time.Duration) (uint64, time.Duration, bool) {
	ret := _m.Called(_a0, _a1)

	var r0 uint64
	if rf, ok := ret.Get(0).(func(uint64, time.Duration) uint64); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 time.Duration
	if rf, ok := ret.Get(1).(func(uint64, time.Duration) time.Duration); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Get(1).(time.Duration)
	}

	var r2 bool
	if rf, ok := ret.Get(2).(func(uint64, time.Duration) bool); ok {
		r2 = rf(_a0, _a1)
	} else {
		r2 = ret.Get(2).(bool)
	}

	return r0, r1, r2
}

type NewChunkRequestHistoryUpdaterFuncT interface {
	mock.TestingT
	Cleanup(func())
}

// NewChunkRequestHistoryUpdaterFunc creates a new instance of ChunkRequestHistoryUpdaterFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewChunkRequestHistoryUpdaterFunc(t NewChunkRequestHistoryUpdaterFuncT) *ChunkRequestHistoryUpdaterFunc {
	mock := &ChunkRequestHistoryUpdaterFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
