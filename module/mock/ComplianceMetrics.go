// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockComplianceMetrics is an autogenerated mock type for the ComplianceMetrics type
type MockComplianceMetrics struct {
	mock.Mock
}

type MockComplianceMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockComplianceMetrics) EXPECT() *MockComplianceMetrics_Expecter {
	return &MockComplianceMetrics_Expecter{mock: &_m.Mock}
}

// BlockFinalized provides a mock function with given fields: _a0
func (_m *MockComplianceMetrics) BlockFinalized(_a0 *flow.Block) {
	_m.Called(_a0)
}

// MockComplianceMetrics_BlockFinalized_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockFinalized'
type MockComplianceMetrics_BlockFinalized_Call struct {
	*mock.Call
}

// BlockFinalized is a helper method to define mock.On call
//   - _a0 *flow.Block
func (_e *MockComplianceMetrics_Expecter) BlockFinalized(_a0 interface{}) *MockComplianceMetrics_BlockFinalized_Call {
	return &MockComplianceMetrics_BlockFinalized_Call{Call: _e.mock.On("BlockFinalized", _a0)}
}

func (_c *MockComplianceMetrics_BlockFinalized_Call) Run(run func(_a0 *flow.Block)) *MockComplianceMetrics_BlockFinalized_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*flow.Block))
	})
	return _c
}

func (_c *MockComplianceMetrics_BlockFinalized_Call) Return() *MockComplianceMetrics_BlockFinalized_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_BlockFinalized_Call) RunAndReturn(run func(*flow.Block)) *MockComplianceMetrics_BlockFinalized_Call {
	_c.Run(run)
	return _c
}

// BlockSealed provides a mock function with given fields: _a0
func (_m *MockComplianceMetrics) BlockSealed(_a0 *flow.Block) {
	_m.Called(_a0)
}

// MockComplianceMetrics_BlockSealed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockSealed'
type MockComplianceMetrics_BlockSealed_Call struct {
	*mock.Call
}

// BlockSealed is a helper method to define mock.On call
//   - _a0 *flow.Block
func (_e *MockComplianceMetrics_Expecter) BlockSealed(_a0 interface{}) *MockComplianceMetrics_BlockSealed_Call {
	return &MockComplianceMetrics_BlockSealed_Call{Call: _e.mock.On("BlockSealed", _a0)}
}

func (_c *MockComplianceMetrics_BlockSealed_Call) Run(run func(_a0 *flow.Block)) *MockComplianceMetrics_BlockSealed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*flow.Block))
	})
	return _c
}

func (_c *MockComplianceMetrics_BlockSealed_Call) Return() *MockComplianceMetrics_BlockSealed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_BlockSealed_Call) RunAndReturn(run func(*flow.Block)) *MockComplianceMetrics_BlockSealed_Call {
	_c.Run(run)
	return _c
}

// CurrentDKGPhaseViews provides a mock function with given fields: phase1FinalView, phase2FinalView, phase3FinalView
func (_m *MockComplianceMetrics) CurrentDKGPhaseViews(phase1FinalView uint64, phase2FinalView uint64, phase3FinalView uint64) {
	_m.Called(phase1FinalView, phase2FinalView, phase3FinalView)
}

// MockComplianceMetrics_CurrentDKGPhaseViews_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CurrentDKGPhaseViews'
type MockComplianceMetrics_CurrentDKGPhaseViews_Call struct {
	*mock.Call
}

// CurrentDKGPhaseViews is a helper method to define mock.On call
//   - phase1FinalView uint64
//   - phase2FinalView uint64
//   - phase3FinalView uint64
func (_e *MockComplianceMetrics_Expecter) CurrentDKGPhaseViews(phase1FinalView interface{}, phase2FinalView interface{}, phase3FinalView interface{}) *MockComplianceMetrics_CurrentDKGPhaseViews_Call {
	return &MockComplianceMetrics_CurrentDKGPhaseViews_Call{Call: _e.mock.On("CurrentDKGPhaseViews", phase1FinalView, phase2FinalView, phase3FinalView)}
}

func (_c *MockComplianceMetrics_CurrentDKGPhaseViews_Call) Run(run func(phase1FinalView uint64, phase2FinalView uint64, phase3FinalView uint64)) *MockComplianceMetrics_CurrentDKGPhaseViews_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64), args[1].(uint64), args[2].(uint64))
	})
	return _c
}

func (_c *MockComplianceMetrics_CurrentDKGPhaseViews_Call) Return() *MockComplianceMetrics_CurrentDKGPhaseViews_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_CurrentDKGPhaseViews_Call) RunAndReturn(run func(uint64, uint64, uint64)) *MockComplianceMetrics_CurrentDKGPhaseViews_Call {
	_c.Run(run)
	return _c
}

// CurrentEpochCounter provides a mock function with given fields: counter
func (_m *MockComplianceMetrics) CurrentEpochCounter(counter uint64) {
	_m.Called(counter)
}

// MockComplianceMetrics_CurrentEpochCounter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CurrentEpochCounter'
type MockComplianceMetrics_CurrentEpochCounter_Call struct {
	*mock.Call
}

// CurrentEpochCounter is a helper method to define mock.On call
//   - counter uint64
func (_e *MockComplianceMetrics_Expecter) CurrentEpochCounter(counter interface{}) *MockComplianceMetrics_CurrentEpochCounter_Call {
	return &MockComplianceMetrics_CurrentEpochCounter_Call{Call: _e.mock.On("CurrentEpochCounter", counter)}
}

func (_c *MockComplianceMetrics_CurrentEpochCounter_Call) Run(run func(counter uint64)) *MockComplianceMetrics_CurrentEpochCounter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockComplianceMetrics_CurrentEpochCounter_Call) Return() *MockComplianceMetrics_CurrentEpochCounter_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_CurrentEpochCounter_Call) RunAndReturn(run func(uint64)) *MockComplianceMetrics_CurrentEpochCounter_Call {
	_c.Run(run)
	return _c
}

// CurrentEpochFinalView provides a mock function with given fields: view
func (_m *MockComplianceMetrics) CurrentEpochFinalView(view uint64) {
	_m.Called(view)
}

// MockComplianceMetrics_CurrentEpochFinalView_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CurrentEpochFinalView'
type MockComplianceMetrics_CurrentEpochFinalView_Call struct {
	*mock.Call
}

// CurrentEpochFinalView is a helper method to define mock.On call
//   - view uint64
func (_e *MockComplianceMetrics_Expecter) CurrentEpochFinalView(view interface{}) *MockComplianceMetrics_CurrentEpochFinalView_Call {
	return &MockComplianceMetrics_CurrentEpochFinalView_Call{Call: _e.mock.On("CurrentEpochFinalView", view)}
}

func (_c *MockComplianceMetrics_CurrentEpochFinalView_Call) Run(run func(view uint64)) *MockComplianceMetrics_CurrentEpochFinalView_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockComplianceMetrics_CurrentEpochFinalView_Call) Return() *MockComplianceMetrics_CurrentEpochFinalView_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_CurrentEpochFinalView_Call) RunAndReturn(run func(uint64)) *MockComplianceMetrics_CurrentEpochFinalView_Call {
	_c.Run(run)
	return _c
}

// CurrentEpochPhase provides a mock function with given fields: phase
func (_m *MockComplianceMetrics) CurrentEpochPhase(phase flow.EpochPhase) {
	_m.Called(phase)
}

// MockComplianceMetrics_CurrentEpochPhase_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CurrentEpochPhase'
type MockComplianceMetrics_CurrentEpochPhase_Call struct {
	*mock.Call
}

// CurrentEpochPhase is a helper method to define mock.On call
//   - phase flow.EpochPhase
func (_e *MockComplianceMetrics_Expecter) CurrentEpochPhase(phase interface{}) *MockComplianceMetrics_CurrentEpochPhase_Call {
	return &MockComplianceMetrics_CurrentEpochPhase_Call{Call: _e.mock.On("CurrentEpochPhase", phase)}
}

func (_c *MockComplianceMetrics_CurrentEpochPhase_Call) Run(run func(phase flow.EpochPhase)) *MockComplianceMetrics_CurrentEpochPhase_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.EpochPhase))
	})
	return _c
}

func (_c *MockComplianceMetrics_CurrentEpochPhase_Call) Return() *MockComplianceMetrics_CurrentEpochPhase_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_CurrentEpochPhase_Call) RunAndReturn(run func(flow.EpochPhase)) *MockComplianceMetrics_CurrentEpochPhase_Call {
	_c.Run(run)
	return _c
}

// EpochFallbackModeExited provides a mock function with no fields
func (_m *MockComplianceMetrics) EpochFallbackModeExited() {
	_m.Called()
}

// MockComplianceMetrics_EpochFallbackModeExited_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EpochFallbackModeExited'
type MockComplianceMetrics_EpochFallbackModeExited_Call struct {
	*mock.Call
}

// EpochFallbackModeExited is a helper method to define mock.On call
func (_e *MockComplianceMetrics_Expecter) EpochFallbackModeExited() *MockComplianceMetrics_EpochFallbackModeExited_Call {
	return &MockComplianceMetrics_EpochFallbackModeExited_Call{Call: _e.mock.On("EpochFallbackModeExited")}
}

func (_c *MockComplianceMetrics_EpochFallbackModeExited_Call) Run(run func()) *MockComplianceMetrics_EpochFallbackModeExited_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockComplianceMetrics_EpochFallbackModeExited_Call) Return() *MockComplianceMetrics_EpochFallbackModeExited_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_EpochFallbackModeExited_Call) RunAndReturn(run func()) *MockComplianceMetrics_EpochFallbackModeExited_Call {
	_c.Run(run)
	return _c
}

// EpochFallbackModeTriggered provides a mock function with no fields
func (_m *MockComplianceMetrics) EpochFallbackModeTriggered() {
	_m.Called()
}

// MockComplianceMetrics_EpochFallbackModeTriggered_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EpochFallbackModeTriggered'
type MockComplianceMetrics_EpochFallbackModeTriggered_Call struct {
	*mock.Call
}

// EpochFallbackModeTriggered is a helper method to define mock.On call
func (_e *MockComplianceMetrics_Expecter) EpochFallbackModeTriggered() *MockComplianceMetrics_EpochFallbackModeTriggered_Call {
	return &MockComplianceMetrics_EpochFallbackModeTriggered_Call{Call: _e.mock.On("EpochFallbackModeTriggered")}
}

func (_c *MockComplianceMetrics_EpochFallbackModeTriggered_Call) Run(run func()) *MockComplianceMetrics_EpochFallbackModeTriggered_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockComplianceMetrics_EpochFallbackModeTriggered_Call) Return() *MockComplianceMetrics_EpochFallbackModeTriggered_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_EpochFallbackModeTriggered_Call) RunAndReturn(run func()) *MockComplianceMetrics_EpochFallbackModeTriggered_Call {
	_c.Run(run)
	return _c
}

// EpochTransitionHeight provides a mock function with given fields: height
func (_m *MockComplianceMetrics) EpochTransitionHeight(height uint64) {
	_m.Called(height)
}

// MockComplianceMetrics_EpochTransitionHeight_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EpochTransitionHeight'
type MockComplianceMetrics_EpochTransitionHeight_Call struct {
	*mock.Call
}

// EpochTransitionHeight is a helper method to define mock.On call
//   - height uint64
func (_e *MockComplianceMetrics_Expecter) EpochTransitionHeight(height interface{}) *MockComplianceMetrics_EpochTransitionHeight_Call {
	return &MockComplianceMetrics_EpochTransitionHeight_Call{Call: _e.mock.On("EpochTransitionHeight", height)}
}

func (_c *MockComplianceMetrics_EpochTransitionHeight_Call) Run(run func(height uint64)) *MockComplianceMetrics_EpochTransitionHeight_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockComplianceMetrics_EpochTransitionHeight_Call) Return() *MockComplianceMetrics_EpochTransitionHeight_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_EpochTransitionHeight_Call) RunAndReturn(run func(uint64)) *MockComplianceMetrics_EpochTransitionHeight_Call {
	_c.Run(run)
	return _c
}

// FinalizedHeight provides a mock function with given fields: height
func (_m *MockComplianceMetrics) FinalizedHeight(height uint64) {
	_m.Called(height)
}

// MockComplianceMetrics_FinalizedHeight_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FinalizedHeight'
type MockComplianceMetrics_FinalizedHeight_Call struct {
	*mock.Call
}

// FinalizedHeight is a helper method to define mock.On call
//   - height uint64
func (_e *MockComplianceMetrics_Expecter) FinalizedHeight(height interface{}) *MockComplianceMetrics_FinalizedHeight_Call {
	return &MockComplianceMetrics_FinalizedHeight_Call{Call: _e.mock.On("FinalizedHeight", height)}
}

func (_c *MockComplianceMetrics_FinalizedHeight_Call) Run(run func(height uint64)) *MockComplianceMetrics_FinalizedHeight_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockComplianceMetrics_FinalizedHeight_Call) Return() *MockComplianceMetrics_FinalizedHeight_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_FinalizedHeight_Call) RunAndReturn(run func(uint64)) *MockComplianceMetrics_FinalizedHeight_Call {
	_c.Run(run)
	return _c
}

// ProtocolStateVersion provides a mock function with given fields: version
func (_m *MockComplianceMetrics) ProtocolStateVersion(version uint64) {
	_m.Called(version)
}

// MockComplianceMetrics_ProtocolStateVersion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProtocolStateVersion'
type MockComplianceMetrics_ProtocolStateVersion_Call struct {
	*mock.Call
}

// ProtocolStateVersion is a helper method to define mock.On call
//   - version uint64
func (_e *MockComplianceMetrics_Expecter) ProtocolStateVersion(version interface{}) *MockComplianceMetrics_ProtocolStateVersion_Call {
	return &MockComplianceMetrics_ProtocolStateVersion_Call{Call: _e.mock.On("ProtocolStateVersion", version)}
}

func (_c *MockComplianceMetrics_ProtocolStateVersion_Call) Run(run func(version uint64)) *MockComplianceMetrics_ProtocolStateVersion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockComplianceMetrics_ProtocolStateVersion_Call) Return() *MockComplianceMetrics_ProtocolStateVersion_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_ProtocolStateVersion_Call) RunAndReturn(run func(uint64)) *MockComplianceMetrics_ProtocolStateVersion_Call {
	_c.Run(run)
	return _c
}

// SealedHeight provides a mock function with given fields: height
func (_m *MockComplianceMetrics) SealedHeight(height uint64) {
	_m.Called(height)
}

// MockComplianceMetrics_SealedHeight_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SealedHeight'
type MockComplianceMetrics_SealedHeight_Call struct {
	*mock.Call
}

// SealedHeight is a helper method to define mock.On call
//   - height uint64
func (_e *MockComplianceMetrics_Expecter) SealedHeight(height interface{}) *MockComplianceMetrics_SealedHeight_Call {
	return &MockComplianceMetrics_SealedHeight_Call{Call: _e.mock.On("SealedHeight", height)}
}

func (_c *MockComplianceMetrics_SealedHeight_Call) Run(run func(height uint64)) *MockComplianceMetrics_SealedHeight_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockComplianceMetrics_SealedHeight_Call) Return() *MockComplianceMetrics_SealedHeight_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComplianceMetrics_SealedHeight_Call) RunAndReturn(run func(uint64)) *MockComplianceMetrics_SealedHeight_Call {
	_c.Run(run)
	return _c
}

// NewMockComplianceMetrics creates a new instance of MockComplianceMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockComplianceMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockComplianceMetrics {
	mock := &MockComplianceMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
