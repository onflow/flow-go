// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockGossipSubRpcInspectorMetrics is an autogenerated mock type for the GossipSubRpcInspectorMetrics type
type MockGossipSubRpcInspectorMetrics struct {
	mock.Mock
}

type MockGossipSubRpcInspectorMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockGossipSubRpcInspectorMetrics) EXPECT() *MockGossipSubRpcInspectorMetrics_Expecter {
	return &MockGossipSubRpcInspectorMetrics_Expecter{mock: &_m.Mock}
}

// OnIHaveMessageIDsReceived provides a mock function with given fields: channel, msgIdCount
func (_m *MockGossipSubRpcInspectorMetrics) OnIHaveMessageIDsReceived(channel string, msgIdCount int) {
	_m.Called(channel, msgIdCount)
}

// MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIHaveMessageIDsReceived'
type MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call struct {
	*mock.Call
}

// OnIHaveMessageIDsReceived is a helper method to define mock.On call
//   - channel string
//   - msgIdCount int
func (_e *MockGossipSubRpcInspectorMetrics_Expecter) OnIHaveMessageIDsReceived(channel interface{}, msgIdCount interface{}) *MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call {
	return &MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call{Call: _e.mock.On("OnIHaveMessageIDsReceived", channel, msgIdCount)}
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call) Run(run func(channel string, msgIdCount int)) *MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(int))
	})
	return _c
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call) Return() *MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call) RunAndReturn(run func(string, int)) *MockGossipSubRpcInspectorMetrics_OnIHaveMessageIDsReceived_Call {
	_c.Run(run)
	return _c
}

// OnIWantMessageIDsReceived provides a mock function with given fields: msgIdCount
func (_m *MockGossipSubRpcInspectorMetrics) OnIWantMessageIDsReceived(msgIdCount int) {
	_m.Called(msgIdCount)
}

// MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIWantMessageIDsReceived'
type MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call struct {
	*mock.Call
}

// OnIWantMessageIDsReceived is a helper method to define mock.On call
//   - msgIdCount int
func (_e *MockGossipSubRpcInspectorMetrics_Expecter) OnIWantMessageIDsReceived(msgIdCount interface{}) *MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call {
	return &MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call{Call: _e.mock.On("OnIWantMessageIDsReceived", msgIdCount)}
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call) Run(run func(msgIdCount int)) *MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call) Return() *MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call) RunAndReturn(run func(int)) *MockGossipSubRpcInspectorMetrics_OnIWantMessageIDsReceived_Call {
	_c.Run(run)
	return _c
}

// OnIncomingRpcReceived provides a mock function with given fields: iHaveCount, iWantCount, graftCount, pruneCount, msgCount
func (_m *MockGossipSubRpcInspectorMetrics) OnIncomingRpcReceived(iHaveCount int, iWantCount int, graftCount int, pruneCount int, msgCount int) {
	_m.Called(iHaveCount, iWantCount, graftCount, pruneCount, msgCount)
}

// MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIncomingRpcReceived'
type MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call struct {
	*mock.Call
}

// OnIncomingRpcReceived is a helper method to define mock.On call
//   - iHaveCount int
//   - iWantCount int
//   - graftCount int
//   - pruneCount int
//   - msgCount int
func (_e *MockGossipSubRpcInspectorMetrics_Expecter) OnIncomingRpcReceived(iHaveCount interface{}, iWantCount interface{}, graftCount interface{}, pruneCount interface{}, msgCount interface{}) *MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call {
	return &MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call{Call: _e.mock.On("OnIncomingRpcReceived", iHaveCount, iWantCount, graftCount, pruneCount, msgCount)}
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call) Run(run func(iHaveCount int, iWantCount int, graftCount int, pruneCount int, msgCount int)) *MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int), args[2].(int), args[3].(int), args[4].(int))
	})
	return _c
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call) Return() *MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call) RunAndReturn(run func(int, int, int, int, int)) *MockGossipSubRpcInspectorMetrics_OnIncomingRpcReceived_Call {
	_c.Run(run)
	return _c
}

// NewMockGossipSubRpcInspectorMetrics creates a new instance of MockGossipSubRpcInspectorMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGossipSubRpcInspectorMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGossipSubRpcInspectorMetrics {
	mock := &MockGossipSubRpcInspectorMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
