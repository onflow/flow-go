// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockSealingConfigsSetter is an autogenerated mock type for the SealingConfigsSetter type
type MockSealingConfigsSetter struct {
	mock.Mock
}

type MockSealingConfigsSetter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSealingConfigsSetter) EXPECT() *MockSealingConfigsSetter_Expecter {
	return &MockSealingConfigsSetter_Expecter{mock: &_m.Mock}
}

// ApprovalRequestsThresholdConst provides a mock function with no fields
func (_m *MockSealingConfigsSetter) ApprovalRequestsThresholdConst() uint64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ApprovalRequestsThresholdConst")
	}

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ApprovalRequestsThresholdConst'
type MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call struct {
	*mock.Call
}

// ApprovalRequestsThresholdConst is a helper method to define mock.On call
func (_e *MockSealingConfigsSetter_Expecter) ApprovalRequestsThresholdConst() *MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call {
	return &MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call{Call: _e.mock.On("ApprovalRequestsThresholdConst")}
}

func (_c *MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call) Run(run func()) *MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call) Return(_a0 uint64) *MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call) RunAndReturn(run func() uint64) *MockSealingConfigsSetter_ApprovalRequestsThresholdConst_Call {
	_c.Call.Return(run)
	return _c
}

// ChunkAlphaConst provides a mock function with no fields
func (_m *MockSealingConfigsSetter) ChunkAlphaConst() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ChunkAlphaConst")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// MockSealingConfigsSetter_ChunkAlphaConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ChunkAlphaConst'
type MockSealingConfigsSetter_ChunkAlphaConst_Call struct {
	*mock.Call
}

// ChunkAlphaConst is a helper method to define mock.On call
func (_e *MockSealingConfigsSetter_Expecter) ChunkAlphaConst() *MockSealingConfigsSetter_ChunkAlphaConst_Call {
	return &MockSealingConfigsSetter_ChunkAlphaConst_Call{Call: _e.mock.On("ChunkAlphaConst")}
}

func (_c *MockSealingConfigsSetter_ChunkAlphaConst_Call) Run(run func()) *MockSealingConfigsSetter_ChunkAlphaConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsSetter_ChunkAlphaConst_Call) Return(_a0 uint) *MockSealingConfigsSetter_ChunkAlphaConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsSetter_ChunkAlphaConst_Call) RunAndReturn(run func() uint) *MockSealingConfigsSetter_ChunkAlphaConst_Call {
	_c.Call.Return(run)
	return _c
}

// EmergencySealingActiveConst provides a mock function with no fields
func (_m *MockSealingConfigsSetter) EmergencySealingActiveConst() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for EmergencySealingActiveConst")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockSealingConfigsSetter_EmergencySealingActiveConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EmergencySealingActiveConst'
type MockSealingConfigsSetter_EmergencySealingActiveConst_Call struct {
	*mock.Call
}

// EmergencySealingActiveConst is a helper method to define mock.On call
func (_e *MockSealingConfigsSetter_Expecter) EmergencySealingActiveConst() *MockSealingConfigsSetter_EmergencySealingActiveConst_Call {
	return &MockSealingConfigsSetter_EmergencySealingActiveConst_Call{Call: _e.mock.On("EmergencySealingActiveConst")}
}

func (_c *MockSealingConfigsSetter_EmergencySealingActiveConst_Call) Run(run func()) *MockSealingConfigsSetter_EmergencySealingActiveConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsSetter_EmergencySealingActiveConst_Call) Return(_a0 bool) *MockSealingConfigsSetter_EmergencySealingActiveConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsSetter_EmergencySealingActiveConst_Call) RunAndReturn(run func() bool) *MockSealingConfigsSetter_EmergencySealingActiveConst_Call {
	_c.Call.Return(run)
	return _c
}

// RequireApprovalsForSealConstructionDynamicValue provides a mock function with no fields
func (_m *MockSealingConfigsSetter) RequireApprovalsForSealConstructionDynamicValue() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequireApprovalsForSealConstructionDynamicValue")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequireApprovalsForSealConstructionDynamicValue'
type MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call struct {
	*mock.Call
}

// RequireApprovalsForSealConstructionDynamicValue is a helper method to define mock.On call
func (_e *MockSealingConfigsSetter_Expecter) RequireApprovalsForSealConstructionDynamicValue() *MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	return &MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call{Call: _e.mock.On("RequireApprovalsForSealConstructionDynamicValue")}
}

func (_c *MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call) Run(run func()) *MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call) Return(_a0 uint) *MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call) RunAndReturn(run func() uint) *MockSealingConfigsSetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	_c.Call.Return(run)
	return _c
}

// RequireApprovalsForSealVerificationConst provides a mock function with no fields
func (_m *MockSealingConfigsSetter) RequireApprovalsForSealVerificationConst() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequireApprovalsForSealVerificationConst")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequireApprovalsForSealVerificationConst'
type MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call struct {
	*mock.Call
}

// RequireApprovalsForSealVerificationConst is a helper method to define mock.On call
func (_e *MockSealingConfigsSetter_Expecter) RequireApprovalsForSealVerificationConst() *MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call {
	return &MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call{Call: _e.mock.On("RequireApprovalsForSealVerificationConst")}
}

func (_c *MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call) Run(run func()) *MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call) Return(_a0 uint) *MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call) RunAndReturn(run func() uint) *MockSealingConfigsSetter_RequireApprovalsForSealVerificationConst_Call {
	_c.Call.Return(run)
	return _c
}

// SetRequiredApprovalsForSealingConstruction provides a mock function with given fields: newVal
func (_m *MockSealingConfigsSetter) SetRequiredApprovalsForSealingConstruction(newVal uint) error {
	ret := _m.Called(newVal)

	if len(ret) == 0 {
		panic("no return value specified for SetRequiredApprovalsForSealingConstruction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint) error); ok {
		r0 = rf(newVal)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetRequiredApprovalsForSealingConstruction'
type MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call struct {
	*mock.Call
}

// SetRequiredApprovalsForSealingConstruction is a helper method to define mock.On call
//   - newVal uint
func (_e *MockSealingConfigsSetter_Expecter) SetRequiredApprovalsForSealingConstruction(newVal interface{}) *MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call {
	return &MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call{Call: _e.mock.On("SetRequiredApprovalsForSealingConstruction", newVal)}
}

func (_c *MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call) Run(run func(newVal uint)) *MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint))
	})
	return _c
}

func (_c *MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call) Return(_a0 error) *MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call) RunAndReturn(run func(uint) error) *MockSealingConfigsSetter_SetRequiredApprovalsForSealingConstruction_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSealingConfigsSetter creates a new instance of MockSealingConfigsSetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSealingConfigsSetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSealingConfigsSetter {
	mock := &MockSealingConfigsSetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
