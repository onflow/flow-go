// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// ReceiptValidator is an autogenerated mock type for the ReceiptValidator type
type ReceiptValidator struct {
	mock.Mock
}

// Validate provides a mock function with given fields: receipt
func (_m *ReceiptValidator) Validate(receipt *flow.ExecutionReceipt) error {
	ret := _m.Called(receipt)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*flow.ExecutionReceipt) error); ok {
		r0 = rf(receipt)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidatePayload provides a mock function with given fields: candidate
func (_m *ReceiptValidator) ValidatePayload(candidate *flow.Block) error {
	ret := _m.Called(candidate)

	if len(ret) == 0 {
		panic("no return value specified for ValidatePayload")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*flow.Block) error); ok {
		r0 = rf(candidate)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewReceiptValidator creates a new instance of ReceiptValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReceiptValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *ReceiptValidator {
	mock := &ReceiptValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
