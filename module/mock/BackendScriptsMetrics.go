// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockBackendScriptsMetrics is an autogenerated mock type for the BackendScriptsMetrics type
type MockBackendScriptsMetrics struct {
	mock.Mock
}

type MockBackendScriptsMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBackendScriptsMetrics) EXPECT() *MockBackendScriptsMetrics_Expecter {
	return &MockBackendScriptsMetrics_Expecter{mock: &_m.Mock}
}

// ScriptExecuted provides a mock function with given fields: dur, size
func (_m *MockBackendScriptsMetrics) ScriptExecuted(dur time.Duration, size int) {
	_m.Called(dur, size)
}

// MockBackendScriptsMetrics_ScriptExecuted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecuted'
type MockBackendScriptsMetrics_ScriptExecuted_Call struct {
	*mock.Call
}

// ScriptExecuted is a helper method to define mock.On call
//   - dur time.Duration
//   - size int
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecuted(dur interface{}, size interface{}) *MockBackendScriptsMetrics_ScriptExecuted_Call {
	return &MockBackendScriptsMetrics_ScriptExecuted_Call{Call: _e.mock.On("ScriptExecuted", dur, size)}
}

func (_c *MockBackendScriptsMetrics_ScriptExecuted_Call) Run(run func(dur time.Duration, size int)) *MockBackendScriptsMetrics_ScriptExecuted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecuted_Call) Return() *MockBackendScriptsMetrics_ScriptExecuted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecuted_Call) RunAndReturn(run func(time.Duration, int)) *MockBackendScriptsMetrics_ScriptExecuted_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorLocal provides a mock function with no fields
func (_m *MockBackendScriptsMetrics) ScriptExecutionErrorLocal() {
	_m.Called()
}

// MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorLocal'
type MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call struct {
	*mock.Call
}

// ScriptExecutionErrorLocal is a helper method to define mock.On call
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecutionErrorLocal() *MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call {
	return &MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call{Call: _e.mock.On("ScriptExecutionErrorLocal")}
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call) Run(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call) Return() *MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call) RunAndReturn(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorLocal_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorMatch provides a mock function with no fields
func (_m *MockBackendScriptsMetrics) ScriptExecutionErrorMatch() {
	_m.Called()
}

// MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorMatch'
type MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call struct {
	*mock.Call
}

// ScriptExecutionErrorMatch is a helper method to define mock.On call
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecutionErrorMatch() *MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call {
	return &MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call{Call: _e.mock.On("ScriptExecutionErrorMatch")}
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call) Run(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call) Return() *MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call) RunAndReturn(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorMatch_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorMismatch provides a mock function with no fields
func (_m *MockBackendScriptsMetrics) ScriptExecutionErrorMismatch() {
	_m.Called()
}

// MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorMismatch'
type MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call struct {
	*mock.Call
}

// ScriptExecutionErrorMismatch is a helper method to define mock.On call
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecutionErrorMismatch() *MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call {
	return &MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call{Call: _e.mock.On("ScriptExecutionErrorMismatch")}
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call) Run(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call) Return() *MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call) RunAndReturn(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorMismatch_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorOnExecutionNode provides a mock function with no fields
func (_m *MockBackendScriptsMetrics) ScriptExecutionErrorOnExecutionNode() {
	_m.Called()
}

// MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorOnExecutionNode'
type MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call struct {
	*mock.Call
}

// ScriptExecutionErrorOnExecutionNode is a helper method to define mock.On call
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecutionErrorOnExecutionNode() *MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	return &MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call{Call: _e.mock.On("ScriptExecutionErrorOnExecutionNode")}
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call) Run(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call) Return() *MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call) RunAndReturn(run func()) *MockBackendScriptsMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionNotIndexed provides a mock function with no fields
func (_m *MockBackendScriptsMetrics) ScriptExecutionNotIndexed() {
	_m.Called()
}

// MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionNotIndexed'
type MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call struct {
	*mock.Call
}

// ScriptExecutionNotIndexed is a helper method to define mock.On call
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecutionNotIndexed() *MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call {
	return &MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call{Call: _e.mock.On("ScriptExecutionNotIndexed")}
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call) Run(run func()) *MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call) Return() *MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call) RunAndReturn(run func()) *MockBackendScriptsMetrics_ScriptExecutionNotIndexed_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionResultMatch provides a mock function with no fields
func (_m *MockBackendScriptsMetrics) ScriptExecutionResultMatch() {
	_m.Called()
}

// MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionResultMatch'
type MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call struct {
	*mock.Call
}

// ScriptExecutionResultMatch is a helper method to define mock.On call
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecutionResultMatch() *MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call {
	return &MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call{Call: _e.mock.On("ScriptExecutionResultMatch")}
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call) Run(run func()) *MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call) Return() *MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call) RunAndReturn(run func()) *MockBackendScriptsMetrics_ScriptExecutionResultMatch_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionResultMismatch provides a mock function with no fields
func (_m *MockBackendScriptsMetrics) ScriptExecutionResultMismatch() {
	_m.Called()
}

// MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionResultMismatch'
type MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call struct {
	*mock.Call
}

// ScriptExecutionResultMismatch is a helper method to define mock.On call
func (_e *MockBackendScriptsMetrics_Expecter) ScriptExecutionResultMismatch() *MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call {
	return &MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call{Call: _e.mock.On("ScriptExecutionResultMismatch")}
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call) Run(run func()) *MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call) Return() *MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call) RunAndReturn(run func()) *MockBackendScriptsMetrics_ScriptExecutionResultMismatch_Call {
	_c.Run(run)
	return _c
}

// NewMockBackendScriptsMetrics creates a new instance of MockBackendScriptsMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBackendScriptsMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBackendScriptsMetrics {
	mock := &MockBackendScriptsMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
