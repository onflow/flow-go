// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	module "github.com/onflow/flow-go/module"
	mock "github.com/stretchr/testify/mock"
)

// MockJobQueue is an autogenerated mock type for the JobQueue type
type MockJobQueue struct {
	mock.Mock
}

type MockJobQueue_Expecter struct {
	mock *mock.Mock
}

func (_m *MockJobQueue) EXPECT() *MockJobQueue_Expecter {
	return &MockJobQueue_Expecter{mock: &_m.Mock}
}

// Add provides a mock function with given fields: job
func (_m *MockJobQueue) Add(job module.Job) error {
	ret := _m.Called(job)

	if len(ret) == 0 {
		panic("no return value specified for Add")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(module.Job) error); ok {
		r0 = rf(job)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockJobQueue_Add_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Add'
type MockJobQueue_Add_Call struct {
	*mock.Call
}

// Add is a helper method to define mock.On call
//   - job module.Job
func (_e *MockJobQueue_Expecter) Add(job interface{}) *MockJobQueue_Add_Call {
	return &MockJobQueue_Add_Call{Call: _e.mock.On("Add", job)}
}

func (_c *MockJobQueue_Add_Call) Run(run func(job module.Job)) *MockJobQueue_Add_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(module.Job))
	})
	return _c
}

func (_c *MockJobQueue_Add_Call) Return(_a0 error) *MockJobQueue_Add_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockJobQueue_Add_Call) RunAndReturn(run func(module.Job) error) *MockJobQueue_Add_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockJobQueue creates a new instance of MockJobQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockJobQueue(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockJobQueue {
	mock := &MockJobQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
