// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockHeroCacheMetrics is an autogenerated mock type for the HeroCacheMetrics type
type MockHeroCacheMetrics struct {
	mock.Mock
}

type MockHeroCacheMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHeroCacheMetrics) EXPECT() *MockHeroCacheMetrics_Expecter {
	return &MockHeroCacheMetrics_Expecter{mock: &_m.Mock}
}

// BucketAvailableSlots provides a mock function with given fields: _a0, _a1
func (_m *MockHeroCacheMetrics) BucketAvailableSlots(_a0 uint64, _a1 uint64) {
	_m.Called(_a0, _a1)
}

// MockHeroCacheMetrics_BucketAvailableSlots_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BucketAvailableSlots'
type MockHeroCacheMetrics_BucketAvailableSlots_Call struct {
	*mock.Call
}

// BucketAvailableSlots is a helper method to define mock.On call
//   - _a0 uint64
//   - _a1 uint64
func (_e *MockHeroCacheMetrics_Expecter) BucketAvailableSlots(_a0 interface{}, _a1 interface{}) *MockHeroCacheMetrics_BucketAvailableSlots_Call {
	return &MockHeroCacheMetrics_BucketAvailableSlots_Call{Call: _e.mock.On("BucketAvailableSlots", _a0, _a1)}
}

func (_c *MockHeroCacheMetrics_BucketAvailableSlots_Call) Run(run func(_a0 uint64, _a1 uint64)) *MockHeroCacheMetrics_BucketAvailableSlots_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64), args[1].(uint64))
	})
	return _c
}

func (_c *MockHeroCacheMetrics_BucketAvailableSlots_Call) Return() *MockHeroCacheMetrics_BucketAvailableSlots_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_BucketAvailableSlots_Call) RunAndReturn(run func(uint64, uint64)) *MockHeroCacheMetrics_BucketAvailableSlots_Call {
	_c.Run(run)
	return _c
}

// OnEntityEjectionDueToEmergency provides a mock function with no fields
func (_m *MockHeroCacheMetrics) OnEntityEjectionDueToEmergency() {
	_m.Called()
}

// MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnEntityEjectionDueToEmergency'
type MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call struct {
	*mock.Call
}

// OnEntityEjectionDueToEmergency is a helper method to define mock.On call
func (_e *MockHeroCacheMetrics_Expecter) OnEntityEjectionDueToEmergency() *MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call {
	return &MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call{Call: _e.mock.On("OnEntityEjectionDueToEmergency")}
}

func (_c *MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call) Run(run func()) *MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call) Return() *MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call) RunAndReturn(run func()) *MockHeroCacheMetrics_OnEntityEjectionDueToEmergency_Call {
	_c.Run(run)
	return _c
}

// OnEntityEjectionDueToFullCapacity provides a mock function with no fields
func (_m *MockHeroCacheMetrics) OnEntityEjectionDueToFullCapacity() {
	_m.Called()
}

// MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnEntityEjectionDueToFullCapacity'
type MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call struct {
	*mock.Call
}

// OnEntityEjectionDueToFullCapacity is a helper method to define mock.On call
func (_e *MockHeroCacheMetrics_Expecter) OnEntityEjectionDueToFullCapacity() *MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call {
	return &MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call{Call: _e.mock.On("OnEntityEjectionDueToFullCapacity")}
}

func (_c *MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call) Run(run func()) *MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call) Return() *MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call) RunAndReturn(run func()) *MockHeroCacheMetrics_OnEntityEjectionDueToFullCapacity_Call {
	_c.Run(run)
	return _c
}

// OnKeyGetFailure provides a mock function with no fields
func (_m *MockHeroCacheMetrics) OnKeyGetFailure() {
	_m.Called()
}

// MockHeroCacheMetrics_OnKeyGetFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnKeyGetFailure'
type MockHeroCacheMetrics_OnKeyGetFailure_Call struct {
	*mock.Call
}

// OnKeyGetFailure is a helper method to define mock.On call
func (_e *MockHeroCacheMetrics_Expecter) OnKeyGetFailure() *MockHeroCacheMetrics_OnKeyGetFailure_Call {
	return &MockHeroCacheMetrics_OnKeyGetFailure_Call{Call: _e.mock.On("OnKeyGetFailure")}
}

func (_c *MockHeroCacheMetrics_OnKeyGetFailure_Call) Run(run func()) *MockHeroCacheMetrics_OnKeyGetFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyGetFailure_Call) Return() *MockHeroCacheMetrics_OnKeyGetFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyGetFailure_Call) RunAndReturn(run func()) *MockHeroCacheMetrics_OnKeyGetFailure_Call {
	_c.Run(run)
	return _c
}

// OnKeyGetSuccess provides a mock function with no fields
func (_m *MockHeroCacheMetrics) OnKeyGetSuccess() {
	_m.Called()
}

// MockHeroCacheMetrics_OnKeyGetSuccess_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnKeyGetSuccess'
type MockHeroCacheMetrics_OnKeyGetSuccess_Call struct {
	*mock.Call
}

// OnKeyGetSuccess is a helper method to define mock.On call
func (_e *MockHeroCacheMetrics_Expecter) OnKeyGetSuccess() *MockHeroCacheMetrics_OnKeyGetSuccess_Call {
	return &MockHeroCacheMetrics_OnKeyGetSuccess_Call{Call: _e.mock.On("OnKeyGetSuccess")}
}

func (_c *MockHeroCacheMetrics_OnKeyGetSuccess_Call) Run(run func()) *MockHeroCacheMetrics_OnKeyGetSuccess_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyGetSuccess_Call) Return() *MockHeroCacheMetrics_OnKeyGetSuccess_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyGetSuccess_Call) RunAndReturn(run func()) *MockHeroCacheMetrics_OnKeyGetSuccess_Call {
	_c.Run(run)
	return _c
}

// OnKeyPutAttempt provides a mock function with given fields: size
func (_m *MockHeroCacheMetrics) OnKeyPutAttempt(size uint32) {
	_m.Called(size)
}

// MockHeroCacheMetrics_OnKeyPutAttempt_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnKeyPutAttempt'
type MockHeroCacheMetrics_OnKeyPutAttempt_Call struct {
	*mock.Call
}

// OnKeyPutAttempt is a helper method to define mock.On call
//   - size uint32
func (_e *MockHeroCacheMetrics_Expecter) OnKeyPutAttempt(size interface{}) *MockHeroCacheMetrics_OnKeyPutAttempt_Call {
	return &MockHeroCacheMetrics_OnKeyPutAttempt_Call{Call: _e.mock.On("OnKeyPutAttempt", size)}
}

func (_c *MockHeroCacheMetrics_OnKeyPutAttempt_Call) Run(run func(size uint32)) *MockHeroCacheMetrics_OnKeyPutAttempt_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint32))
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutAttempt_Call) Return() *MockHeroCacheMetrics_OnKeyPutAttempt_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutAttempt_Call) RunAndReturn(run func(uint32)) *MockHeroCacheMetrics_OnKeyPutAttempt_Call {
	_c.Run(run)
	return _c
}

// OnKeyPutDeduplicated provides a mock function with no fields
func (_m *MockHeroCacheMetrics) OnKeyPutDeduplicated() {
	_m.Called()
}

// MockHeroCacheMetrics_OnKeyPutDeduplicated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnKeyPutDeduplicated'
type MockHeroCacheMetrics_OnKeyPutDeduplicated_Call struct {
	*mock.Call
}

// OnKeyPutDeduplicated is a helper method to define mock.On call
func (_e *MockHeroCacheMetrics_Expecter) OnKeyPutDeduplicated() *MockHeroCacheMetrics_OnKeyPutDeduplicated_Call {
	return &MockHeroCacheMetrics_OnKeyPutDeduplicated_Call{Call: _e.mock.On("OnKeyPutDeduplicated")}
}

func (_c *MockHeroCacheMetrics_OnKeyPutDeduplicated_Call) Run(run func()) *MockHeroCacheMetrics_OnKeyPutDeduplicated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutDeduplicated_Call) Return() *MockHeroCacheMetrics_OnKeyPutDeduplicated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutDeduplicated_Call) RunAndReturn(run func()) *MockHeroCacheMetrics_OnKeyPutDeduplicated_Call {
	_c.Run(run)
	return _c
}

// OnKeyPutDrop provides a mock function with no fields
func (_m *MockHeroCacheMetrics) OnKeyPutDrop() {
	_m.Called()
}

// MockHeroCacheMetrics_OnKeyPutDrop_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnKeyPutDrop'
type MockHeroCacheMetrics_OnKeyPutDrop_Call struct {
	*mock.Call
}

// OnKeyPutDrop is a helper method to define mock.On call
func (_e *MockHeroCacheMetrics_Expecter) OnKeyPutDrop() *MockHeroCacheMetrics_OnKeyPutDrop_Call {
	return &MockHeroCacheMetrics_OnKeyPutDrop_Call{Call: _e.mock.On("OnKeyPutDrop")}
}

func (_c *MockHeroCacheMetrics_OnKeyPutDrop_Call) Run(run func()) *MockHeroCacheMetrics_OnKeyPutDrop_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutDrop_Call) Return() *MockHeroCacheMetrics_OnKeyPutDrop_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutDrop_Call) RunAndReturn(run func()) *MockHeroCacheMetrics_OnKeyPutDrop_Call {
	_c.Run(run)
	return _c
}

// OnKeyPutSuccess provides a mock function with given fields: size
func (_m *MockHeroCacheMetrics) OnKeyPutSuccess(size uint32) {
	_m.Called(size)
}

// MockHeroCacheMetrics_OnKeyPutSuccess_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnKeyPutSuccess'
type MockHeroCacheMetrics_OnKeyPutSuccess_Call struct {
	*mock.Call
}

// OnKeyPutSuccess is a helper method to define mock.On call
//   - size uint32
func (_e *MockHeroCacheMetrics_Expecter) OnKeyPutSuccess(size interface{}) *MockHeroCacheMetrics_OnKeyPutSuccess_Call {
	return &MockHeroCacheMetrics_OnKeyPutSuccess_Call{Call: _e.mock.On("OnKeyPutSuccess", size)}
}

func (_c *MockHeroCacheMetrics_OnKeyPutSuccess_Call) Run(run func(size uint32)) *MockHeroCacheMetrics_OnKeyPutSuccess_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint32))
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutSuccess_Call) Return() *MockHeroCacheMetrics_OnKeyPutSuccess_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyPutSuccess_Call) RunAndReturn(run func(uint32)) *MockHeroCacheMetrics_OnKeyPutSuccess_Call {
	_c.Run(run)
	return _c
}

// OnKeyRemoved provides a mock function with given fields: size
func (_m *MockHeroCacheMetrics) OnKeyRemoved(size uint32) {
	_m.Called(size)
}

// MockHeroCacheMetrics_OnKeyRemoved_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnKeyRemoved'
type MockHeroCacheMetrics_OnKeyRemoved_Call struct {
	*mock.Call
}

// OnKeyRemoved is a helper method to define mock.On call
//   - size uint32
func (_e *MockHeroCacheMetrics_Expecter) OnKeyRemoved(size interface{}) *MockHeroCacheMetrics_OnKeyRemoved_Call {
	return &MockHeroCacheMetrics_OnKeyRemoved_Call{Call: _e.mock.On("OnKeyRemoved", size)}
}

func (_c *MockHeroCacheMetrics_OnKeyRemoved_Call) Run(run func(size uint32)) *MockHeroCacheMetrics_OnKeyRemoved_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint32))
	})
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyRemoved_Call) Return() *MockHeroCacheMetrics_OnKeyRemoved_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHeroCacheMetrics_OnKeyRemoved_Call) RunAndReturn(run func(uint32)) *MockHeroCacheMetrics_OnKeyRemoved_Call {
	_c.Run(run)
	return _c
}

// NewMockHeroCacheMetrics creates a new instance of MockHeroCacheMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHeroCacheMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHeroCacheMetrics {
	mock := &MockHeroCacheMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
