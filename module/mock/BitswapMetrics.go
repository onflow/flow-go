// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockBitswapMetrics is an autogenerated mock type for the BitswapMetrics type
type MockBitswapMetrics struct {
	mock.Mock
}

type MockBitswapMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBitswapMetrics) EXPECT() *MockBitswapMetrics_Expecter {
	return &MockBitswapMetrics_Expecter{mock: &_m.Mock}
}

// BlobsReceived provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) BlobsReceived(prefix string, n uint64) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_BlobsReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlobsReceived'
type MockBitswapMetrics_BlobsReceived_Call struct {
	*mock.Call
}

// BlobsReceived is a helper method to define mock.On call
//   - prefix string
//   - n uint64
func (_e *MockBitswapMetrics_Expecter) BlobsReceived(prefix interface{}, n interface{}) *MockBitswapMetrics_BlobsReceived_Call {
	return &MockBitswapMetrics_BlobsReceived_Call{Call: _e.mock.On("BlobsReceived", prefix, n)}
}

func (_c *MockBitswapMetrics_BlobsReceived_Call) Run(run func(prefix string, n uint64)) *MockBitswapMetrics_BlobsReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint64))
	})
	return _c
}

func (_c *MockBitswapMetrics_BlobsReceived_Call) Return() *MockBitswapMetrics_BlobsReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_BlobsReceived_Call) RunAndReturn(run func(string, uint64)) *MockBitswapMetrics_BlobsReceived_Call {
	_c.Run(run)
	return _c
}

// BlobsSent provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) BlobsSent(prefix string, n uint64) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_BlobsSent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlobsSent'
type MockBitswapMetrics_BlobsSent_Call struct {
	*mock.Call
}

// BlobsSent is a helper method to define mock.On call
//   - prefix string
//   - n uint64
func (_e *MockBitswapMetrics_Expecter) BlobsSent(prefix interface{}, n interface{}) *MockBitswapMetrics_BlobsSent_Call {
	return &MockBitswapMetrics_BlobsSent_Call{Call: _e.mock.On("BlobsSent", prefix, n)}
}

func (_c *MockBitswapMetrics_BlobsSent_Call) Run(run func(prefix string, n uint64)) *MockBitswapMetrics_BlobsSent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint64))
	})
	return _c
}

func (_c *MockBitswapMetrics_BlobsSent_Call) Return() *MockBitswapMetrics_BlobsSent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_BlobsSent_Call) RunAndReturn(run func(string, uint64)) *MockBitswapMetrics_BlobsSent_Call {
	_c.Run(run)
	return _c
}

// DataReceived provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) DataReceived(prefix string, n uint64) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_DataReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DataReceived'
type MockBitswapMetrics_DataReceived_Call struct {
	*mock.Call
}

// DataReceived is a helper method to define mock.On call
//   - prefix string
//   - n uint64
func (_e *MockBitswapMetrics_Expecter) DataReceived(prefix interface{}, n interface{}) *MockBitswapMetrics_DataReceived_Call {
	return &MockBitswapMetrics_DataReceived_Call{Call: _e.mock.On("DataReceived", prefix, n)}
}

func (_c *MockBitswapMetrics_DataReceived_Call) Run(run func(prefix string, n uint64)) *MockBitswapMetrics_DataReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint64))
	})
	return _c
}

func (_c *MockBitswapMetrics_DataReceived_Call) Return() *MockBitswapMetrics_DataReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_DataReceived_Call) RunAndReturn(run func(string, uint64)) *MockBitswapMetrics_DataReceived_Call {
	_c.Run(run)
	return _c
}

// DataSent provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) DataSent(prefix string, n uint64) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_DataSent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DataSent'
type MockBitswapMetrics_DataSent_Call struct {
	*mock.Call
}

// DataSent is a helper method to define mock.On call
//   - prefix string
//   - n uint64
func (_e *MockBitswapMetrics_Expecter) DataSent(prefix interface{}, n interface{}) *MockBitswapMetrics_DataSent_Call {
	return &MockBitswapMetrics_DataSent_Call{Call: _e.mock.On("DataSent", prefix, n)}
}

func (_c *MockBitswapMetrics_DataSent_Call) Run(run func(prefix string, n uint64)) *MockBitswapMetrics_DataSent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint64))
	})
	return _c
}

func (_c *MockBitswapMetrics_DataSent_Call) Return() *MockBitswapMetrics_DataSent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_DataSent_Call) RunAndReturn(run func(string, uint64)) *MockBitswapMetrics_DataSent_Call {
	_c.Run(run)
	return _c
}

// DupBlobsReceived provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) DupBlobsReceived(prefix string, n uint64) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_DupBlobsReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DupBlobsReceived'
type MockBitswapMetrics_DupBlobsReceived_Call struct {
	*mock.Call
}

// DupBlobsReceived is a helper method to define mock.On call
//   - prefix string
//   - n uint64
func (_e *MockBitswapMetrics_Expecter) DupBlobsReceived(prefix interface{}, n interface{}) *MockBitswapMetrics_DupBlobsReceived_Call {
	return &MockBitswapMetrics_DupBlobsReceived_Call{Call: _e.mock.On("DupBlobsReceived", prefix, n)}
}

func (_c *MockBitswapMetrics_DupBlobsReceived_Call) Run(run func(prefix string, n uint64)) *MockBitswapMetrics_DupBlobsReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint64))
	})
	return _c
}

func (_c *MockBitswapMetrics_DupBlobsReceived_Call) Return() *MockBitswapMetrics_DupBlobsReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_DupBlobsReceived_Call) RunAndReturn(run func(string, uint64)) *MockBitswapMetrics_DupBlobsReceived_Call {
	_c.Run(run)
	return _c
}

// DupDataReceived provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) DupDataReceived(prefix string, n uint64) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_DupDataReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DupDataReceived'
type MockBitswapMetrics_DupDataReceived_Call struct {
	*mock.Call
}

// DupDataReceived is a helper method to define mock.On call
//   - prefix string
//   - n uint64
func (_e *MockBitswapMetrics_Expecter) DupDataReceived(prefix interface{}, n interface{}) *MockBitswapMetrics_DupDataReceived_Call {
	return &MockBitswapMetrics_DupDataReceived_Call{Call: _e.mock.On("DupDataReceived", prefix, n)}
}

func (_c *MockBitswapMetrics_DupDataReceived_Call) Run(run func(prefix string, n uint64)) *MockBitswapMetrics_DupDataReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint64))
	})
	return _c
}

func (_c *MockBitswapMetrics_DupDataReceived_Call) Return() *MockBitswapMetrics_DupDataReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_DupDataReceived_Call) RunAndReturn(run func(string, uint64)) *MockBitswapMetrics_DupDataReceived_Call {
	_c.Run(run)
	return _c
}

// MessagesReceived provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) MessagesReceived(prefix string, n uint64) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_MessagesReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MessagesReceived'
type MockBitswapMetrics_MessagesReceived_Call struct {
	*mock.Call
}

// MessagesReceived is a helper method to define mock.On call
//   - prefix string
//   - n uint64
func (_e *MockBitswapMetrics_Expecter) MessagesReceived(prefix interface{}, n interface{}) *MockBitswapMetrics_MessagesReceived_Call {
	return &MockBitswapMetrics_MessagesReceived_Call{Call: _e.mock.On("MessagesReceived", prefix, n)}
}

func (_c *MockBitswapMetrics_MessagesReceived_Call) Run(run func(prefix string, n uint64)) *MockBitswapMetrics_MessagesReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint64))
	})
	return _c
}

func (_c *MockBitswapMetrics_MessagesReceived_Call) Return() *MockBitswapMetrics_MessagesReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_MessagesReceived_Call) RunAndReturn(run func(string, uint64)) *MockBitswapMetrics_MessagesReceived_Call {
	_c.Run(run)
	return _c
}

// Peers provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) Peers(prefix string, n int) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_Peers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Peers'
type MockBitswapMetrics_Peers_Call struct {
	*mock.Call
}

// Peers is a helper method to define mock.On call
//   - prefix string
//   - n int
func (_e *MockBitswapMetrics_Expecter) Peers(prefix interface{}, n interface{}) *MockBitswapMetrics_Peers_Call {
	return &MockBitswapMetrics_Peers_Call{Call: _e.mock.On("Peers", prefix, n)}
}

func (_c *MockBitswapMetrics_Peers_Call) Run(run func(prefix string, n int)) *MockBitswapMetrics_Peers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(int))
	})
	return _c
}

func (_c *MockBitswapMetrics_Peers_Call) Return() *MockBitswapMetrics_Peers_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_Peers_Call) RunAndReturn(run func(string, int)) *MockBitswapMetrics_Peers_Call {
	_c.Run(run)
	return _c
}

// Wantlist provides a mock function with given fields: prefix, n
func (_m *MockBitswapMetrics) Wantlist(prefix string, n int) {
	_m.Called(prefix, n)
}

// MockBitswapMetrics_Wantlist_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Wantlist'
type MockBitswapMetrics_Wantlist_Call struct {
	*mock.Call
}

// Wantlist is a helper method to define mock.On call
//   - prefix string
//   - n int
func (_e *MockBitswapMetrics_Expecter) Wantlist(prefix interface{}, n interface{}) *MockBitswapMetrics_Wantlist_Call {
	return &MockBitswapMetrics_Wantlist_Call{Call: _e.mock.On("Wantlist", prefix, n)}
}

func (_c *MockBitswapMetrics_Wantlist_Call) Run(run func(prefix string, n int)) *MockBitswapMetrics_Wantlist_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(int))
	})
	return _c
}

func (_c *MockBitswapMetrics_Wantlist_Call) Return() *MockBitswapMetrics_Wantlist_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBitswapMetrics_Wantlist_Call) RunAndReturn(run func(string, int)) *MockBitswapMetrics_Wantlist_Call {
	_c.Run(run)
	return _c
}

// NewMockBitswapMetrics creates a new instance of MockBitswapMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBitswapMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBitswapMetrics {
	mock := &MockBitswapMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
