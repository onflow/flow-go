// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockLibP2PConnectionMetrics is an autogenerated mock type for the LibP2PConnectionMetrics type
type MockLibP2PConnectionMetrics struct {
	mock.Mock
}

type MockLibP2PConnectionMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockLibP2PConnectionMetrics) EXPECT() *MockLibP2PConnectionMetrics_Expecter {
	return &MockLibP2PConnectionMetrics_Expecter{mock: &_m.Mock}
}

// InboundConnections provides a mock function with given fields: connectionCount
func (_m *MockLibP2PConnectionMetrics) InboundConnections(connectionCount uint) {
	_m.Called(connectionCount)
}

// MockLibP2PConnectionMetrics_InboundConnections_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InboundConnections'
type MockLibP2PConnectionMetrics_InboundConnections_Call struct {
	*mock.Call
}

// InboundConnections is a helper method to define mock.On call
//   - connectionCount uint
func (_e *MockLibP2PConnectionMetrics_Expecter) InboundConnections(connectionCount interface{}) *MockLibP2PConnectionMetrics_InboundConnections_Call {
	return &MockLibP2PConnectionMetrics_InboundConnections_Call{Call: _e.mock.On("InboundConnections", connectionCount)}
}

func (_c *MockLibP2PConnectionMetrics_InboundConnections_Call) Run(run func(connectionCount uint)) *MockLibP2PConnectionMetrics_InboundConnections_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint))
	})
	return _c
}

func (_c *MockLibP2PConnectionMetrics_InboundConnections_Call) Return() *MockLibP2PConnectionMetrics_InboundConnections_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockLibP2PConnectionMetrics_InboundConnections_Call) RunAndReturn(run func(uint)) *MockLibP2PConnectionMetrics_InboundConnections_Call {
	_c.Run(run)
	return _c
}

// OutboundConnections provides a mock function with given fields: connectionCount
func (_m *MockLibP2PConnectionMetrics) OutboundConnections(connectionCount uint) {
	_m.Called(connectionCount)
}

// MockLibP2PConnectionMetrics_OutboundConnections_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OutboundConnections'
type MockLibP2PConnectionMetrics_OutboundConnections_Call struct {
	*mock.Call
}

// OutboundConnections is a helper method to define mock.On call
//   - connectionCount uint
func (_e *MockLibP2PConnectionMetrics_Expecter) OutboundConnections(connectionCount interface{}) *MockLibP2PConnectionMetrics_OutboundConnections_Call {
	return &MockLibP2PConnectionMetrics_OutboundConnections_Call{Call: _e.mock.On("OutboundConnections", connectionCount)}
}

func (_c *MockLibP2PConnectionMetrics_OutboundConnections_Call) Run(run func(connectionCount uint)) *MockLibP2PConnectionMetrics_OutboundConnections_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint))
	})
	return _c
}

func (_c *MockLibP2PConnectionMetrics_OutboundConnections_Call) Return() *MockLibP2PConnectionMetrics_OutboundConnections_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockLibP2PConnectionMetrics_OutboundConnections_Call) RunAndReturn(run func(uint)) *MockLibP2PConnectionMetrics_OutboundConnections_Call {
	_c.Run(run)
	return _c
}

// NewMockLibP2PConnectionMetrics creates a new instance of MockLibP2PConnectionMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLibP2PConnectionMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLibP2PConnectionMetrics {
	mock := &MockLibP2PConnectionMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
