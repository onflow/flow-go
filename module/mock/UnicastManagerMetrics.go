// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockUnicastManagerMetrics is an autogenerated mock type for the UnicastManagerMetrics type
type MockUnicastManagerMetrics struct {
	mock.Mock
}

type MockUnicastManagerMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnicastManagerMetrics) EXPECT() *MockUnicastManagerMetrics_Expecter {
	return &MockUnicastManagerMetrics_Expecter{mock: &_m.Mock}
}

// OnDialRetryBudgetResetToDefault provides a mock function with no fields
func (_m *MockUnicastManagerMetrics) OnDialRetryBudgetResetToDefault() {
	_m.Called()
}

// MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDialRetryBudgetResetToDefault'
type MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call struct {
	*mock.Call
}

// OnDialRetryBudgetResetToDefault is a helper method to define mock.On call
func (_e *MockUnicastManagerMetrics_Expecter) OnDialRetryBudgetResetToDefault() *MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call {
	return &MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call{Call: _e.mock.On("OnDialRetryBudgetResetToDefault")}
}

func (_c *MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call) Run(run func()) *MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call) Return() *MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call) RunAndReturn(run func()) *MockUnicastManagerMetrics_OnDialRetryBudgetResetToDefault_Call {
	_c.Run(run)
	return _c
}

// OnDialRetryBudgetUpdated provides a mock function with given fields: budget
func (_m *MockUnicastManagerMetrics) OnDialRetryBudgetUpdated(budget uint64) {
	_m.Called(budget)
}

// MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDialRetryBudgetUpdated'
type MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call struct {
	*mock.Call
}

// OnDialRetryBudgetUpdated is a helper method to define mock.On call
//   - budget uint64
func (_e *MockUnicastManagerMetrics_Expecter) OnDialRetryBudgetUpdated(budget interface{}) *MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call {
	return &MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call{Call: _e.mock.On("OnDialRetryBudgetUpdated", budget)}
}

func (_c *MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call) Run(run func(budget uint64)) *MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call) Return() *MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call) RunAndReturn(run func(uint64)) *MockUnicastManagerMetrics_OnDialRetryBudgetUpdated_Call {
	_c.Run(run)
	return _c
}

// OnEstablishStreamFailure provides a mock function with given fields: duration, attempts
func (_m *MockUnicastManagerMetrics) OnEstablishStreamFailure(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockUnicastManagerMetrics_OnEstablishStreamFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnEstablishStreamFailure'
type MockUnicastManagerMetrics_OnEstablishStreamFailure_Call struct {
	*mock.Call
}

// OnEstablishStreamFailure is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockUnicastManagerMetrics_Expecter) OnEstablishStreamFailure(duration interface{}, attempts interface{}) *MockUnicastManagerMetrics_OnEstablishStreamFailure_Call {
	return &MockUnicastManagerMetrics_OnEstablishStreamFailure_Call{Call: _e.mock.On("OnEstablishStreamFailure", duration, attempts)}
}

func (_c *MockUnicastManagerMetrics_OnEstablishStreamFailure_Call) Run(run func(duration time.Duration, attempts int)) *MockUnicastManagerMetrics_OnEstablishStreamFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnEstablishStreamFailure_Call) Return() *MockUnicastManagerMetrics_OnEstablishStreamFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnEstablishStreamFailure_Call) RunAndReturn(run func(time.Duration, int)) *MockUnicastManagerMetrics_OnEstablishStreamFailure_Call {
	_c.Run(run)
	return _c
}

// OnPeerDialFailure provides a mock function with given fields: duration, attempts
func (_m *MockUnicastManagerMetrics) OnPeerDialFailure(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockUnicastManagerMetrics_OnPeerDialFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerDialFailure'
type MockUnicastManagerMetrics_OnPeerDialFailure_Call struct {
	*mock.Call
}

// OnPeerDialFailure is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockUnicastManagerMetrics_Expecter) OnPeerDialFailure(duration interface{}, attempts interface{}) *MockUnicastManagerMetrics_OnPeerDialFailure_Call {
	return &MockUnicastManagerMetrics_OnPeerDialFailure_Call{Call: _e.mock.On("OnPeerDialFailure", duration, attempts)}
}

func (_c *MockUnicastManagerMetrics_OnPeerDialFailure_Call) Run(run func(duration time.Duration, attempts int)) *MockUnicastManagerMetrics_OnPeerDialFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnPeerDialFailure_Call) Return() *MockUnicastManagerMetrics_OnPeerDialFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnPeerDialFailure_Call) RunAndReturn(run func(time.Duration, int)) *MockUnicastManagerMetrics_OnPeerDialFailure_Call {
	_c.Run(run)
	return _c
}

// OnPeerDialed provides a mock function with given fields: duration, attempts
func (_m *MockUnicastManagerMetrics) OnPeerDialed(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockUnicastManagerMetrics_OnPeerDialed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerDialed'
type MockUnicastManagerMetrics_OnPeerDialed_Call struct {
	*mock.Call
}

// OnPeerDialed is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockUnicastManagerMetrics_Expecter) OnPeerDialed(duration interface{}, attempts interface{}) *MockUnicastManagerMetrics_OnPeerDialed_Call {
	return &MockUnicastManagerMetrics_OnPeerDialed_Call{Call: _e.mock.On("OnPeerDialed", duration, attempts)}
}

func (_c *MockUnicastManagerMetrics_OnPeerDialed_Call) Run(run func(duration time.Duration, attempts int)) *MockUnicastManagerMetrics_OnPeerDialed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnPeerDialed_Call) Return() *MockUnicastManagerMetrics_OnPeerDialed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnPeerDialed_Call) RunAndReturn(run func(time.Duration, int)) *MockUnicastManagerMetrics_OnPeerDialed_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreated provides a mock function with given fields: duration, attempts
func (_m *MockUnicastManagerMetrics) OnStreamCreated(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockUnicastManagerMetrics_OnStreamCreated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreated'
type MockUnicastManagerMetrics_OnStreamCreated_Call struct {
	*mock.Call
}

// OnStreamCreated is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockUnicastManagerMetrics_Expecter) OnStreamCreated(duration interface{}, attempts interface{}) *MockUnicastManagerMetrics_OnStreamCreated_Call {
	return &MockUnicastManagerMetrics_OnStreamCreated_Call{Call: _e.mock.On("OnStreamCreated", duration, attempts)}
}

func (_c *MockUnicastManagerMetrics_OnStreamCreated_Call) Run(run func(duration time.Duration, attempts int)) *MockUnicastManagerMetrics_OnStreamCreated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreated_Call) Return() *MockUnicastManagerMetrics_OnStreamCreated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreated_Call) RunAndReturn(run func(time.Duration, int)) *MockUnicastManagerMetrics_OnStreamCreated_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreationFailure provides a mock function with given fields: duration, attempts
func (_m *MockUnicastManagerMetrics) OnStreamCreationFailure(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockUnicastManagerMetrics_OnStreamCreationFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreationFailure'
type MockUnicastManagerMetrics_OnStreamCreationFailure_Call struct {
	*mock.Call
}

// OnStreamCreationFailure is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockUnicastManagerMetrics_Expecter) OnStreamCreationFailure(duration interface{}, attempts interface{}) *MockUnicastManagerMetrics_OnStreamCreationFailure_Call {
	return &MockUnicastManagerMetrics_OnStreamCreationFailure_Call{Call: _e.mock.On("OnStreamCreationFailure", duration, attempts)}
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationFailure_Call) Run(run func(duration time.Duration, attempts int)) *MockUnicastManagerMetrics_OnStreamCreationFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationFailure_Call) Return() *MockUnicastManagerMetrics_OnStreamCreationFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationFailure_Call) RunAndReturn(run func(time.Duration, int)) *MockUnicastManagerMetrics_OnStreamCreationFailure_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreationRetryBudgetResetToDefault provides a mock function with no fields
func (_m *MockUnicastManagerMetrics) OnStreamCreationRetryBudgetResetToDefault() {
	_m.Called()
}

// MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreationRetryBudgetResetToDefault'
type MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call struct {
	*mock.Call
}

// OnStreamCreationRetryBudgetResetToDefault is a helper method to define mock.On call
func (_e *MockUnicastManagerMetrics_Expecter) OnStreamCreationRetryBudgetResetToDefault() *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	return &MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call{Call: _e.mock.On("OnStreamCreationRetryBudgetResetToDefault")}
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call) Run(run func()) *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call) Return() *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call) RunAndReturn(run func()) *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreationRetryBudgetUpdated provides a mock function with given fields: budget
func (_m *MockUnicastManagerMetrics) OnStreamCreationRetryBudgetUpdated(budget uint64) {
	_m.Called(budget)
}

// MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreationRetryBudgetUpdated'
type MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call struct {
	*mock.Call
}

// OnStreamCreationRetryBudgetUpdated is a helper method to define mock.On call
//   - budget uint64
func (_e *MockUnicastManagerMetrics_Expecter) OnStreamCreationRetryBudgetUpdated(budget interface{}) *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	return &MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call{Call: _e.mock.On("OnStreamCreationRetryBudgetUpdated", budget)}
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call) Run(run func(budget uint64)) *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call) Return() *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call) RunAndReturn(run func(uint64)) *MockUnicastManagerMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	_c.Run(run)
	return _c
}

// OnStreamEstablished provides a mock function with given fields: duration, attempts
func (_m *MockUnicastManagerMetrics) OnStreamEstablished(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockUnicastManagerMetrics_OnStreamEstablished_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamEstablished'
type MockUnicastManagerMetrics_OnStreamEstablished_Call struct {
	*mock.Call
}

// OnStreamEstablished is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockUnicastManagerMetrics_Expecter) OnStreamEstablished(duration interface{}, attempts interface{}) *MockUnicastManagerMetrics_OnStreamEstablished_Call {
	return &MockUnicastManagerMetrics_OnStreamEstablished_Call{Call: _e.mock.On("OnStreamEstablished", duration, attempts)}
}

func (_c *MockUnicastManagerMetrics_OnStreamEstablished_Call) Run(run func(duration time.Duration, attempts int)) *MockUnicastManagerMetrics_OnStreamEstablished_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamEstablished_Call) Return() *MockUnicastManagerMetrics_OnStreamEstablished_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnicastManagerMetrics_OnStreamEstablished_Call) RunAndReturn(run func(time.Duration, int)) *MockUnicastManagerMetrics_OnStreamEstablished_Call {
	_c.Run(run)
	return _c
}

// NewMockUnicastManagerMetrics creates a new instance of MockUnicastManagerMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUnicastManagerMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUnicastManagerMetrics {
	mock := &MockUnicastManagerMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
