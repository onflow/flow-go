// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockSealingConfigsGetter is an autogenerated mock type for the SealingConfigsGetter type
type MockSealingConfigsGetter struct {
	mock.Mock
}

type MockSealingConfigsGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSealingConfigsGetter) EXPECT() *MockSealingConfigsGetter_Expecter {
	return &MockSealingConfigsGetter_Expecter{mock: &_m.Mock}
}

// ApprovalRequestsThresholdConst provides a mock function with no fields
func (_m *MockSealingConfigsGetter) ApprovalRequestsThresholdConst() uint64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ApprovalRequestsThresholdConst")
	}

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ApprovalRequestsThresholdConst'
type MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call struct {
	*mock.Call
}

// ApprovalRequestsThresholdConst is a helper method to define mock.On call
func (_e *MockSealingConfigsGetter_Expecter) ApprovalRequestsThresholdConst() *MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call {
	return &MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call{Call: _e.mock.On("ApprovalRequestsThresholdConst")}
}

func (_c *MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call) Run(run func()) *MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call) Return(_a0 uint64) *MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call) RunAndReturn(run func() uint64) *MockSealingConfigsGetter_ApprovalRequestsThresholdConst_Call {
	_c.Call.Return(run)
	return _c
}

// ChunkAlphaConst provides a mock function with no fields
func (_m *MockSealingConfigsGetter) ChunkAlphaConst() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ChunkAlphaConst")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// MockSealingConfigsGetter_ChunkAlphaConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ChunkAlphaConst'
type MockSealingConfigsGetter_ChunkAlphaConst_Call struct {
	*mock.Call
}

// ChunkAlphaConst is a helper method to define mock.On call
func (_e *MockSealingConfigsGetter_Expecter) ChunkAlphaConst() *MockSealingConfigsGetter_ChunkAlphaConst_Call {
	return &MockSealingConfigsGetter_ChunkAlphaConst_Call{Call: _e.mock.On("ChunkAlphaConst")}
}

func (_c *MockSealingConfigsGetter_ChunkAlphaConst_Call) Run(run func()) *MockSealingConfigsGetter_ChunkAlphaConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsGetter_ChunkAlphaConst_Call) Return(_a0 uint) *MockSealingConfigsGetter_ChunkAlphaConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsGetter_ChunkAlphaConst_Call) RunAndReturn(run func() uint) *MockSealingConfigsGetter_ChunkAlphaConst_Call {
	_c.Call.Return(run)
	return _c
}

// EmergencySealingActiveConst provides a mock function with no fields
func (_m *MockSealingConfigsGetter) EmergencySealingActiveConst() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for EmergencySealingActiveConst")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockSealingConfigsGetter_EmergencySealingActiveConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EmergencySealingActiveConst'
type MockSealingConfigsGetter_EmergencySealingActiveConst_Call struct {
	*mock.Call
}

// EmergencySealingActiveConst is a helper method to define mock.On call
func (_e *MockSealingConfigsGetter_Expecter) EmergencySealingActiveConst() *MockSealingConfigsGetter_EmergencySealingActiveConst_Call {
	return &MockSealingConfigsGetter_EmergencySealingActiveConst_Call{Call: _e.mock.On("EmergencySealingActiveConst")}
}

func (_c *MockSealingConfigsGetter_EmergencySealingActiveConst_Call) Run(run func()) *MockSealingConfigsGetter_EmergencySealingActiveConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsGetter_EmergencySealingActiveConst_Call) Return(_a0 bool) *MockSealingConfigsGetter_EmergencySealingActiveConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsGetter_EmergencySealingActiveConst_Call) RunAndReturn(run func() bool) *MockSealingConfigsGetter_EmergencySealingActiveConst_Call {
	_c.Call.Return(run)
	return _c
}

// RequireApprovalsForSealConstructionDynamicValue provides a mock function with no fields
func (_m *MockSealingConfigsGetter) RequireApprovalsForSealConstructionDynamicValue() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequireApprovalsForSealConstructionDynamicValue")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequireApprovalsForSealConstructionDynamicValue'
type MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call struct {
	*mock.Call
}

// RequireApprovalsForSealConstructionDynamicValue is a helper method to define mock.On call
func (_e *MockSealingConfigsGetter_Expecter) RequireApprovalsForSealConstructionDynamicValue() *MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	return &MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call{Call: _e.mock.On("RequireApprovalsForSealConstructionDynamicValue")}
}

func (_c *MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call) Run(run func()) *MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call) Return(_a0 uint) *MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call) RunAndReturn(run func() uint) *MockSealingConfigsGetter_RequireApprovalsForSealConstructionDynamicValue_Call {
	_c.Call.Return(run)
	return _c
}

// RequireApprovalsForSealVerificationConst provides a mock function with no fields
func (_m *MockSealingConfigsGetter) RequireApprovalsForSealVerificationConst() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequireApprovalsForSealVerificationConst")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequireApprovalsForSealVerificationConst'
type MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call struct {
	*mock.Call
}

// RequireApprovalsForSealVerificationConst is a helper method to define mock.On call
func (_e *MockSealingConfigsGetter_Expecter) RequireApprovalsForSealVerificationConst() *MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call {
	return &MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call{Call: _e.mock.On("RequireApprovalsForSealVerificationConst")}
}

func (_c *MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call) Run(run func()) *MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call) Return(_a0 uint) *MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call) RunAndReturn(run func() uint) *MockSealingConfigsGetter_RequireApprovalsForSealVerificationConst_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSealingConfigsGetter creates a new instance of MockSealingConfigsGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSealingConfigsGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSealingConfigsGetter {
	mock := &MockSealingConfigsGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
