// Code generated by mockery v2.12.1. DO NOT EDIT.

package mock

import (
	module "github.com/onflow/flow-go/module"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MempoolMetrics is an autogenerated mock type for the MempoolMetrics type
type MempoolMetrics struct {
	mock.Mock
}

// MempoolEntries provides a mock function with given fields: resource, entries
func (_m *MempoolMetrics) MempoolEntries(resource string, entries uint) {
	_m.Called(resource, entries)
}

// Register provides a mock function with given fields: resource, entriesFunc
func (_m *MempoolMetrics) Register(resource string, entriesFunc module.EntriesFunc) error {
	ret := _m.Called(resource, entriesFunc)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, module.EntriesFunc) error); ok {
		r0 = rf(resource, entriesFunc)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMempoolMetrics creates a new instance of MempoolMetrics. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMempoolMetrics(t testing.TB) *MempoolMetrics {
	mock := &MempoolMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
