// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// IdentifierProvider is an autogenerated mock type for the IdentifierProvider type
type IdentifierProvider struct {
	mock.Mock
}

// Identifiers provides a mock function with given fields:
func (_m *IdentifierProvider) Identifiers() flow.IdentifierList {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Identifiers")
	}

	var r0 flow.IdentifierList
	if rf, ok := ret.Get(0).(func() flow.IdentifierList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.IdentifierList)
		}
	}

	return r0
}

// NewIdentifierProvider creates a new instance of IdentifierProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIdentifierProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *IdentifierProvider {
	mock := &IdentifierProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
