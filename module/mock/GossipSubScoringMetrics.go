// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	channels "github.com/onflow/flow-go/network/channels"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockGossipSubScoringMetrics is an autogenerated mock type for the GossipSubScoringMetrics type
type MockGossipSubScoringMetrics struct {
	mock.Mock
}

type MockGossipSubScoringMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockGossipSubScoringMetrics) EXPECT() *MockGossipSubScoringMetrics_Expecter {
	return &MockGossipSubScoringMetrics_Expecter{mock: &_m.Mock}
}

// OnAppSpecificScoreUpdated provides a mock function with given fields: _a0
func (_m *MockGossipSubScoringMetrics) OnAppSpecificScoreUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnAppSpecificScoreUpdated'
type MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call struct {
	*mock.Call
}

// OnAppSpecificScoreUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockGossipSubScoringMetrics_Expecter) OnAppSpecificScoreUpdated(_a0 interface{}) *MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call {
	return &MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call{Call: _e.mock.On("OnAppSpecificScoreUpdated", _a0)}
}

func (_c *MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call) Run(run func(_a0 float64)) *MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call) Return() *MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call) RunAndReturn(run func(float64)) *MockGossipSubScoringMetrics_OnAppSpecificScoreUpdated_Call {
	_c.Run(run)
	return _c
}

// OnBehaviourPenaltyUpdated provides a mock function with given fields: _a0
func (_m *MockGossipSubScoringMetrics) OnBehaviourPenaltyUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnBehaviourPenaltyUpdated'
type MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call struct {
	*mock.Call
}

// OnBehaviourPenaltyUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockGossipSubScoringMetrics_Expecter) OnBehaviourPenaltyUpdated(_a0 interface{}) *MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call {
	return &MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call{Call: _e.mock.On("OnBehaviourPenaltyUpdated", _a0)}
}

func (_c *MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call) Run(run func(_a0 float64)) *MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call) Return() *MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call) RunAndReturn(run func(float64)) *MockGossipSubScoringMetrics_OnBehaviourPenaltyUpdated_Call {
	_c.Run(run)
	return _c
}

// OnFirstMessageDeliveredUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockGossipSubScoringMetrics) OnFirstMessageDeliveredUpdated(_a0 channels.Topic, _a1 float64) {
	_m.Called(_a0, _a1)
}

// MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnFirstMessageDeliveredUpdated'
type MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call struct {
	*mock.Call
}

// OnFirstMessageDeliveredUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 float64
func (_e *MockGossipSubScoringMetrics_Expecter) OnFirstMessageDeliveredUpdated(_a0 interface{}, _a1 interface{}) *MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call {
	return &MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call{Call: _e.mock.On("OnFirstMessageDeliveredUpdated", _a0, _a1)}
}

func (_c *MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call) Run(run func(_a0 channels.Topic, _a1 float64)) *MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call) Return() *MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call) RunAndReturn(run func(channels.Topic, float64)) *MockGossipSubScoringMetrics_OnFirstMessageDeliveredUpdated_Call {
	_c.Run(run)
	return _c
}

// OnIPColocationFactorUpdated provides a mock function with given fields: _a0
func (_m *MockGossipSubScoringMetrics) OnIPColocationFactorUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIPColocationFactorUpdated'
type MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call struct {
	*mock.Call
}

// OnIPColocationFactorUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockGossipSubScoringMetrics_Expecter) OnIPColocationFactorUpdated(_a0 interface{}) *MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call {
	return &MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call{Call: _e.mock.On("OnIPColocationFactorUpdated", _a0)}
}

func (_c *MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call) Run(run func(_a0 float64)) *MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call) Return() *MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call) RunAndReturn(run func(float64)) *MockGossipSubScoringMetrics_OnIPColocationFactorUpdated_Call {
	_c.Run(run)
	return _c
}

// OnInvalidMessageDeliveredUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockGossipSubScoringMetrics) OnInvalidMessageDeliveredUpdated(_a0 channels.Topic, _a1 float64) {
	_m.Called(_a0, _a1)
}

// MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnInvalidMessageDeliveredUpdated'
type MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call struct {
	*mock.Call
}

// OnInvalidMessageDeliveredUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 float64
func (_e *MockGossipSubScoringMetrics_Expecter) OnInvalidMessageDeliveredUpdated(_a0 interface{}, _a1 interface{}) *MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call {
	return &MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call{Call: _e.mock.On("OnInvalidMessageDeliveredUpdated", _a0, _a1)}
}

func (_c *MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call) Run(run func(_a0 channels.Topic, _a1 float64)) *MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call) Return() *MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call) RunAndReturn(run func(channels.Topic, float64)) *MockGossipSubScoringMetrics_OnInvalidMessageDeliveredUpdated_Call {
	_c.Run(run)
	return _c
}

// OnMeshMessageDeliveredUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockGossipSubScoringMetrics) OnMeshMessageDeliveredUpdated(_a0 channels.Topic, _a1 float64) {
	_m.Called(_a0, _a1)
}

// MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMeshMessageDeliveredUpdated'
type MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call struct {
	*mock.Call
}

// OnMeshMessageDeliveredUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 float64
func (_e *MockGossipSubScoringMetrics_Expecter) OnMeshMessageDeliveredUpdated(_a0 interface{}, _a1 interface{}) *MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call {
	return &MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call{Call: _e.mock.On("OnMeshMessageDeliveredUpdated", _a0, _a1)}
}

func (_c *MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call) Run(run func(_a0 channels.Topic, _a1 float64)) *MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call) Return() *MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call) RunAndReturn(run func(channels.Topic, float64)) *MockGossipSubScoringMetrics_OnMeshMessageDeliveredUpdated_Call {
	_c.Run(run)
	return _c
}

// OnOverallPeerScoreUpdated provides a mock function with given fields: _a0
func (_m *MockGossipSubScoringMetrics) OnOverallPeerScoreUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnOverallPeerScoreUpdated'
type MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call struct {
	*mock.Call
}

// OnOverallPeerScoreUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockGossipSubScoringMetrics_Expecter) OnOverallPeerScoreUpdated(_a0 interface{}) *MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call {
	return &MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call{Call: _e.mock.On("OnOverallPeerScoreUpdated", _a0)}
}

func (_c *MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call) Run(run func(_a0 float64)) *MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call) Return() *MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call) RunAndReturn(run func(float64)) *MockGossipSubScoringMetrics_OnOverallPeerScoreUpdated_Call {
	_c.Run(run)
	return _c
}

// OnTimeInMeshUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockGossipSubScoringMetrics) OnTimeInMeshUpdated(_a0 channels.Topic, _a1 time.Duration) {
	_m.Called(_a0, _a1)
}

// MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnTimeInMeshUpdated'
type MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call struct {
	*mock.Call
}

// OnTimeInMeshUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 time.Duration
func (_e *MockGossipSubScoringMetrics_Expecter) OnTimeInMeshUpdated(_a0 interface{}, _a1 interface{}) *MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call {
	return &MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call{Call: _e.mock.On("OnTimeInMeshUpdated", _a0, _a1)}
}

func (_c *MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call) Run(run func(_a0 channels.Topic, _a1 time.Duration)) *MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(time.Duration))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call) Return() *MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call) RunAndReturn(run func(channels.Topic, time.Duration)) *MockGossipSubScoringMetrics_OnTimeInMeshUpdated_Call {
	_c.Run(run)
	return _c
}

// SetWarningStateCount provides a mock function with given fields: _a0
func (_m *MockGossipSubScoringMetrics) SetWarningStateCount(_a0 uint) {
	_m.Called(_a0)
}

// MockGossipSubScoringMetrics_SetWarningStateCount_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetWarningStateCount'
type MockGossipSubScoringMetrics_SetWarningStateCount_Call struct {
	*mock.Call
}

// SetWarningStateCount is a helper method to define mock.On call
//   - _a0 uint
func (_e *MockGossipSubScoringMetrics_Expecter) SetWarningStateCount(_a0 interface{}) *MockGossipSubScoringMetrics_SetWarningStateCount_Call {
	return &MockGossipSubScoringMetrics_SetWarningStateCount_Call{Call: _e.mock.On("SetWarningStateCount", _a0)}
}

func (_c *MockGossipSubScoringMetrics_SetWarningStateCount_Call) Run(run func(_a0 uint)) *MockGossipSubScoringMetrics_SetWarningStateCount_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint))
	})
	return _c
}

func (_c *MockGossipSubScoringMetrics_SetWarningStateCount_Call) Return() *MockGossipSubScoringMetrics_SetWarningStateCount_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringMetrics_SetWarningStateCount_Call) RunAndReturn(run func(uint)) *MockGossipSubScoringMetrics_SetWarningStateCount_Call {
	_c.Run(run)
	return _c
}

// NewMockGossipSubScoringMetrics creates a new instance of MockGossipSubScoringMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGossipSubScoringMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGossipSubScoringMetrics {
	mock := &MockGossipSubScoringMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
