// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// EngineMetrics is an autogenerated mock type for the EngineMetrics type
type EngineMetrics struct {
	mock.Mock
}

// InboundMessageDropped provides a mock function with given fields: engine, messages
func (_m *EngineMetrics) InboundMessageDropped(engine string, messages string) {
	_m.Called(engine, messages)
}

// MessageHandled provides a mock function with given fields: engine, messages
func (_m *EngineMetrics) MessageHandled(engine string, messages string) {
	_m.Called(engine, messages)
}

// MessageReceived provides a mock function with given fields: engine, message
func (_m *EngineMetrics) MessageReceived(engine string, message string) {
	_m.Called(engine, message)
}

// MessageSent provides a mock function with given fields: engine, message
func (_m *EngineMetrics) MessageSent(engine string, message string) {
	_m.Called(engine, message)
}

// OutboundMessageDropped provides a mock function with given fields: engine, messages
func (_m *EngineMetrics) OutboundMessageDropped(engine string, messages string) {
	_m.Called(engine, messages)
}

// NewEngineMetrics creates a new instance of EngineMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEngineMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *EngineMetrics {
	mock := &EngineMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
