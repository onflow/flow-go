// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// Finalizer is an autogenerated mock type for the Finalizer type
type Finalizer struct {
	mock.Mock
}

// MakeFinal provides a mock function with given fields: blockID
func (_m *Finalizer) MakeFinal(blockID flow.Identifier) error {
	ret := _m.Called(blockID)

	if len(ret) == 0 {
		panic("no return value specified for MakeFinal")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(flow.Identifier) error); ok {
		r0 = rf(blockID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewFinalizer creates a new instance of Finalizer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFinalizer(t interface {
	mock.TestingT
	Cleanup(func())
}) *Finalizer {
	mock := &Finalizer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
