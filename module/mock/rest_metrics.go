// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	context "context"

	metrics "github.com/slok/go-http-metrics/metrics"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// RestMetrics is an autogenerated mock type for the RestMetrics type
type RestMetrics struct {
	mock.Mock
}

// AddInflightRequests provides a mock function with given fields: ctx, props, quantity
func (_m *RestMetrics) AddInflightRequests(ctx context.Context, props metrics.HTTPProperties, quantity int) {
	_m.Called(ctx, props, quantity)
}

// AddTotalRequests provides a mock function with given fields: ctx, method, routeName
func (_m *RestMetrics) AddTotalRequests(ctx context.Context, method string, routeName string) {
	_m.Called(ctx, method, routeName)
}

// ObserveHTTPRequestDuration provides a mock function with given fields: ctx, props, duration
func (_m *RestMetrics) ObserveHTTPRequestDuration(ctx context.Context, props metrics.HTTPReqProperties, duration time.Duration) {
	_m.Called(ctx, props, duration)
}

// ObserveHTTPResponseSize provides a mock function with given fields: ctx, props, sizeBytes
func (_m *RestMetrics) ObserveHTTPResponseSize(ctx context.Context, props metrics.HTTPReqProperties, sizeBytes int64) {
	_m.Called(ctx, props, sizeBytes)
}

// NewRestMetrics creates a new instance of RestMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRestMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *RestMetrics {
	mock := &RestMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
