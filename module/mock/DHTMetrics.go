// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockDHTMetrics is an autogenerated mock type for the DHTMetrics type
type MockDHTMetrics struct {
	mock.Mock
}

type MockDHTMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDHTMetrics) EXPECT() *MockDHTMetrics_Expecter {
	return &MockDHTMetrics_Expecter{mock: &_m.Mock}
}

// RoutingTablePeerAdded provides a mock function with no fields
func (_m *MockDHTMetrics) RoutingTablePeerAdded() {
	_m.Called()
}

// MockDHTMetrics_RoutingTablePeerAdded_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RoutingTablePeerAdded'
type MockDHTMetrics_RoutingTablePeerAdded_Call struct {
	*mock.Call
}

// RoutingTablePeerAdded is a helper method to define mock.On call
func (_e *MockDHTMetrics_Expecter) RoutingTablePeerAdded() *MockDHTMetrics_RoutingTablePeerAdded_Call {
	return &MockDHTMetrics_RoutingTablePeerAdded_Call{Call: _e.mock.On("RoutingTablePeerAdded")}
}

func (_c *MockDHTMetrics_RoutingTablePeerAdded_Call) Run(run func()) *MockDHTMetrics_RoutingTablePeerAdded_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDHTMetrics_RoutingTablePeerAdded_Call) Return() *MockDHTMetrics_RoutingTablePeerAdded_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDHTMetrics_RoutingTablePeerAdded_Call) RunAndReturn(run func()) *MockDHTMetrics_RoutingTablePeerAdded_Call {
	_c.Run(run)
	return _c
}

// RoutingTablePeerRemoved provides a mock function with no fields
func (_m *MockDHTMetrics) RoutingTablePeerRemoved() {
	_m.Called()
}

// MockDHTMetrics_RoutingTablePeerRemoved_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RoutingTablePeerRemoved'
type MockDHTMetrics_RoutingTablePeerRemoved_Call struct {
	*mock.Call
}

// RoutingTablePeerRemoved is a helper method to define mock.On call
func (_e *MockDHTMetrics_Expecter) RoutingTablePeerRemoved() *MockDHTMetrics_RoutingTablePeerRemoved_Call {
	return &MockDHTMetrics_RoutingTablePeerRemoved_Call{Call: _e.mock.On("RoutingTablePeerRemoved")}
}

func (_c *MockDHTMetrics_RoutingTablePeerRemoved_Call) Run(run func()) *MockDHTMetrics_RoutingTablePeerRemoved_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDHTMetrics_RoutingTablePeerRemoved_Call) Return() *MockDHTMetrics_RoutingTablePeerRemoved_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDHTMetrics_RoutingTablePeerRemoved_Call) RunAndReturn(run func()) *MockDHTMetrics_RoutingTablePeerRemoved_Call {
	_c.Run(run)
	return _c
}

// NewMockDHTMetrics creates a new instance of MockDHTMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDHTMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDHTMetrics {
	mock := &MockDHTMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
