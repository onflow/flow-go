// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockEntriesFunc is an autogenerated mock type for the EntriesFunc type
type MockEntriesFunc struct {
	mock.Mock
}

type MockEntriesFunc_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEntriesFunc) EXPECT() *MockEntriesFunc_Expecter {
	return &MockEntriesFunc_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with no fields
func (_m *MockEntriesFunc) Execute() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// MockEntriesFunc_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockEntriesFunc_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
func (_e *MockEntriesFunc_Expecter) Execute() *MockEntriesFunc_Execute_Call {
	return &MockEntriesFunc_Execute_Call{Call: _e.mock.On("Execute")}
}

func (_c *MockEntriesFunc_Execute_Call) Run(run func()) *MockEntriesFunc_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEntriesFunc_Execute_Call) Return(_a0 uint) *MockEntriesFunc_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockEntriesFunc_Execute_Call) RunAndReturn(run func() uint) *MockEntriesFunc_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockEntriesFunc creates a new instance of MockEntriesFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEntriesFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEntriesFunc {
	mock := &MockEntriesFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
