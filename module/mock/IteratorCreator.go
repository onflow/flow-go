// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	module "github.com/onflow/flow-go/module"
	mock "github.com/stretchr/testify/mock"
)

// MockIteratorCreator is an autogenerated mock type for the IteratorCreator type
type MockIteratorCreator struct {
	mock.Mock
}

type MockIteratorCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIteratorCreator) EXPECT() *MockIteratorCreator_Expecter {
	return &MockIteratorCreator_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with no fields
func (_m *MockIteratorCreator) Create() (module.BlockIterator, bool, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 module.BlockIterator
	var r1 bool
	var r2 error
	if rf, ok := ret.Get(0).(func() (module.BlockIterator, bool, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() module.BlockIterator); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(module.BlockIterator)
		}
	}

	if rf, ok := ret.Get(1).(func() bool); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(bool)
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockIteratorCreator_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockIteratorCreator_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
func (_e *MockIteratorCreator_Expecter) Create() *MockIteratorCreator_Create_Call {
	return &MockIteratorCreator_Create_Call{Call: _e.mock.On("Create")}
}

func (_c *MockIteratorCreator_Create_Call) Run(run func()) *MockIteratorCreator_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIteratorCreator_Create_Call) Return(fromSavedIndexToLatest module.BlockIterator, hasNext bool, exception error) *MockIteratorCreator_Create_Call {
	_c.Call.Return(fromSavedIndexToLatest, hasNext, exception)
	return _c
}

func (_c *MockIteratorCreator_Create_Call) RunAndReturn(run func() (module.BlockIterator, bool, error)) *MockIteratorCreator_Create_Call {
	_c.Call.Return(run)
	return _c
}

// IteratorState provides a mock function with no fields
func (_m *MockIteratorCreator) IteratorState() module.IteratorStateReader {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IteratorState")
	}

	var r0 module.IteratorStateReader
	if rf, ok := ret.Get(0).(func() module.IteratorStateReader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(module.IteratorStateReader)
		}
	}

	return r0
}

// MockIteratorCreator_IteratorState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IteratorState'
type MockIteratorCreator_IteratorState_Call struct {
	*mock.Call
}

// IteratorState is a helper method to define mock.On call
func (_e *MockIteratorCreator_Expecter) IteratorState() *MockIteratorCreator_IteratorState_Call {
	return &MockIteratorCreator_IteratorState_Call{Call: _e.mock.On("IteratorState")}
}

func (_c *MockIteratorCreator_IteratorState_Call) Run(run func()) *MockIteratorCreator_IteratorState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIteratorCreator_IteratorState_Call) Return(_a0 module.IteratorStateReader) *MockIteratorCreator_IteratorState_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIteratorCreator_IteratorState_Call) RunAndReturn(run func() module.IteratorStateReader) *MockIteratorCreator_IteratorState_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIteratorCreator creates a new instance of MockIteratorCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIteratorCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIteratorCreator {
	mock := &MockIteratorCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
