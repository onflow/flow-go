// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockCruiseCtlMetrics is an autogenerated mock type for the CruiseCtlMetrics type
type MockCruiseCtlMetrics struct {
	mock.Mock
}

type MockCruiseCtlMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCruiseCtlMetrics) EXPECT() *MockCruiseCtlMetrics_Expecter {
	return &MockCruiseCtlMetrics_Expecter{mock: &_m.Mock}
}

// ControllerOutput provides a mock function with given fields: duration
func (_m *MockCruiseCtlMetrics) ControllerOutput(duration time.Duration) {
	_m.Called(duration)
}

// MockCruiseCtlMetrics_ControllerOutput_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ControllerOutput'
type MockCruiseCtlMetrics_ControllerOutput_Call struct {
	*mock.Call
}

// ControllerOutput is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockCruiseCtlMetrics_Expecter) ControllerOutput(duration interface{}) *MockCruiseCtlMetrics_ControllerOutput_Call {
	return &MockCruiseCtlMetrics_ControllerOutput_Call{Call: _e.mock.On("ControllerOutput", duration)}
}

func (_c *MockCruiseCtlMetrics_ControllerOutput_Call) Run(run func(duration time.Duration)) *MockCruiseCtlMetrics_ControllerOutput_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockCruiseCtlMetrics_ControllerOutput_Call) Return() *MockCruiseCtlMetrics_ControllerOutput_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCruiseCtlMetrics_ControllerOutput_Call) RunAndReturn(run func(time.Duration)) *MockCruiseCtlMetrics_ControllerOutput_Call {
	_c.Run(run)
	return _c
}

// PIDError provides a mock function with given fields: p, i, d
func (_m *MockCruiseCtlMetrics) PIDError(p float64, i float64, d float64) {
	_m.Called(p, i, d)
}

// MockCruiseCtlMetrics_PIDError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PIDError'
type MockCruiseCtlMetrics_PIDError_Call struct {
	*mock.Call
}

// PIDError is a helper method to define mock.On call
//   - p float64
//   - i float64
//   - d float64
func (_e *MockCruiseCtlMetrics_Expecter) PIDError(p interface{}, i interface{}, d interface{}) *MockCruiseCtlMetrics_PIDError_Call {
	return &MockCruiseCtlMetrics_PIDError_Call{Call: _e.mock.On("PIDError", p, i, d)}
}

func (_c *MockCruiseCtlMetrics_PIDError_Call) Run(run func(p float64, i float64, d float64)) *MockCruiseCtlMetrics_PIDError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64), args[1].(float64), args[2].(float64))
	})
	return _c
}

func (_c *MockCruiseCtlMetrics_PIDError_Call) Return() *MockCruiseCtlMetrics_PIDError_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCruiseCtlMetrics_PIDError_Call) RunAndReturn(run func(float64, float64, float64)) *MockCruiseCtlMetrics_PIDError_Call {
	_c.Run(run)
	return _c
}

// ProposalPublicationDelay provides a mock function with given fields: duration
func (_m *MockCruiseCtlMetrics) ProposalPublicationDelay(duration time.Duration) {
	_m.Called(duration)
}

// MockCruiseCtlMetrics_ProposalPublicationDelay_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProposalPublicationDelay'
type MockCruiseCtlMetrics_ProposalPublicationDelay_Call struct {
	*mock.Call
}

// ProposalPublicationDelay is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockCruiseCtlMetrics_Expecter) ProposalPublicationDelay(duration interface{}) *MockCruiseCtlMetrics_ProposalPublicationDelay_Call {
	return &MockCruiseCtlMetrics_ProposalPublicationDelay_Call{Call: _e.mock.On("ProposalPublicationDelay", duration)}
}

func (_c *MockCruiseCtlMetrics_ProposalPublicationDelay_Call) Run(run func(duration time.Duration)) *MockCruiseCtlMetrics_ProposalPublicationDelay_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockCruiseCtlMetrics_ProposalPublicationDelay_Call) Return() *MockCruiseCtlMetrics_ProposalPublicationDelay_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCruiseCtlMetrics_ProposalPublicationDelay_Call) RunAndReturn(run func(time.Duration)) *MockCruiseCtlMetrics_ProposalPublicationDelay_Call {
	_c.Run(run)
	return _c
}

// TargetProposalDuration provides a mock function with given fields: duration
func (_m *MockCruiseCtlMetrics) TargetProposalDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockCruiseCtlMetrics_TargetProposalDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TargetProposalDuration'
type MockCruiseCtlMetrics_TargetProposalDuration_Call struct {
	*mock.Call
}

// TargetProposalDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockCruiseCtlMetrics_Expecter) TargetProposalDuration(duration interface{}) *MockCruiseCtlMetrics_TargetProposalDuration_Call {
	return &MockCruiseCtlMetrics_TargetProposalDuration_Call{Call: _e.mock.On("TargetProposalDuration", duration)}
}

func (_c *MockCruiseCtlMetrics_TargetProposalDuration_Call) Run(run func(duration time.Duration)) *MockCruiseCtlMetrics_TargetProposalDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockCruiseCtlMetrics_TargetProposalDuration_Call) Return() *MockCruiseCtlMetrics_TargetProposalDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCruiseCtlMetrics_TargetProposalDuration_Call) RunAndReturn(run func(time.Duration)) *MockCruiseCtlMetrics_TargetProposalDuration_Call {
	_c.Run(run)
	return _c
}

// NewMockCruiseCtlMetrics creates a new instance of MockCruiseCtlMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCruiseCtlMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCruiseCtlMetrics {
	mock := &MockCruiseCtlMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
