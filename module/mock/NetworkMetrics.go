// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	channels "github.com/onflow/flow-go/network/channels"
	mock "github.com/stretchr/testify/mock"

	network "github.com/libp2p/go-libp2p/core/network"

	p2pmsg "github.com/onflow/flow-go/network/p2p/message"

	peer "github.com/libp2p/go-libp2p/core/peer"

	protocol "github.com/libp2p/go-libp2p/core/protocol"

	time "time"
)

// MockNetworkMetrics is an autogenerated mock type for the NetworkMetrics type
type MockNetworkMetrics struct {
	mock.Mock
}

type MockNetworkMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockNetworkMetrics) EXPECT() *MockNetworkMetrics_Expecter {
	return &MockNetworkMetrics_Expecter{mock: &_m.Mock}
}

// AllowConn provides a mock function with given fields: dir, usefd
func (_m *MockNetworkMetrics) AllowConn(dir network.Direction, usefd bool) {
	_m.Called(dir, usefd)
}

// MockNetworkMetrics_AllowConn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AllowConn'
type MockNetworkMetrics_AllowConn_Call struct {
	*mock.Call
}

// AllowConn is a helper method to define mock.On call
//   - dir network.Direction
//   - usefd bool
func (_e *MockNetworkMetrics_Expecter) AllowConn(dir interface{}, usefd interface{}) *MockNetworkMetrics_AllowConn_Call {
	return &MockNetworkMetrics_AllowConn_Call{Call: _e.mock.On("AllowConn", dir, usefd)}
}

func (_c *MockNetworkMetrics_AllowConn_Call) Run(run func(dir network.Direction, usefd bool)) *MockNetworkMetrics_AllowConn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(network.Direction), args[1].(bool))
	})
	return _c
}

func (_c *MockNetworkMetrics_AllowConn_Call) Return() *MockNetworkMetrics_AllowConn_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AllowConn_Call) RunAndReturn(run func(network.Direction, bool)) *MockNetworkMetrics_AllowConn_Call {
	_c.Run(run)
	return _c
}

// AllowMemory provides a mock function with given fields: size
func (_m *MockNetworkMetrics) AllowMemory(size int) {
	_m.Called(size)
}

// MockNetworkMetrics_AllowMemory_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AllowMemory'
type MockNetworkMetrics_AllowMemory_Call struct {
	*mock.Call
}

// AllowMemory is a helper method to define mock.On call
//   - size int
func (_e *MockNetworkMetrics_Expecter) AllowMemory(size interface{}) *MockNetworkMetrics_AllowMemory_Call {
	return &MockNetworkMetrics_AllowMemory_Call{Call: _e.mock.On("AllowMemory", size)}
}

func (_c *MockNetworkMetrics_AllowMemory_Call) Run(run func(size int)) *MockNetworkMetrics_AllowMemory_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_AllowMemory_Call) Return() *MockNetworkMetrics_AllowMemory_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AllowMemory_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_AllowMemory_Call {
	_c.Run(run)
	return _c
}

// AllowPeer provides a mock function with given fields: p
func (_m *MockNetworkMetrics) AllowPeer(p peer.ID) {
	_m.Called(p)
}

// MockNetworkMetrics_AllowPeer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AllowPeer'
type MockNetworkMetrics_AllowPeer_Call struct {
	*mock.Call
}

// AllowPeer is a helper method to define mock.On call
//   - p peer.ID
func (_e *MockNetworkMetrics_Expecter) AllowPeer(p interface{}) *MockNetworkMetrics_AllowPeer_Call {
	return &MockNetworkMetrics_AllowPeer_Call{Call: _e.mock.On("AllowPeer", p)}
}

func (_c *MockNetworkMetrics_AllowPeer_Call) Run(run func(p peer.ID)) *MockNetworkMetrics_AllowPeer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(peer.ID))
	})
	return _c
}

func (_c *MockNetworkMetrics_AllowPeer_Call) Return() *MockNetworkMetrics_AllowPeer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AllowPeer_Call) RunAndReturn(run func(peer.ID)) *MockNetworkMetrics_AllowPeer_Call {
	_c.Run(run)
	return _c
}

// AllowProtocol provides a mock function with given fields: proto
func (_m *MockNetworkMetrics) AllowProtocol(proto protocol.ID) {
	_m.Called(proto)
}

// MockNetworkMetrics_AllowProtocol_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AllowProtocol'
type MockNetworkMetrics_AllowProtocol_Call struct {
	*mock.Call
}

// AllowProtocol is a helper method to define mock.On call
//   - proto protocol.ID
func (_e *MockNetworkMetrics_Expecter) AllowProtocol(proto interface{}) *MockNetworkMetrics_AllowProtocol_Call {
	return &MockNetworkMetrics_AllowProtocol_Call{Call: _e.mock.On("AllowProtocol", proto)}
}

func (_c *MockNetworkMetrics_AllowProtocol_Call) Run(run func(proto protocol.ID)) *MockNetworkMetrics_AllowProtocol_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(protocol.ID))
	})
	return _c
}

func (_c *MockNetworkMetrics_AllowProtocol_Call) Return() *MockNetworkMetrics_AllowProtocol_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AllowProtocol_Call) RunAndReturn(run func(protocol.ID)) *MockNetworkMetrics_AllowProtocol_Call {
	_c.Run(run)
	return _c
}

// AllowService provides a mock function with given fields: svc
func (_m *MockNetworkMetrics) AllowService(svc string) {
	_m.Called(svc)
}

// MockNetworkMetrics_AllowService_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AllowService'
type MockNetworkMetrics_AllowService_Call struct {
	*mock.Call
}

// AllowService is a helper method to define mock.On call
//   - svc string
func (_e *MockNetworkMetrics_Expecter) AllowService(svc interface{}) *MockNetworkMetrics_AllowService_Call {
	return &MockNetworkMetrics_AllowService_Call{Call: _e.mock.On("AllowService", svc)}
}

func (_c *MockNetworkMetrics_AllowService_Call) Run(run func(svc string)) *MockNetworkMetrics_AllowService_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_AllowService_Call) Return() *MockNetworkMetrics_AllowService_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AllowService_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_AllowService_Call {
	_c.Run(run)
	return _c
}

// AllowStream provides a mock function with given fields: p, dir
func (_m *MockNetworkMetrics) AllowStream(p peer.ID, dir network.Direction) {
	_m.Called(p, dir)
}

// MockNetworkMetrics_AllowStream_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AllowStream'
type MockNetworkMetrics_AllowStream_Call struct {
	*mock.Call
}

// AllowStream is a helper method to define mock.On call
//   - p peer.ID
//   - dir network.Direction
func (_e *MockNetworkMetrics_Expecter) AllowStream(p interface{}, dir interface{}) *MockNetworkMetrics_AllowStream_Call {
	return &MockNetworkMetrics_AllowStream_Call{Call: _e.mock.On("AllowStream", p, dir)}
}

func (_c *MockNetworkMetrics_AllowStream_Call) Run(run func(p peer.ID, dir network.Direction)) *MockNetworkMetrics_AllowStream_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(peer.ID), args[1].(network.Direction))
	})
	return _c
}

func (_c *MockNetworkMetrics_AllowStream_Call) Return() *MockNetworkMetrics_AllowStream_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AllowStream_Call) RunAndReturn(run func(peer.ID, network.Direction)) *MockNetworkMetrics_AllowStream_Call {
	_c.Run(run)
	return _c
}

// AsyncProcessingFinished provides a mock function with given fields: duration
func (_m *MockNetworkMetrics) AsyncProcessingFinished(duration time.Duration) {
	_m.Called(duration)
}

// MockNetworkMetrics_AsyncProcessingFinished_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AsyncProcessingFinished'
type MockNetworkMetrics_AsyncProcessingFinished_Call struct {
	*mock.Call
}

// AsyncProcessingFinished is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockNetworkMetrics_Expecter) AsyncProcessingFinished(duration interface{}) *MockNetworkMetrics_AsyncProcessingFinished_Call {
	return &MockNetworkMetrics_AsyncProcessingFinished_Call{Call: _e.mock.On("AsyncProcessingFinished", duration)}
}

func (_c *MockNetworkMetrics_AsyncProcessingFinished_Call) Run(run func(duration time.Duration)) *MockNetworkMetrics_AsyncProcessingFinished_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockNetworkMetrics_AsyncProcessingFinished_Call) Return() *MockNetworkMetrics_AsyncProcessingFinished_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AsyncProcessingFinished_Call) RunAndReturn(run func(time.Duration)) *MockNetworkMetrics_AsyncProcessingFinished_Call {
	_c.Run(run)
	return _c
}

// AsyncProcessingStarted provides a mock function with no fields
func (_m *MockNetworkMetrics) AsyncProcessingStarted() {
	_m.Called()
}

// MockNetworkMetrics_AsyncProcessingStarted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AsyncProcessingStarted'
type MockNetworkMetrics_AsyncProcessingStarted_Call struct {
	*mock.Call
}

// AsyncProcessingStarted is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) AsyncProcessingStarted() *MockNetworkMetrics_AsyncProcessingStarted_Call {
	return &MockNetworkMetrics_AsyncProcessingStarted_Call{Call: _e.mock.On("AsyncProcessingStarted")}
}

func (_c *MockNetworkMetrics_AsyncProcessingStarted_Call) Run(run func()) *MockNetworkMetrics_AsyncProcessingStarted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_AsyncProcessingStarted_Call) Return() *MockNetworkMetrics_AsyncProcessingStarted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_AsyncProcessingStarted_Call) RunAndReturn(run func()) *MockNetworkMetrics_AsyncProcessingStarted_Call {
	_c.Run(run)
	return _c
}

// BlockConn provides a mock function with given fields: dir, usefd
func (_m *MockNetworkMetrics) BlockConn(dir network.Direction, usefd bool) {
	_m.Called(dir, usefd)
}

// MockNetworkMetrics_BlockConn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockConn'
type MockNetworkMetrics_BlockConn_Call struct {
	*mock.Call
}

// BlockConn is a helper method to define mock.On call
//   - dir network.Direction
//   - usefd bool
func (_e *MockNetworkMetrics_Expecter) BlockConn(dir interface{}, usefd interface{}) *MockNetworkMetrics_BlockConn_Call {
	return &MockNetworkMetrics_BlockConn_Call{Call: _e.mock.On("BlockConn", dir, usefd)}
}

func (_c *MockNetworkMetrics_BlockConn_Call) Run(run func(dir network.Direction, usefd bool)) *MockNetworkMetrics_BlockConn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(network.Direction), args[1].(bool))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockConn_Call) Return() *MockNetworkMetrics_BlockConn_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockConn_Call) RunAndReturn(run func(network.Direction, bool)) *MockNetworkMetrics_BlockConn_Call {
	_c.Run(run)
	return _c
}

// BlockMemory provides a mock function with given fields: size
func (_m *MockNetworkMetrics) BlockMemory(size int) {
	_m.Called(size)
}

// MockNetworkMetrics_BlockMemory_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockMemory'
type MockNetworkMetrics_BlockMemory_Call struct {
	*mock.Call
}

// BlockMemory is a helper method to define mock.On call
//   - size int
func (_e *MockNetworkMetrics_Expecter) BlockMemory(size interface{}) *MockNetworkMetrics_BlockMemory_Call {
	return &MockNetworkMetrics_BlockMemory_Call{Call: _e.mock.On("BlockMemory", size)}
}

func (_c *MockNetworkMetrics_BlockMemory_Call) Run(run func(size int)) *MockNetworkMetrics_BlockMemory_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockMemory_Call) Return() *MockNetworkMetrics_BlockMemory_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockMemory_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_BlockMemory_Call {
	_c.Run(run)
	return _c
}

// BlockPeer provides a mock function with given fields: p
func (_m *MockNetworkMetrics) BlockPeer(p peer.ID) {
	_m.Called(p)
}

// MockNetworkMetrics_BlockPeer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockPeer'
type MockNetworkMetrics_BlockPeer_Call struct {
	*mock.Call
}

// BlockPeer is a helper method to define mock.On call
//   - p peer.ID
func (_e *MockNetworkMetrics_Expecter) BlockPeer(p interface{}) *MockNetworkMetrics_BlockPeer_Call {
	return &MockNetworkMetrics_BlockPeer_Call{Call: _e.mock.On("BlockPeer", p)}
}

func (_c *MockNetworkMetrics_BlockPeer_Call) Run(run func(p peer.ID)) *MockNetworkMetrics_BlockPeer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(peer.ID))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockPeer_Call) Return() *MockNetworkMetrics_BlockPeer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockPeer_Call) RunAndReturn(run func(peer.ID)) *MockNetworkMetrics_BlockPeer_Call {
	_c.Run(run)
	return _c
}

// BlockProtocol provides a mock function with given fields: proto
func (_m *MockNetworkMetrics) BlockProtocol(proto protocol.ID) {
	_m.Called(proto)
}

// MockNetworkMetrics_BlockProtocol_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockProtocol'
type MockNetworkMetrics_BlockProtocol_Call struct {
	*mock.Call
}

// BlockProtocol is a helper method to define mock.On call
//   - proto protocol.ID
func (_e *MockNetworkMetrics_Expecter) BlockProtocol(proto interface{}) *MockNetworkMetrics_BlockProtocol_Call {
	return &MockNetworkMetrics_BlockProtocol_Call{Call: _e.mock.On("BlockProtocol", proto)}
}

func (_c *MockNetworkMetrics_BlockProtocol_Call) Run(run func(proto protocol.ID)) *MockNetworkMetrics_BlockProtocol_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(protocol.ID))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockProtocol_Call) Return() *MockNetworkMetrics_BlockProtocol_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockProtocol_Call) RunAndReturn(run func(protocol.ID)) *MockNetworkMetrics_BlockProtocol_Call {
	_c.Run(run)
	return _c
}

// BlockProtocolPeer provides a mock function with given fields: proto, p
func (_m *MockNetworkMetrics) BlockProtocolPeer(proto protocol.ID, p peer.ID) {
	_m.Called(proto, p)
}

// MockNetworkMetrics_BlockProtocolPeer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockProtocolPeer'
type MockNetworkMetrics_BlockProtocolPeer_Call struct {
	*mock.Call
}

// BlockProtocolPeer is a helper method to define mock.On call
//   - proto protocol.ID
//   - p peer.ID
func (_e *MockNetworkMetrics_Expecter) BlockProtocolPeer(proto interface{}, p interface{}) *MockNetworkMetrics_BlockProtocolPeer_Call {
	return &MockNetworkMetrics_BlockProtocolPeer_Call{Call: _e.mock.On("BlockProtocolPeer", proto, p)}
}

func (_c *MockNetworkMetrics_BlockProtocolPeer_Call) Run(run func(proto protocol.ID, p peer.ID)) *MockNetworkMetrics_BlockProtocolPeer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(protocol.ID), args[1].(peer.ID))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockProtocolPeer_Call) Return() *MockNetworkMetrics_BlockProtocolPeer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockProtocolPeer_Call) RunAndReturn(run func(protocol.ID, peer.ID)) *MockNetworkMetrics_BlockProtocolPeer_Call {
	_c.Run(run)
	return _c
}

// BlockService provides a mock function with given fields: svc
func (_m *MockNetworkMetrics) BlockService(svc string) {
	_m.Called(svc)
}

// MockNetworkMetrics_BlockService_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockService'
type MockNetworkMetrics_BlockService_Call struct {
	*mock.Call
}

// BlockService is a helper method to define mock.On call
//   - svc string
func (_e *MockNetworkMetrics_Expecter) BlockService(svc interface{}) *MockNetworkMetrics_BlockService_Call {
	return &MockNetworkMetrics_BlockService_Call{Call: _e.mock.On("BlockService", svc)}
}

func (_c *MockNetworkMetrics_BlockService_Call) Run(run func(svc string)) *MockNetworkMetrics_BlockService_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockService_Call) Return() *MockNetworkMetrics_BlockService_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockService_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_BlockService_Call {
	_c.Run(run)
	return _c
}

// BlockServicePeer provides a mock function with given fields: svc, p
func (_m *MockNetworkMetrics) BlockServicePeer(svc string, p peer.ID) {
	_m.Called(svc, p)
}

// MockNetworkMetrics_BlockServicePeer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockServicePeer'
type MockNetworkMetrics_BlockServicePeer_Call struct {
	*mock.Call
}

// BlockServicePeer is a helper method to define mock.On call
//   - svc string
//   - p peer.ID
func (_e *MockNetworkMetrics_Expecter) BlockServicePeer(svc interface{}, p interface{}) *MockNetworkMetrics_BlockServicePeer_Call {
	return &MockNetworkMetrics_BlockServicePeer_Call{Call: _e.mock.On("BlockServicePeer", svc, p)}
}

func (_c *MockNetworkMetrics_BlockServicePeer_Call) Run(run func(svc string, p peer.ID)) *MockNetworkMetrics_BlockServicePeer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(peer.ID))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockServicePeer_Call) Return() *MockNetworkMetrics_BlockServicePeer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockServicePeer_Call) RunAndReturn(run func(string, peer.ID)) *MockNetworkMetrics_BlockServicePeer_Call {
	_c.Run(run)
	return _c
}

// BlockStream provides a mock function with given fields: p, dir
func (_m *MockNetworkMetrics) BlockStream(p peer.ID, dir network.Direction) {
	_m.Called(p, dir)
}

// MockNetworkMetrics_BlockStream_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockStream'
type MockNetworkMetrics_BlockStream_Call struct {
	*mock.Call
}

// BlockStream is a helper method to define mock.On call
//   - p peer.ID
//   - dir network.Direction
func (_e *MockNetworkMetrics_Expecter) BlockStream(p interface{}, dir interface{}) *MockNetworkMetrics_BlockStream_Call {
	return &MockNetworkMetrics_BlockStream_Call{Call: _e.mock.On("BlockStream", p, dir)}
}

func (_c *MockNetworkMetrics_BlockStream_Call) Run(run func(p peer.ID, dir network.Direction)) *MockNetworkMetrics_BlockStream_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(peer.ID), args[1].(network.Direction))
	})
	return _c
}

func (_c *MockNetworkMetrics_BlockStream_Call) Return() *MockNetworkMetrics_BlockStream_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_BlockStream_Call) RunAndReturn(run func(peer.ID, network.Direction)) *MockNetworkMetrics_BlockStream_Call {
	_c.Run(run)
	return _c
}

// DNSLookupDuration provides a mock function with given fields: duration
func (_m *MockNetworkMetrics) DNSLookupDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockNetworkMetrics_DNSLookupDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DNSLookupDuration'
type MockNetworkMetrics_DNSLookupDuration_Call struct {
	*mock.Call
}

// DNSLookupDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockNetworkMetrics_Expecter) DNSLookupDuration(duration interface{}) *MockNetworkMetrics_DNSLookupDuration_Call {
	return &MockNetworkMetrics_DNSLookupDuration_Call{Call: _e.mock.On("DNSLookupDuration", duration)}
}

func (_c *MockNetworkMetrics_DNSLookupDuration_Call) Run(run func(duration time.Duration)) *MockNetworkMetrics_DNSLookupDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockNetworkMetrics_DNSLookupDuration_Call) Return() *MockNetworkMetrics_DNSLookupDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_DNSLookupDuration_Call) RunAndReturn(run func(time.Duration)) *MockNetworkMetrics_DNSLookupDuration_Call {
	_c.Run(run)
	return _c
}

// DuplicateInboundMessagesDropped provides a mock function with given fields: topic, _a1, messageType
func (_m *MockNetworkMetrics) DuplicateInboundMessagesDropped(topic string, _a1 string, messageType string) {
	_m.Called(topic, _a1, messageType)
}

// MockNetworkMetrics_DuplicateInboundMessagesDropped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DuplicateInboundMessagesDropped'
type MockNetworkMetrics_DuplicateInboundMessagesDropped_Call struct {
	*mock.Call
}

// DuplicateInboundMessagesDropped is a helper method to define mock.On call
//   - topic string
//   - _a1 string
//   - messageType string
func (_e *MockNetworkMetrics_Expecter) DuplicateInboundMessagesDropped(topic interface{}, _a1 interface{}, messageType interface{}) *MockNetworkMetrics_DuplicateInboundMessagesDropped_Call {
	return &MockNetworkMetrics_DuplicateInboundMessagesDropped_Call{Call: _e.mock.On("DuplicateInboundMessagesDropped", topic, _a1, messageType)}
}

func (_c *MockNetworkMetrics_DuplicateInboundMessagesDropped_Call) Run(run func(topic string, _a1 string, messageType string)) *MockNetworkMetrics_DuplicateInboundMessagesDropped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_DuplicateInboundMessagesDropped_Call) Return() *MockNetworkMetrics_DuplicateInboundMessagesDropped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_DuplicateInboundMessagesDropped_Call) RunAndReturn(run func(string, string, string)) *MockNetworkMetrics_DuplicateInboundMessagesDropped_Call {
	_c.Run(run)
	return _c
}

// DuplicateMessagePenalties provides a mock function with given fields: penalty
func (_m *MockNetworkMetrics) DuplicateMessagePenalties(penalty float64) {
	_m.Called(penalty)
}

// MockNetworkMetrics_DuplicateMessagePenalties_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DuplicateMessagePenalties'
type MockNetworkMetrics_DuplicateMessagePenalties_Call struct {
	*mock.Call
}

// DuplicateMessagePenalties is a helper method to define mock.On call
//   - penalty float64
func (_e *MockNetworkMetrics_Expecter) DuplicateMessagePenalties(penalty interface{}) *MockNetworkMetrics_DuplicateMessagePenalties_Call {
	return &MockNetworkMetrics_DuplicateMessagePenalties_Call{Call: _e.mock.On("DuplicateMessagePenalties", penalty)}
}

func (_c *MockNetworkMetrics_DuplicateMessagePenalties_Call) Run(run func(penalty float64)) *MockNetworkMetrics_DuplicateMessagePenalties_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_DuplicateMessagePenalties_Call) Return() *MockNetworkMetrics_DuplicateMessagePenalties_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_DuplicateMessagePenalties_Call) RunAndReturn(run func(float64)) *MockNetworkMetrics_DuplicateMessagePenalties_Call {
	_c.Run(run)
	return _c
}

// DuplicateMessagesCounts provides a mock function with given fields: count
func (_m *MockNetworkMetrics) DuplicateMessagesCounts(count float64) {
	_m.Called(count)
}

// MockNetworkMetrics_DuplicateMessagesCounts_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DuplicateMessagesCounts'
type MockNetworkMetrics_DuplicateMessagesCounts_Call struct {
	*mock.Call
}

// DuplicateMessagesCounts is a helper method to define mock.On call
//   - count float64
func (_e *MockNetworkMetrics_Expecter) DuplicateMessagesCounts(count interface{}) *MockNetworkMetrics_DuplicateMessagesCounts_Call {
	return &MockNetworkMetrics_DuplicateMessagesCounts_Call{Call: _e.mock.On("DuplicateMessagesCounts", count)}
}

func (_c *MockNetworkMetrics_DuplicateMessagesCounts_Call) Run(run func(count float64)) *MockNetworkMetrics_DuplicateMessagesCounts_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_DuplicateMessagesCounts_Call) Return() *MockNetworkMetrics_DuplicateMessagesCounts_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_DuplicateMessagesCounts_Call) RunAndReturn(run func(float64)) *MockNetworkMetrics_DuplicateMessagesCounts_Call {
	_c.Run(run)
	return _c
}

// InboundConnections provides a mock function with given fields: connectionCount
func (_m *MockNetworkMetrics) InboundConnections(connectionCount uint) {
	_m.Called(connectionCount)
}

// MockNetworkMetrics_InboundConnections_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InboundConnections'
type MockNetworkMetrics_InboundConnections_Call struct {
	*mock.Call
}

// InboundConnections is a helper method to define mock.On call
//   - connectionCount uint
func (_e *MockNetworkMetrics_Expecter) InboundConnections(connectionCount interface{}) *MockNetworkMetrics_InboundConnections_Call {
	return &MockNetworkMetrics_InboundConnections_Call{Call: _e.mock.On("InboundConnections", connectionCount)}
}

func (_c *MockNetworkMetrics_InboundConnections_Call) Run(run func(connectionCount uint)) *MockNetworkMetrics_InboundConnections_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint))
	})
	return _c
}

func (_c *MockNetworkMetrics_InboundConnections_Call) Return() *MockNetworkMetrics_InboundConnections_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_InboundConnections_Call) RunAndReturn(run func(uint)) *MockNetworkMetrics_InboundConnections_Call {
	_c.Run(run)
	return _c
}

// InboundMessageReceived provides a mock function with given fields: sizeBytes, topic, _a2, messageType
func (_m *MockNetworkMetrics) InboundMessageReceived(sizeBytes int, topic string, _a2 string, messageType string) {
	_m.Called(sizeBytes, topic, _a2, messageType)
}

// MockNetworkMetrics_InboundMessageReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InboundMessageReceived'
type MockNetworkMetrics_InboundMessageReceived_Call struct {
	*mock.Call
}

// InboundMessageReceived is a helper method to define mock.On call
//   - sizeBytes int
//   - topic string
//   - _a2 string
//   - messageType string
func (_e *MockNetworkMetrics_Expecter) InboundMessageReceived(sizeBytes interface{}, topic interface{}, _a2 interface{}, messageType interface{}) *MockNetworkMetrics_InboundMessageReceived_Call {
	return &MockNetworkMetrics_InboundMessageReceived_Call{Call: _e.mock.On("InboundMessageReceived", sizeBytes, topic, _a2, messageType)}
}

func (_c *MockNetworkMetrics_InboundMessageReceived_Call) Run(run func(sizeBytes int, topic string, _a2 string, messageType string)) *MockNetworkMetrics_InboundMessageReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_InboundMessageReceived_Call) Return() *MockNetworkMetrics_InboundMessageReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_InboundMessageReceived_Call) RunAndReturn(run func(int, string, string, string)) *MockNetworkMetrics_InboundMessageReceived_Call {
	_c.Run(run)
	return _c
}

// MessageAdded provides a mock function with given fields: priority
func (_m *MockNetworkMetrics) MessageAdded(priority int) {
	_m.Called(priority)
}

// MockNetworkMetrics_MessageAdded_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MessageAdded'
type MockNetworkMetrics_MessageAdded_Call struct {
	*mock.Call
}

// MessageAdded is a helper method to define mock.On call
//   - priority int
func (_e *MockNetworkMetrics_Expecter) MessageAdded(priority interface{}) *MockNetworkMetrics_MessageAdded_Call {
	return &MockNetworkMetrics_MessageAdded_Call{Call: _e.mock.On("MessageAdded", priority)}
}

func (_c *MockNetworkMetrics_MessageAdded_Call) Run(run func(priority int)) *MockNetworkMetrics_MessageAdded_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_MessageAdded_Call) Return() *MockNetworkMetrics_MessageAdded_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_MessageAdded_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_MessageAdded_Call {
	_c.Run(run)
	return _c
}

// MessageProcessingFinished provides a mock function with given fields: topic, duration
func (_m *MockNetworkMetrics) MessageProcessingFinished(topic string, duration time.Duration) {
	_m.Called(topic, duration)
}

// MockNetworkMetrics_MessageProcessingFinished_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MessageProcessingFinished'
type MockNetworkMetrics_MessageProcessingFinished_Call struct {
	*mock.Call
}

// MessageProcessingFinished is a helper method to define mock.On call
//   - topic string
//   - duration time.Duration
func (_e *MockNetworkMetrics_Expecter) MessageProcessingFinished(topic interface{}, duration interface{}) *MockNetworkMetrics_MessageProcessingFinished_Call {
	return &MockNetworkMetrics_MessageProcessingFinished_Call{Call: _e.mock.On("MessageProcessingFinished", topic, duration)}
}

func (_c *MockNetworkMetrics_MessageProcessingFinished_Call) Run(run func(topic string, duration time.Duration)) *MockNetworkMetrics_MessageProcessingFinished_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(time.Duration))
	})
	return _c
}

func (_c *MockNetworkMetrics_MessageProcessingFinished_Call) Return() *MockNetworkMetrics_MessageProcessingFinished_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_MessageProcessingFinished_Call) RunAndReturn(run func(string, time.Duration)) *MockNetworkMetrics_MessageProcessingFinished_Call {
	_c.Run(run)
	return _c
}

// MessageProcessingStarted provides a mock function with given fields: topic
func (_m *MockNetworkMetrics) MessageProcessingStarted(topic string) {
	_m.Called(topic)
}

// MockNetworkMetrics_MessageProcessingStarted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MessageProcessingStarted'
type MockNetworkMetrics_MessageProcessingStarted_Call struct {
	*mock.Call
}

// MessageProcessingStarted is a helper method to define mock.On call
//   - topic string
func (_e *MockNetworkMetrics_Expecter) MessageProcessingStarted(topic interface{}) *MockNetworkMetrics_MessageProcessingStarted_Call {
	return &MockNetworkMetrics_MessageProcessingStarted_Call{Call: _e.mock.On("MessageProcessingStarted", topic)}
}

func (_c *MockNetworkMetrics_MessageProcessingStarted_Call) Run(run func(topic string)) *MockNetworkMetrics_MessageProcessingStarted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_MessageProcessingStarted_Call) Return() *MockNetworkMetrics_MessageProcessingStarted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_MessageProcessingStarted_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_MessageProcessingStarted_Call {
	_c.Run(run)
	return _c
}

// MessageRemoved provides a mock function with given fields: priority
func (_m *MockNetworkMetrics) MessageRemoved(priority int) {
	_m.Called(priority)
}

// MockNetworkMetrics_MessageRemoved_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MessageRemoved'
type MockNetworkMetrics_MessageRemoved_Call struct {
	*mock.Call
}

// MessageRemoved is a helper method to define mock.On call
//   - priority int
func (_e *MockNetworkMetrics_Expecter) MessageRemoved(priority interface{}) *MockNetworkMetrics_MessageRemoved_Call {
	return &MockNetworkMetrics_MessageRemoved_Call{Call: _e.mock.On("MessageRemoved", priority)}
}

func (_c *MockNetworkMetrics_MessageRemoved_Call) Run(run func(priority int)) *MockNetworkMetrics_MessageRemoved_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_MessageRemoved_Call) Return() *MockNetworkMetrics_MessageRemoved_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_MessageRemoved_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_MessageRemoved_Call {
	_c.Run(run)
	return _c
}

// OnActiveClusterIDsNotSetErr provides a mock function with no fields
func (_m *MockNetworkMetrics) OnActiveClusterIDsNotSetErr() {
	_m.Called()
}

// MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnActiveClusterIDsNotSetErr'
type MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call struct {
	*mock.Call
}

// OnActiveClusterIDsNotSetErr is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnActiveClusterIDsNotSetErr() *MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call {
	return &MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call{Call: _e.mock.On("OnActiveClusterIDsNotSetErr")}
}

func (_c *MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call) Run(run func()) *MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call) Return() *MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnActiveClusterIDsNotSetErr_Call {
	_c.Run(run)
	return _c
}

// OnAppSpecificScoreUpdated provides a mock function with given fields: _a0
func (_m *MockNetworkMetrics) OnAppSpecificScoreUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockNetworkMetrics_OnAppSpecificScoreUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnAppSpecificScoreUpdated'
type MockNetworkMetrics_OnAppSpecificScoreUpdated_Call struct {
	*mock.Call
}

// OnAppSpecificScoreUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockNetworkMetrics_Expecter) OnAppSpecificScoreUpdated(_a0 interface{}) *MockNetworkMetrics_OnAppSpecificScoreUpdated_Call {
	return &MockNetworkMetrics_OnAppSpecificScoreUpdated_Call{Call: _e.mock.On("OnAppSpecificScoreUpdated", _a0)}
}

func (_c *MockNetworkMetrics_OnAppSpecificScoreUpdated_Call) Run(run func(_a0 float64)) *MockNetworkMetrics_OnAppSpecificScoreUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnAppSpecificScoreUpdated_Call) Return() *MockNetworkMetrics_OnAppSpecificScoreUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnAppSpecificScoreUpdated_Call) RunAndReturn(run func(float64)) *MockNetworkMetrics_OnAppSpecificScoreUpdated_Call {
	_c.Run(run)
	return _c
}

// OnBehaviourPenaltyUpdated provides a mock function with given fields: _a0
func (_m *MockNetworkMetrics) OnBehaviourPenaltyUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnBehaviourPenaltyUpdated'
type MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call struct {
	*mock.Call
}

// OnBehaviourPenaltyUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockNetworkMetrics_Expecter) OnBehaviourPenaltyUpdated(_a0 interface{}) *MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call {
	return &MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call{Call: _e.mock.On("OnBehaviourPenaltyUpdated", _a0)}
}

func (_c *MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call) Run(run func(_a0 float64)) *MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call) Return() *MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call) RunAndReturn(run func(float64)) *MockNetworkMetrics_OnBehaviourPenaltyUpdated_Call {
	_c.Run(run)
	return _c
}

// OnControlMessagesTruncated provides a mock function with given fields: messageType, diff
func (_m *MockNetworkMetrics) OnControlMessagesTruncated(messageType p2pmsg.ControlMessageType, diff int) {
	_m.Called(messageType, diff)
}

// MockNetworkMetrics_OnControlMessagesTruncated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnControlMessagesTruncated'
type MockNetworkMetrics_OnControlMessagesTruncated_Call struct {
	*mock.Call
}

// OnControlMessagesTruncated is a helper method to define mock.On call
//   - messageType p2pmsg.ControlMessageType
//   - diff int
func (_e *MockNetworkMetrics_Expecter) OnControlMessagesTruncated(messageType interface{}, diff interface{}) *MockNetworkMetrics_OnControlMessagesTruncated_Call {
	return &MockNetworkMetrics_OnControlMessagesTruncated_Call{Call: _e.mock.On("OnControlMessagesTruncated", messageType, diff)}
}

func (_c *MockNetworkMetrics_OnControlMessagesTruncated_Call) Run(run func(messageType p2pmsg.ControlMessageType, diff int)) *MockNetworkMetrics_OnControlMessagesTruncated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(p2pmsg.ControlMessageType), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnControlMessagesTruncated_Call) Return() *MockNetworkMetrics_OnControlMessagesTruncated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnControlMessagesTruncated_Call) RunAndReturn(run func(p2pmsg.ControlMessageType, int)) *MockNetworkMetrics_OnControlMessagesTruncated_Call {
	_c.Run(run)
	return _c
}

// OnDNSCacheHit provides a mock function with no fields
func (_m *MockNetworkMetrics) OnDNSCacheHit() {
	_m.Called()
}

// MockNetworkMetrics_OnDNSCacheHit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSCacheHit'
type MockNetworkMetrics_OnDNSCacheHit_Call struct {
	*mock.Call
}

// OnDNSCacheHit is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnDNSCacheHit() *MockNetworkMetrics_OnDNSCacheHit_Call {
	return &MockNetworkMetrics_OnDNSCacheHit_Call{Call: _e.mock.On("OnDNSCacheHit")}
}

func (_c *MockNetworkMetrics_OnDNSCacheHit_Call) Run(run func()) *MockNetworkMetrics_OnDNSCacheHit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnDNSCacheHit_Call) Return() *MockNetworkMetrics_OnDNSCacheHit_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnDNSCacheHit_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnDNSCacheHit_Call {
	_c.Run(run)
	return _c
}

// OnDNSCacheInvalidated provides a mock function with no fields
func (_m *MockNetworkMetrics) OnDNSCacheInvalidated() {
	_m.Called()
}

// MockNetworkMetrics_OnDNSCacheInvalidated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSCacheInvalidated'
type MockNetworkMetrics_OnDNSCacheInvalidated_Call struct {
	*mock.Call
}

// OnDNSCacheInvalidated is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnDNSCacheInvalidated() *MockNetworkMetrics_OnDNSCacheInvalidated_Call {
	return &MockNetworkMetrics_OnDNSCacheInvalidated_Call{Call: _e.mock.On("OnDNSCacheInvalidated")}
}

func (_c *MockNetworkMetrics_OnDNSCacheInvalidated_Call) Run(run func()) *MockNetworkMetrics_OnDNSCacheInvalidated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnDNSCacheInvalidated_Call) Return() *MockNetworkMetrics_OnDNSCacheInvalidated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnDNSCacheInvalidated_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnDNSCacheInvalidated_Call {
	_c.Run(run)
	return _c
}

// OnDNSCacheMiss provides a mock function with no fields
func (_m *MockNetworkMetrics) OnDNSCacheMiss() {
	_m.Called()
}

// MockNetworkMetrics_OnDNSCacheMiss_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSCacheMiss'
type MockNetworkMetrics_OnDNSCacheMiss_Call struct {
	*mock.Call
}

// OnDNSCacheMiss is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnDNSCacheMiss() *MockNetworkMetrics_OnDNSCacheMiss_Call {
	return &MockNetworkMetrics_OnDNSCacheMiss_Call{Call: _e.mock.On("OnDNSCacheMiss")}
}

func (_c *MockNetworkMetrics_OnDNSCacheMiss_Call) Run(run func()) *MockNetworkMetrics_OnDNSCacheMiss_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnDNSCacheMiss_Call) Return() *MockNetworkMetrics_OnDNSCacheMiss_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnDNSCacheMiss_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnDNSCacheMiss_Call {
	_c.Run(run)
	return _c
}

// OnDNSLookupRequestDropped provides a mock function with no fields
func (_m *MockNetworkMetrics) OnDNSLookupRequestDropped() {
	_m.Called()
}

// MockNetworkMetrics_OnDNSLookupRequestDropped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSLookupRequestDropped'
type MockNetworkMetrics_OnDNSLookupRequestDropped_Call struct {
	*mock.Call
}

// OnDNSLookupRequestDropped is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnDNSLookupRequestDropped() *MockNetworkMetrics_OnDNSLookupRequestDropped_Call {
	return &MockNetworkMetrics_OnDNSLookupRequestDropped_Call{Call: _e.mock.On("OnDNSLookupRequestDropped")}
}

func (_c *MockNetworkMetrics_OnDNSLookupRequestDropped_Call) Run(run func()) *MockNetworkMetrics_OnDNSLookupRequestDropped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnDNSLookupRequestDropped_Call) Return() *MockNetworkMetrics_OnDNSLookupRequestDropped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnDNSLookupRequestDropped_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnDNSLookupRequestDropped_Call {
	_c.Run(run)
	return _c
}

// OnDialRetryBudgetResetToDefault provides a mock function with no fields
func (_m *MockNetworkMetrics) OnDialRetryBudgetResetToDefault() {
	_m.Called()
}

// MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDialRetryBudgetResetToDefault'
type MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call struct {
	*mock.Call
}

// OnDialRetryBudgetResetToDefault is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnDialRetryBudgetResetToDefault() *MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call {
	return &MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call{Call: _e.mock.On("OnDialRetryBudgetResetToDefault")}
}

func (_c *MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call) Run(run func()) *MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call) Return() *MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnDialRetryBudgetResetToDefault_Call {
	_c.Run(run)
	return _c
}

// OnDialRetryBudgetUpdated provides a mock function with given fields: budget
func (_m *MockNetworkMetrics) OnDialRetryBudgetUpdated(budget uint64) {
	_m.Called(budget)
}

// MockNetworkMetrics_OnDialRetryBudgetUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDialRetryBudgetUpdated'
type MockNetworkMetrics_OnDialRetryBudgetUpdated_Call struct {
	*mock.Call
}

// OnDialRetryBudgetUpdated is a helper method to define mock.On call
//   - budget uint64
func (_e *MockNetworkMetrics_Expecter) OnDialRetryBudgetUpdated(budget interface{}) *MockNetworkMetrics_OnDialRetryBudgetUpdated_Call {
	return &MockNetworkMetrics_OnDialRetryBudgetUpdated_Call{Call: _e.mock.On("OnDialRetryBudgetUpdated", budget)}
}

func (_c *MockNetworkMetrics_OnDialRetryBudgetUpdated_Call) Run(run func(budget uint64)) *MockNetworkMetrics_OnDialRetryBudgetUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnDialRetryBudgetUpdated_Call) Return() *MockNetworkMetrics_OnDialRetryBudgetUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnDialRetryBudgetUpdated_Call) RunAndReturn(run func(uint64)) *MockNetworkMetrics_OnDialRetryBudgetUpdated_Call {
	_c.Run(run)
	return _c
}

// OnEstablishStreamFailure provides a mock function with given fields: duration, attempts
func (_m *MockNetworkMetrics) OnEstablishStreamFailure(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockNetworkMetrics_OnEstablishStreamFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnEstablishStreamFailure'
type MockNetworkMetrics_OnEstablishStreamFailure_Call struct {
	*mock.Call
}

// OnEstablishStreamFailure is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockNetworkMetrics_Expecter) OnEstablishStreamFailure(duration interface{}, attempts interface{}) *MockNetworkMetrics_OnEstablishStreamFailure_Call {
	return &MockNetworkMetrics_OnEstablishStreamFailure_Call{Call: _e.mock.On("OnEstablishStreamFailure", duration, attempts)}
}

func (_c *MockNetworkMetrics_OnEstablishStreamFailure_Call) Run(run func(duration time.Duration, attempts int)) *MockNetworkMetrics_OnEstablishStreamFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnEstablishStreamFailure_Call) Return() *MockNetworkMetrics_OnEstablishStreamFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnEstablishStreamFailure_Call) RunAndReturn(run func(time.Duration, int)) *MockNetworkMetrics_OnEstablishStreamFailure_Call {
	_c.Run(run)
	return _c
}

// OnFirstMessageDeliveredUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockNetworkMetrics) OnFirstMessageDeliveredUpdated(_a0 channels.Topic, _a1 float64) {
	_m.Called(_a0, _a1)
}

// MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnFirstMessageDeliveredUpdated'
type MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call struct {
	*mock.Call
}

// OnFirstMessageDeliveredUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 float64
func (_e *MockNetworkMetrics_Expecter) OnFirstMessageDeliveredUpdated(_a0 interface{}, _a1 interface{}) *MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call {
	return &MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call{Call: _e.mock.On("OnFirstMessageDeliveredUpdated", _a0, _a1)}
}

func (_c *MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call) Run(run func(_a0 channels.Topic, _a1 float64)) *MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call) Return() *MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call) RunAndReturn(run func(channels.Topic, float64)) *MockNetworkMetrics_OnFirstMessageDeliveredUpdated_Call {
	_c.Run(run)
	return _c
}

// OnGraftDuplicateTopicIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnGraftDuplicateTopicIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnGraftDuplicateTopicIdsExceedThreshold'
type MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnGraftDuplicateTopicIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnGraftDuplicateTopicIdsExceedThreshold() *MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call{Call: _e.mock.On("OnGraftDuplicateTopicIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnGraftDuplicateTopicIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnGraftInvalidTopicIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnGraftInvalidTopicIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnGraftInvalidTopicIdsExceedThreshold'
type MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnGraftInvalidTopicIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnGraftInvalidTopicIdsExceedThreshold() *MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call{Call: _e.mock.On("OnGraftInvalidTopicIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnGraftInvalidTopicIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnGraftMessageInspected provides a mock function with given fields: duplicateTopicIds, invalidTopicIds
func (_m *MockNetworkMetrics) OnGraftMessageInspected(duplicateTopicIds int, invalidTopicIds int) {
	_m.Called(duplicateTopicIds, invalidTopicIds)
}

// MockNetworkMetrics_OnGraftMessageInspected_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnGraftMessageInspected'
type MockNetworkMetrics_OnGraftMessageInspected_Call struct {
	*mock.Call
}

// OnGraftMessageInspected is a helper method to define mock.On call
//   - duplicateTopicIds int
//   - invalidTopicIds int
func (_e *MockNetworkMetrics_Expecter) OnGraftMessageInspected(duplicateTopicIds interface{}, invalidTopicIds interface{}) *MockNetworkMetrics_OnGraftMessageInspected_Call {
	return &MockNetworkMetrics_OnGraftMessageInspected_Call{Call: _e.mock.On("OnGraftMessageInspected", duplicateTopicIds, invalidTopicIds)}
}

func (_c *MockNetworkMetrics_OnGraftMessageInspected_Call) Run(run func(duplicateTopicIds int, invalidTopicIds int)) *MockNetworkMetrics_OnGraftMessageInspected_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnGraftMessageInspected_Call) Return() *MockNetworkMetrics_OnGraftMessageInspected_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnGraftMessageInspected_Call) RunAndReturn(run func(int, int)) *MockNetworkMetrics_OnGraftMessageInspected_Call {
	_c.Run(run)
	return _c
}

// OnIHaveControlMessageIdsTruncated provides a mock function with given fields: diff
func (_m *MockNetworkMetrics) OnIHaveControlMessageIdsTruncated(diff int) {
	_m.Called(diff)
}

// MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIHaveControlMessageIdsTruncated'
type MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call struct {
	*mock.Call
}

// OnIHaveControlMessageIdsTruncated is a helper method to define mock.On call
//   - diff int
func (_e *MockNetworkMetrics_Expecter) OnIHaveControlMessageIdsTruncated(diff interface{}) *MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call {
	return &MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call{Call: _e.mock.On("OnIHaveControlMessageIdsTruncated", diff)}
}

func (_c *MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call) Run(run func(diff int)) *MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call) Return() *MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_OnIHaveControlMessageIdsTruncated_Call {
	_c.Run(run)
	return _c
}

// OnIHaveDuplicateMessageIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnIHaveDuplicateMessageIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIHaveDuplicateMessageIdsExceedThreshold'
type MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnIHaveDuplicateMessageIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnIHaveDuplicateMessageIdsExceedThreshold() *MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call{Call: _e.mock.On("OnIHaveDuplicateMessageIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnIHaveDuplicateMessageIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnIHaveDuplicateTopicIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnIHaveDuplicateTopicIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIHaveDuplicateTopicIdsExceedThreshold'
type MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnIHaveDuplicateTopicIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnIHaveDuplicateTopicIdsExceedThreshold() *MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call{Call: _e.mock.On("OnIHaveDuplicateTopicIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnIHaveDuplicateTopicIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnIHaveInvalidTopicIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnIHaveInvalidTopicIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIHaveInvalidTopicIdsExceedThreshold'
type MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnIHaveInvalidTopicIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnIHaveInvalidTopicIdsExceedThreshold() *MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call{Call: _e.mock.On("OnIHaveInvalidTopicIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnIHaveInvalidTopicIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnIHaveMessageIDsReceived provides a mock function with given fields: channel, msgIdCount
func (_m *MockNetworkMetrics) OnIHaveMessageIDsReceived(channel string, msgIdCount int) {
	_m.Called(channel, msgIdCount)
}

// MockNetworkMetrics_OnIHaveMessageIDsReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIHaveMessageIDsReceived'
type MockNetworkMetrics_OnIHaveMessageIDsReceived_Call struct {
	*mock.Call
}

// OnIHaveMessageIDsReceived is a helper method to define mock.On call
//   - channel string
//   - msgIdCount int
func (_e *MockNetworkMetrics_Expecter) OnIHaveMessageIDsReceived(channel interface{}, msgIdCount interface{}) *MockNetworkMetrics_OnIHaveMessageIDsReceived_Call {
	return &MockNetworkMetrics_OnIHaveMessageIDsReceived_Call{Call: _e.mock.On("OnIHaveMessageIDsReceived", channel, msgIdCount)}
}

func (_c *MockNetworkMetrics_OnIHaveMessageIDsReceived_Call) Run(run func(channel string, msgIdCount int)) *MockNetworkMetrics_OnIHaveMessageIDsReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveMessageIDsReceived_Call) Return() *MockNetworkMetrics_OnIHaveMessageIDsReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveMessageIDsReceived_Call) RunAndReturn(run func(string, int)) *MockNetworkMetrics_OnIHaveMessageIDsReceived_Call {
	_c.Run(run)
	return _c
}

// OnIHaveMessagesInspected provides a mock function with given fields: duplicateTopicIds, duplicateMessageIds, invalidTopicIds
func (_m *MockNetworkMetrics) OnIHaveMessagesInspected(duplicateTopicIds int, duplicateMessageIds int, invalidTopicIds int) {
	_m.Called(duplicateTopicIds, duplicateMessageIds, invalidTopicIds)
}

// MockNetworkMetrics_OnIHaveMessagesInspected_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIHaveMessagesInspected'
type MockNetworkMetrics_OnIHaveMessagesInspected_Call struct {
	*mock.Call
}

// OnIHaveMessagesInspected is a helper method to define mock.On call
//   - duplicateTopicIds int
//   - duplicateMessageIds int
//   - invalidTopicIds int
func (_e *MockNetworkMetrics_Expecter) OnIHaveMessagesInspected(duplicateTopicIds interface{}, duplicateMessageIds interface{}, invalidTopicIds interface{}) *MockNetworkMetrics_OnIHaveMessagesInspected_Call {
	return &MockNetworkMetrics_OnIHaveMessagesInspected_Call{Call: _e.mock.On("OnIHaveMessagesInspected", duplicateTopicIds, duplicateMessageIds, invalidTopicIds)}
}

func (_c *MockNetworkMetrics_OnIHaveMessagesInspected_Call) Run(run func(duplicateTopicIds int, duplicateMessageIds int, invalidTopicIds int)) *MockNetworkMetrics_OnIHaveMessagesInspected_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int), args[2].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveMessagesInspected_Call) Return() *MockNetworkMetrics_OnIHaveMessagesInspected_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIHaveMessagesInspected_Call) RunAndReturn(run func(int, int, int)) *MockNetworkMetrics_OnIHaveMessagesInspected_Call {
	_c.Run(run)
	return _c
}

// OnIPColocationFactorUpdated provides a mock function with given fields: _a0
func (_m *MockNetworkMetrics) OnIPColocationFactorUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockNetworkMetrics_OnIPColocationFactorUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIPColocationFactorUpdated'
type MockNetworkMetrics_OnIPColocationFactorUpdated_Call struct {
	*mock.Call
}

// OnIPColocationFactorUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockNetworkMetrics_Expecter) OnIPColocationFactorUpdated(_a0 interface{}) *MockNetworkMetrics_OnIPColocationFactorUpdated_Call {
	return &MockNetworkMetrics_OnIPColocationFactorUpdated_Call{Call: _e.mock.On("OnIPColocationFactorUpdated", _a0)}
}

func (_c *MockNetworkMetrics_OnIPColocationFactorUpdated_Call) Run(run func(_a0 float64)) *MockNetworkMetrics_OnIPColocationFactorUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIPColocationFactorUpdated_Call) Return() *MockNetworkMetrics_OnIPColocationFactorUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIPColocationFactorUpdated_Call) RunAndReturn(run func(float64)) *MockNetworkMetrics_OnIPColocationFactorUpdated_Call {
	_c.Run(run)
	return _c
}

// OnIWantCacheMissMessageIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnIWantCacheMissMessageIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIWantCacheMissMessageIdsExceedThreshold'
type MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnIWantCacheMissMessageIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnIWantCacheMissMessageIdsExceedThreshold() *MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call{Call: _e.mock.On("OnIWantCacheMissMessageIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnIWantCacheMissMessageIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnIWantControlMessageIdsTruncated provides a mock function with given fields: diff
func (_m *MockNetworkMetrics) OnIWantControlMessageIdsTruncated(diff int) {
	_m.Called(diff)
}

// MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIWantControlMessageIdsTruncated'
type MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call struct {
	*mock.Call
}

// OnIWantControlMessageIdsTruncated is a helper method to define mock.On call
//   - diff int
func (_e *MockNetworkMetrics_Expecter) OnIWantControlMessageIdsTruncated(diff interface{}) *MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call {
	return &MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call{Call: _e.mock.On("OnIWantControlMessageIdsTruncated", diff)}
}

func (_c *MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call) Run(run func(diff int)) *MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call) Return() *MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_OnIWantControlMessageIdsTruncated_Call {
	_c.Run(run)
	return _c
}

// OnIWantDuplicateMessageIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnIWantDuplicateMessageIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIWantDuplicateMessageIdsExceedThreshold'
type MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnIWantDuplicateMessageIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnIWantDuplicateMessageIdsExceedThreshold() *MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call{Call: _e.mock.On("OnIWantDuplicateMessageIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnIWantDuplicateMessageIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnIWantMessageIDsReceived provides a mock function with given fields: msgIdCount
func (_m *MockNetworkMetrics) OnIWantMessageIDsReceived(msgIdCount int) {
	_m.Called(msgIdCount)
}

// MockNetworkMetrics_OnIWantMessageIDsReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIWantMessageIDsReceived'
type MockNetworkMetrics_OnIWantMessageIDsReceived_Call struct {
	*mock.Call
}

// OnIWantMessageIDsReceived is a helper method to define mock.On call
//   - msgIdCount int
func (_e *MockNetworkMetrics_Expecter) OnIWantMessageIDsReceived(msgIdCount interface{}) *MockNetworkMetrics_OnIWantMessageIDsReceived_Call {
	return &MockNetworkMetrics_OnIWantMessageIDsReceived_Call{Call: _e.mock.On("OnIWantMessageIDsReceived", msgIdCount)}
}

func (_c *MockNetworkMetrics_OnIWantMessageIDsReceived_Call) Run(run func(msgIdCount int)) *MockNetworkMetrics_OnIWantMessageIDsReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIWantMessageIDsReceived_Call) Return() *MockNetworkMetrics_OnIWantMessageIDsReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIWantMessageIDsReceived_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_OnIWantMessageIDsReceived_Call {
	_c.Run(run)
	return _c
}

// OnIWantMessagesInspected provides a mock function with given fields: duplicateCount, cacheMissCount
func (_m *MockNetworkMetrics) OnIWantMessagesInspected(duplicateCount int, cacheMissCount int) {
	_m.Called(duplicateCount, cacheMissCount)
}

// MockNetworkMetrics_OnIWantMessagesInspected_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIWantMessagesInspected'
type MockNetworkMetrics_OnIWantMessagesInspected_Call struct {
	*mock.Call
}

// OnIWantMessagesInspected is a helper method to define mock.On call
//   - duplicateCount int
//   - cacheMissCount int
func (_e *MockNetworkMetrics_Expecter) OnIWantMessagesInspected(duplicateCount interface{}, cacheMissCount interface{}) *MockNetworkMetrics_OnIWantMessagesInspected_Call {
	return &MockNetworkMetrics_OnIWantMessagesInspected_Call{Call: _e.mock.On("OnIWantMessagesInspected", duplicateCount, cacheMissCount)}
}

func (_c *MockNetworkMetrics_OnIWantMessagesInspected_Call) Run(run func(duplicateCount int, cacheMissCount int)) *MockNetworkMetrics_OnIWantMessagesInspected_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIWantMessagesInspected_Call) Return() *MockNetworkMetrics_OnIWantMessagesInspected_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIWantMessagesInspected_Call) RunAndReturn(run func(int, int)) *MockNetworkMetrics_OnIWantMessagesInspected_Call {
	_c.Run(run)
	return _c
}

// OnIncomingRpcReceived provides a mock function with given fields: iHaveCount, iWantCount, graftCount, pruneCount, msgCount
func (_m *MockNetworkMetrics) OnIncomingRpcReceived(iHaveCount int, iWantCount int, graftCount int, pruneCount int, msgCount int) {
	_m.Called(iHaveCount, iWantCount, graftCount, pruneCount, msgCount)
}

// MockNetworkMetrics_OnIncomingRpcReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnIncomingRpcReceived'
type MockNetworkMetrics_OnIncomingRpcReceived_Call struct {
	*mock.Call
}

// OnIncomingRpcReceived is a helper method to define mock.On call
//   - iHaveCount int
//   - iWantCount int
//   - graftCount int
//   - pruneCount int
//   - msgCount int
func (_e *MockNetworkMetrics_Expecter) OnIncomingRpcReceived(iHaveCount interface{}, iWantCount interface{}, graftCount interface{}, pruneCount interface{}, msgCount interface{}) *MockNetworkMetrics_OnIncomingRpcReceived_Call {
	return &MockNetworkMetrics_OnIncomingRpcReceived_Call{Call: _e.mock.On("OnIncomingRpcReceived", iHaveCount, iWantCount, graftCount, pruneCount, msgCount)}
}

func (_c *MockNetworkMetrics_OnIncomingRpcReceived_Call) Run(run func(iHaveCount int, iWantCount int, graftCount int, pruneCount int, msgCount int)) *MockNetworkMetrics_OnIncomingRpcReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int), args[2].(int), args[3].(int), args[4].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnIncomingRpcReceived_Call) Return() *MockNetworkMetrics_OnIncomingRpcReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnIncomingRpcReceived_Call) RunAndReturn(run func(int, int, int, int, int)) *MockNetworkMetrics_OnIncomingRpcReceived_Call {
	_c.Run(run)
	return _c
}

// OnInvalidControlMessageNotificationSent provides a mock function with no fields
func (_m *MockNetworkMetrics) OnInvalidControlMessageNotificationSent() {
	_m.Called()
}

// MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnInvalidControlMessageNotificationSent'
type MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call struct {
	*mock.Call
}

// OnInvalidControlMessageNotificationSent is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnInvalidControlMessageNotificationSent() *MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call {
	return &MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call{Call: _e.mock.On("OnInvalidControlMessageNotificationSent")}
}

func (_c *MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call) Run(run func()) *MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call) Return() *MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnInvalidControlMessageNotificationSent_Call {
	_c.Run(run)
	return _c
}

// OnInvalidMessageDeliveredUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockNetworkMetrics) OnInvalidMessageDeliveredUpdated(_a0 channels.Topic, _a1 float64) {
	_m.Called(_a0, _a1)
}

// MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnInvalidMessageDeliveredUpdated'
type MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call struct {
	*mock.Call
}

// OnInvalidMessageDeliveredUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 float64
func (_e *MockNetworkMetrics_Expecter) OnInvalidMessageDeliveredUpdated(_a0 interface{}, _a1 interface{}) *MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call {
	return &MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call{Call: _e.mock.On("OnInvalidMessageDeliveredUpdated", _a0, _a1)}
}

func (_c *MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call) Run(run func(_a0 channels.Topic, _a1 float64)) *MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call) Return() *MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call) RunAndReturn(run func(channels.Topic, float64)) *MockNetworkMetrics_OnInvalidMessageDeliveredUpdated_Call {
	_c.Run(run)
	return _c
}

// OnInvalidTopicIdDetectedForControlMessage provides a mock function with given fields: messageType
func (_m *MockNetworkMetrics) OnInvalidTopicIdDetectedForControlMessage(messageType p2pmsg.ControlMessageType) {
	_m.Called(messageType)
}

// MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnInvalidTopicIdDetectedForControlMessage'
type MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call struct {
	*mock.Call
}

// OnInvalidTopicIdDetectedForControlMessage is a helper method to define mock.On call
//   - messageType p2pmsg.ControlMessageType
func (_e *MockNetworkMetrics_Expecter) OnInvalidTopicIdDetectedForControlMessage(messageType interface{}) *MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call {
	return &MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call{Call: _e.mock.On("OnInvalidTopicIdDetectedForControlMessage", messageType)}
}

func (_c *MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call) Run(run func(messageType p2pmsg.ControlMessageType)) *MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(p2pmsg.ControlMessageType))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call) Return() *MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call) RunAndReturn(run func(p2pmsg.ControlMessageType)) *MockNetworkMetrics_OnInvalidTopicIdDetectedForControlMessage_Call {
	_c.Run(run)
	return _c
}

// OnLocalMeshSizeUpdated provides a mock function with given fields: topic, size
func (_m *MockNetworkMetrics) OnLocalMeshSizeUpdated(topic string, size int) {
	_m.Called(topic, size)
}

// MockNetworkMetrics_OnLocalMeshSizeUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnLocalMeshSizeUpdated'
type MockNetworkMetrics_OnLocalMeshSizeUpdated_Call struct {
	*mock.Call
}

// OnLocalMeshSizeUpdated is a helper method to define mock.On call
//   - topic string
//   - size int
func (_e *MockNetworkMetrics_Expecter) OnLocalMeshSizeUpdated(topic interface{}, size interface{}) *MockNetworkMetrics_OnLocalMeshSizeUpdated_Call {
	return &MockNetworkMetrics_OnLocalMeshSizeUpdated_Call{Call: _e.mock.On("OnLocalMeshSizeUpdated", topic, size)}
}

func (_c *MockNetworkMetrics_OnLocalMeshSizeUpdated_Call) Run(run func(topic string, size int)) *MockNetworkMetrics_OnLocalMeshSizeUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnLocalMeshSizeUpdated_Call) Return() *MockNetworkMetrics_OnLocalMeshSizeUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnLocalMeshSizeUpdated_Call) RunAndReturn(run func(string, int)) *MockNetworkMetrics_OnLocalMeshSizeUpdated_Call {
	_c.Run(run)
	return _c
}

// OnLocalPeerJoinedTopic provides a mock function with no fields
func (_m *MockNetworkMetrics) OnLocalPeerJoinedTopic() {
	_m.Called()
}

// MockNetworkMetrics_OnLocalPeerJoinedTopic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnLocalPeerJoinedTopic'
type MockNetworkMetrics_OnLocalPeerJoinedTopic_Call struct {
	*mock.Call
}

// OnLocalPeerJoinedTopic is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnLocalPeerJoinedTopic() *MockNetworkMetrics_OnLocalPeerJoinedTopic_Call {
	return &MockNetworkMetrics_OnLocalPeerJoinedTopic_Call{Call: _e.mock.On("OnLocalPeerJoinedTopic")}
}

func (_c *MockNetworkMetrics_OnLocalPeerJoinedTopic_Call) Run(run func()) *MockNetworkMetrics_OnLocalPeerJoinedTopic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnLocalPeerJoinedTopic_Call) Return() *MockNetworkMetrics_OnLocalPeerJoinedTopic_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnLocalPeerJoinedTopic_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnLocalPeerJoinedTopic_Call {
	_c.Run(run)
	return _c
}

// OnLocalPeerLeftTopic provides a mock function with no fields
func (_m *MockNetworkMetrics) OnLocalPeerLeftTopic() {
	_m.Called()
}

// MockNetworkMetrics_OnLocalPeerLeftTopic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnLocalPeerLeftTopic'
type MockNetworkMetrics_OnLocalPeerLeftTopic_Call struct {
	*mock.Call
}

// OnLocalPeerLeftTopic is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnLocalPeerLeftTopic() *MockNetworkMetrics_OnLocalPeerLeftTopic_Call {
	return &MockNetworkMetrics_OnLocalPeerLeftTopic_Call{Call: _e.mock.On("OnLocalPeerLeftTopic")}
}

func (_c *MockNetworkMetrics_OnLocalPeerLeftTopic_Call) Run(run func()) *MockNetworkMetrics_OnLocalPeerLeftTopic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnLocalPeerLeftTopic_Call) Return() *MockNetworkMetrics_OnLocalPeerLeftTopic_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnLocalPeerLeftTopic_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnLocalPeerLeftTopic_Call {
	_c.Run(run)
	return _c
}

// OnMeshMessageDeliveredUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockNetworkMetrics) OnMeshMessageDeliveredUpdated(_a0 channels.Topic, _a1 float64) {
	_m.Called(_a0, _a1)
}

// MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMeshMessageDeliveredUpdated'
type MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call struct {
	*mock.Call
}

// OnMeshMessageDeliveredUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 float64
func (_e *MockNetworkMetrics_Expecter) OnMeshMessageDeliveredUpdated(_a0 interface{}, _a1 interface{}) *MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call {
	return &MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call{Call: _e.mock.On("OnMeshMessageDeliveredUpdated", _a0, _a1)}
}

func (_c *MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call) Run(run func(_a0 channels.Topic, _a1 float64)) *MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call) Return() *MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call) RunAndReturn(run func(channels.Topic, float64)) *MockNetworkMetrics_OnMeshMessageDeliveredUpdated_Call {
	_c.Run(run)
	return _c
}

// OnMessageDeliveredToAllSubscribers provides a mock function with given fields: size
func (_m *MockNetworkMetrics) OnMessageDeliveredToAllSubscribers(size int) {
	_m.Called(size)
}

// MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMessageDeliveredToAllSubscribers'
type MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call struct {
	*mock.Call
}

// OnMessageDeliveredToAllSubscribers is a helper method to define mock.On call
//   - size int
func (_e *MockNetworkMetrics_Expecter) OnMessageDeliveredToAllSubscribers(size interface{}) *MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call {
	return &MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call{Call: _e.mock.On("OnMessageDeliveredToAllSubscribers", size)}
}

func (_c *MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call) Run(run func(size int)) *MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call) Return() *MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_OnMessageDeliveredToAllSubscribers_Call {
	_c.Run(run)
	return _c
}

// OnMessageDuplicate provides a mock function with given fields: size
func (_m *MockNetworkMetrics) OnMessageDuplicate(size int) {
	_m.Called(size)
}

// MockNetworkMetrics_OnMessageDuplicate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMessageDuplicate'
type MockNetworkMetrics_OnMessageDuplicate_Call struct {
	*mock.Call
}

// OnMessageDuplicate is a helper method to define mock.On call
//   - size int
func (_e *MockNetworkMetrics_Expecter) OnMessageDuplicate(size interface{}) *MockNetworkMetrics_OnMessageDuplicate_Call {
	return &MockNetworkMetrics_OnMessageDuplicate_Call{Call: _e.mock.On("OnMessageDuplicate", size)}
}

func (_c *MockNetworkMetrics_OnMessageDuplicate_Call) Run(run func(size int)) *MockNetworkMetrics_OnMessageDuplicate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnMessageDuplicate_Call) Return() *MockNetworkMetrics_OnMessageDuplicate_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnMessageDuplicate_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_OnMessageDuplicate_Call {
	_c.Run(run)
	return _c
}

// OnMessageEnteredValidation provides a mock function with given fields: size
func (_m *MockNetworkMetrics) OnMessageEnteredValidation(size int) {
	_m.Called(size)
}

// MockNetworkMetrics_OnMessageEnteredValidation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMessageEnteredValidation'
type MockNetworkMetrics_OnMessageEnteredValidation_Call struct {
	*mock.Call
}

// OnMessageEnteredValidation is a helper method to define mock.On call
//   - size int
func (_e *MockNetworkMetrics_Expecter) OnMessageEnteredValidation(size interface{}) *MockNetworkMetrics_OnMessageEnteredValidation_Call {
	return &MockNetworkMetrics_OnMessageEnteredValidation_Call{Call: _e.mock.On("OnMessageEnteredValidation", size)}
}

func (_c *MockNetworkMetrics_OnMessageEnteredValidation_Call) Run(run func(size int)) *MockNetworkMetrics_OnMessageEnteredValidation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnMessageEnteredValidation_Call) Return() *MockNetworkMetrics_OnMessageEnteredValidation_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnMessageEnteredValidation_Call) RunAndReturn(run func(int)) *MockNetworkMetrics_OnMessageEnteredValidation_Call {
	_c.Run(run)
	return _c
}

// OnMessageRejected provides a mock function with given fields: size, reason
func (_m *MockNetworkMetrics) OnMessageRejected(size int, reason string) {
	_m.Called(size, reason)
}

// MockNetworkMetrics_OnMessageRejected_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMessageRejected'
type MockNetworkMetrics_OnMessageRejected_Call struct {
	*mock.Call
}

// OnMessageRejected is a helper method to define mock.On call
//   - size int
//   - reason string
func (_e *MockNetworkMetrics_Expecter) OnMessageRejected(size interface{}, reason interface{}) *MockNetworkMetrics_OnMessageRejected_Call {
	return &MockNetworkMetrics_OnMessageRejected_Call{Call: _e.mock.On("OnMessageRejected", size, reason)}
}

func (_c *MockNetworkMetrics_OnMessageRejected_Call) Run(run func(size int, reason string)) *MockNetworkMetrics_OnMessageRejected_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnMessageRejected_Call) Return() *MockNetworkMetrics_OnMessageRejected_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnMessageRejected_Call) RunAndReturn(run func(int, string)) *MockNetworkMetrics_OnMessageRejected_Call {
	_c.Run(run)
	return _c
}

// OnMisbehaviorReported provides a mock function with given fields: channel, misbehaviorType
func (_m *MockNetworkMetrics) OnMisbehaviorReported(channel string, misbehaviorType string) {
	_m.Called(channel, misbehaviorType)
}

// MockNetworkMetrics_OnMisbehaviorReported_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMisbehaviorReported'
type MockNetworkMetrics_OnMisbehaviorReported_Call struct {
	*mock.Call
}

// OnMisbehaviorReported is a helper method to define mock.On call
//   - channel string
//   - misbehaviorType string
func (_e *MockNetworkMetrics_Expecter) OnMisbehaviorReported(channel interface{}, misbehaviorType interface{}) *MockNetworkMetrics_OnMisbehaviorReported_Call {
	return &MockNetworkMetrics_OnMisbehaviorReported_Call{Call: _e.mock.On("OnMisbehaviorReported", channel, misbehaviorType)}
}

func (_c *MockNetworkMetrics_OnMisbehaviorReported_Call) Run(run func(channel string, misbehaviorType string)) *MockNetworkMetrics_OnMisbehaviorReported_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnMisbehaviorReported_Call) Return() *MockNetworkMetrics_OnMisbehaviorReported_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnMisbehaviorReported_Call) RunAndReturn(run func(string, string)) *MockNetworkMetrics_OnMisbehaviorReported_Call {
	_c.Run(run)
	return _c
}

// OnOutboundRpcDropped provides a mock function with no fields
func (_m *MockNetworkMetrics) OnOutboundRpcDropped() {
	_m.Called()
}

// MockNetworkMetrics_OnOutboundRpcDropped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnOutboundRpcDropped'
type MockNetworkMetrics_OnOutboundRpcDropped_Call struct {
	*mock.Call
}

// OnOutboundRpcDropped is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnOutboundRpcDropped() *MockNetworkMetrics_OnOutboundRpcDropped_Call {
	return &MockNetworkMetrics_OnOutboundRpcDropped_Call{Call: _e.mock.On("OnOutboundRpcDropped")}
}

func (_c *MockNetworkMetrics_OnOutboundRpcDropped_Call) Run(run func()) *MockNetworkMetrics_OnOutboundRpcDropped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnOutboundRpcDropped_Call) Return() *MockNetworkMetrics_OnOutboundRpcDropped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnOutboundRpcDropped_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnOutboundRpcDropped_Call {
	_c.Run(run)
	return _c
}

// OnOverallPeerScoreUpdated provides a mock function with given fields: _a0
func (_m *MockNetworkMetrics) OnOverallPeerScoreUpdated(_a0 float64) {
	_m.Called(_a0)
}

// MockNetworkMetrics_OnOverallPeerScoreUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnOverallPeerScoreUpdated'
type MockNetworkMetrics_OnOverallPeerScoreUpdated_Call struct {
	*mock.Call
}

// OnOverallPeerScoreUpdated is a helper method to define mock.On call
//   - _a0 float64
func (_e *MockNetworkMetrics_Expecter) OnOverallPeerScoreUpdated(_a0 interface{}) *MockNetworkMetrics_OnOverallPeerScoreUpdated_Call {
	return &MockNetworkMetrics_OnOverallPeerScoreUpdated_Call{Call: _e.mock.On("OnOverallPeerScoreUpdated", _a0)}
}

func (_c *MockNetworkMetrics_OnOverallPeerScoreUpdated_Call) Run(run func(_a0 float64)) *MockNetworkMetrics_OnOverallPeerScoreUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnOverallPeerScoreUpdated_Call) Return() *MockNetworkMetrics_OnOverallPeerScoreUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnOverallPeerScoreUpdated_Call) RunAndReturn(run func(float64)) *MockNetworkMetrics_OnOverallPeerScoreUpdated_Call {
	_c.Run(run)
	return _c
}

// OnPeerAddedToProtocol provides a mock function with given fields: _a0
func (_m *MockNetworkMetrics) OnPeerAddedToProtocol(_a0 string) {
	_m.Called(_a0)
}

// MockNetworkMetrics_OnPeerAddedToProtocol_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerAddedToProtocol'
type MockNetworkMetrics_OnPeerAddedToProtocol_Call struct {
	*mock.Call
}

// OnPeerAddedToProtocol is a helper method to define mock.On call
//   - _a0 string
func (_e *MockNetworkMetrics_Expecter) OnPeerAddedToProtocol(_a0 interface{}) *MockNetworkMetrics_OnPeerAddedToProtocol_Call {
	return &MockNetworkMetrics_OnPeerAddedToProtocol_Call{Call: _e.mock.On("OnPeerAddedToProtocol", _a0)}
}

func (_c *MockNetworkMetrics_OnPeerAddedToProtocol_Call) Run(run func(_a0 string)) *MockNetworkMetrics_OnPeerAddedToProtocol_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPeerAddedToProtocol_Call) Return() *MockNetworkMetrics_OnPeerAddedToProtocol_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPeerAddedToProtocol_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_OnPeerAddedToProtocol_Call {
	_c.Run(run)
	return _c
}

// OnPeerDialFailure provides a mock function with given fields: duration, attempts
func (_m *MockNetworkMetrics) OnPeerDialFailure(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockNetworkMetrics_OnPeerDialFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerDialFailure'
type MockNetworkMetrics_OnPeerDialFailure_Call struct {
	*mock.Call
}

// OnPeerDialFailure is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockNetworkMetrics_Expecter) OnPeerDialFailure(duration interface{}, attempts interface{}) *MockNetworkMetrics_OnPeerDialFailure_Call {
	return &MockNetworkMetrics_OnPeerDialFailure_Call{Call: _e.mock.On("OnPeerDialFailure", duration, attempts)}
}

func (_c *MockNetworkMetrics_OnPeerDialFailure_Call) Run(run func(duration time.Duration, attempts int)) *MockNetworkMetrics_OnPeerDialFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPeerDialFailure_Call) Return() *MockNetworkMetrics_OnPeerDialFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPeerDialFailure_Call) RunAndReturn(run func(time.Duration, int)) *MockNetworkMetrics_OnPeerDialFailure_Call {
	_c.Run(run)
	return _c
}

// OnPeerDialed provides a mock function with given fields: duration, attempts
func (_m *MockNetworkMetrics) OnPeerDialed(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockNetworkMetrics_OnPeerDialed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerDialed'
type MockNetworkMetrics_OnPeerDialed_Call struct {
	*mock.Call
}

// OnPeerDialed is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockNetworkMetrics_Expecter) OnPeerDialed(duration interface{}, attempts interface{}) *MockNetworkMetrics_OnPeerDialed_Call {
	return &MockNetworkMetrics_OnPeerDialed_Call{Call: _e.mock.On("OnPeerDialed", duration, attempts)}
}

func (_c *MockNetworkMetrics_OnPeerDialed_Call) Run(run func(duration time.Duration, attempts int)) *MockNetworkMetrics_OnPeerDialed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPeerDialed_Call) Return() *MockNetworkMetrics_OnPeerDialed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPeerDialed_Call) RunAndReturn(run func(time.Duration, int)) *MockNetworkMetrics_OnPeerDialed_Call {
	_c.Run(run)
	return _c
}

// OnPeerGraftTopic provides a mock function with given fields: topic
func (_m *MockNetworkMetrics) OnPeerGraftTopic(topic string) {
	_m.Called(topic)
}

// MockNetworkMetrics_OnPeerGraftTopic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerGraftTopic'
type MockNetworkMetrics_OnPeerGraftTopic_Call struct {
	*mock.Call
}

// OnPeerGraftTopic is a helper method to define mock.On call
//   - topic string
func (_e *MockNetworkMetrics_Expecter) OnPeerGraftTopic(topic interface{}) *MockNetworkMetrics_OnPeerGraftTopic_Call {
	return &MockNetworkMetrics_OnPeerGraftTopic_Call{Call: _e.mock.On("OnPeerGraftTopic", topic)}
}

func (_c *MockNetworkMetrics_OnPeerGraftTopic_Call) Run(run func(topic string)) *MockNetworkMetrics_OnPeerGraftTopic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPeerGraftTopic_Call) Return() *MockNetworkMetrics_OnPeerGraftTopic_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPeerGraftTopic_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_OnPeerGraftTopic_Call {
	_c.Run(run)
	return _c
}

// OnPeerPruneTopic provides a mock function with given fields: topic
func (_m *MockNetworkMetrics) OnPeerPruneTopic(topic string) {
	_m.Called(topic)
}

// MockNetworkMetrics_OnPeerPruneTopic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerPruneTopic'
type MockNetworkMetrics_OnPeerPruneTopic_Call struct {
	*mock.Call
}

// OnPeerPruneTopic is a helper method to define mock.On call
//   - topic string
func (_e *MockNetworkMetrics_Expecter) OnPeerPruneTopic(topic interface{}) *MockNetworkMetrics_OnPeerPruneTopic_Call {
	return &MockNetworkMetrics_OnPeerPruneTopic_Call{Call: _e.mock.On("OnPeerPruneTopic", topic)}
}

func (_c *MockNetworkMetrics_OnPeerPruneTopic_Call) Run(run func(topic string)) *MockNetworkMetrics_OnPeerPruneTopic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPeerPruneTopic_Call) Return() *MockNetworkMetrics_OnPeerPruneTopic_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPeerPruneTopic_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_OnPeerPruneTopic_Call {
	_c.Run(run)
	return _c
}

// OnPeerRemovedFromProtocol provides a mock function with no fields
func (_m *MockNetworkMetrics) OnPeerRemovedFromProtocol() {
	_m.Called()
}

// MockNetworkMetrics_OnPeerRemovedFromProtocol_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerRemovedFromProtocol'
type MockNetworkMetrics_OnPeerRemovedFromProtocol_Call struct {
	*mock.Call
}

// OnPeerRemovedFromProtocol is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnPeerRemovedFromProtocol() *MockNetworkMetrics_OnPeerRemovedFromProtocol_Call {
	return &MockNetworkMetrics_OnPeerRemovedFromProtocol_Call{Call: _e.mock.On("OnPeerRemovedFromProtocol")}
}

func (_c *MockNetworkMetrics_OnPeerRemovedFromProtocol_Call) Run(run func()) *MockNetworkMetrics_OnPeerRemovedFromProtocol_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPeerRemovedFromProtocol_Call) Return() *MockNetworkMetrics_OnPeerRemovedFromProtocol_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPeerRemovedFromProtocol_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnPeerRemovedFromProtocol_Call {
	_c.Run(run)
	return _c
}

// OnPeerThrottled provides a mock function with no fields
func (_m *MockNetworkMetrics) OnPeerThrottled() {
	_m.Called()
}

// MockNetworkMetrics_OnPeerThrottled_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPeerThrottled'
type MockNetworkMetrics_OnPeerThrottled_Call struct {
	*mock.Call
}

// OnPeerThrottled is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnPeerThrottled() *MockNetworkMetrics_OnPeerThrottled_Call {
	return &MockNetworkMetrics_OnPeerThrottled_Call{Call: _e.mock.On("OnPeerThrottled")}
}

func (_c *MockNetworkMetrics_OnPeerThrottled_Call) Run(run func()) *MockNetworkMetrics_OnPeerThrottled_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPeerThrottled_Call) Return() *MockNetworkMetrics_OnPeerThrottled_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPeerThrottled_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnPeerThrottled_Call {
	_c.Run(run)
	return _c
}

// OnPruneDuplicateTopicIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnPruneDuplicateTopicIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPruneDuplicateTopicIdsExceedThreshold'
type MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnPruneDuplicateTopicIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnPruneDuplicateTopicIdsExceedThreshold() *MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call{Call: _e.mock.On("OnPruneDuplicateTopicIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnPruneDuplicateTopicIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnPruneInvalidTopicIdsExceedThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnPruneInvalidTopicIdsExceedThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPruneInvalidTopicIdsExceedThreshold'
type MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call struct {
	*mock.Call
}

// OnPruneInvalidTopicIdsExceedThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnPruneInvalidTopicIdsExceedThreshold() *MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call {
	return &MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call{Call: _e.mock.On("OnPruneInvalidTopicIdsExceedThreshold")}
}

func (_c *MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call) Run(run func()) *MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call) Return() *MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnPruneInvalidTopicIdsExceedThreshold_Call {
	_c.Run(run)
	return _c
}

// OnPruneMessageInspected provides a mock function with given fields: duplicateTopicIds, invalidTopicIds
func (_m *MockNetworkMetrics) OnPruneMessageInspected(duplicateTopicIds int, invalidTopicIds int) {
	_m.Called(duplicateTopicIds, invalidTopicIds)
}

// MockNetworkMetrics_OnPruneMessageInspected_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPruneMessageInspected'
type MockNetworkMetrics_OnPruneMessageInspected_Call struct {
	*mock.Call
}

// OnPruneMessageInspected is a helper method to define mock.On call
//   - duplicateTopicIds int
//   - invalidTopicIds int
func (_e *MockNetworkMetrics_Expecter) OnPruneMessageInspected(duplicateTopicIds interface{}, invalidTopicIds interface{}) *MockNetworkMetrics_OnPruneMessageInspected_Call {
	return &MockNetworkMetrics_OnPruneMessageInspected_Call{Call: _e.mock.On("OnPruneMessageInspected", duplicateTopicIds, invalidTopicIds)}
}

func (_c *MockNetworkMetrics_OnPruneMessageInspected_Call) Run(run func(duplicateTopicIds int, invalidTopicIds int)) *MockNetworkMetrics_OnPruneMessageInspected_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPruneMessageInspected_Call) Return() *MockNetworkMetrics_OnPruneMessageInspected_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPruneMessageInspected_Call) RunAndReturn(run func(int, int)) *MockNetworkMetrics_OnPruneMessageInspected_Call {
	_c.Run(run)
	return _c
}

// OnPublishMessageInspected provides a mock function with given fields: totalErrCount, invalidTopicIdsCount, invalidSubscriptionsCount, invalidSendersCount
func (_m *MockNetworkMetrics) OnPublishMessageInspected(totalErrCount int, invalidTopicIdsCount int, invalidSubscriptionsCount int, invalidSendersCount int) {
	_m.Called(totalErrCount, invalidTopicIdsCount, invalidSubscriptionsCount, invalidSendersCount)
}

// MockNetworkMetrics_OnPublishMessageInspected_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPublishMessageInspected'
type MockNetworkMetrics_OnPublishMessageInspected_Call struct {
	*mock.Call
}

// OnPublishMessageInspected is a helper method to define mock.On call
//   - totalErrCount int
//   - invalidTopicIdsCount int
//   - invalidSubscriptionsCount int
//   - invalidSendersCount int
func (_e *MockNetworkMetrics_Expecter) OnPublishMessageInspected(totalErrCount interface{}, invalidTopicIdsCount interface{}, invalidSubscriptionsCount interface{}, invalidSendersCount interface{}) *MockNetworkMetrics_OnPublishMessageInspected_Call {
	return &MockNetworkMetrics_OnPublishMessageInspected_Call{Call: _e.mock.On("OnPublishMessageInspected", totalErrCount, invalidTopicIdsCount, invalidSubscriptionsCount, invalidSendersCount)}
}

func (_c *MockNetworkMetrics_OnPublishMessageInspected_Call) Run(run func(totalErrCount int, invalidTopicIdsCount int, invalidSubscriptionsCount int, invalidSendersCount int)) *MockNetworkMetrics_OnPublishMessageInspected_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int), args[2].(int), args[3].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPublishMessageInspected_Call) Return() *MockNetworkMetrics_OnPublishMessageInspected_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPublishMessageInspected_Call) RunAndReturn(run func(int, int, int, int)) *MockNetworkMetrics_OnPublishMessageInspected_Call {
	_c.Run(run)
	return _c
}

// OnPublishMessagesInspectionErrorExceedsThreshold provides a mock function with no fields
func (_m *MockNetworkMetrics) OnPublishMessagesInspectionErrorExceedsThreshold() {
	_m.Called()
}

// MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnPublishMessagesInspectionErrorExceedsThreshold'
type MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call struct {
	*mock.Call
}

// OnPublishMessagesInspectionErrorExceedsThreshold is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnPublishMessagesInspectionErrorExceedsThreshold() *MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call {
	return &MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call{Call: _e.mock.On("OnPublishMessagesInspectionErrorExceedsThreshold")}
}

func (_c *MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call) Run(run func()) *MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call) Return() *MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnPublishMessagesInspectionErrorExceedsThreshold_Call {
	_c.Run(run)
	return _c
}

// OnRateLimitedPeer provides a mock function with given fields: pid, role, msgType, topic, reason
func (_m *MockNetworkMetrics) OnRateLimitedPeer(pid peer.ID, role string, msgType string, topic string, reason string) {
	_m.Called(pid, role, msgType, topic, reason)
}

// MockNetworkMetrics_OnRateLimitedPeer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnRateLimitedPeer'
type MockNetworkMetrics_OnRateLimitedPeer_Call struct {
	*mock.Call
}

// OnRateLimitedPeer is a helper method to define mock.On call
//   - pid peer.ID
//   - role string
//   - msgType string
//   - topic string
//   - reason string
func (_e *MockNetworkMetrics_Expecter) OnRateLimitedPeer(pid interface{}, role interface{}, msgType interface{}, topic interface{}, reason interface{}) *MockNetworkMetrics_OnRateLimitedPeer_Call {
	return &MockNetworkMetrics_OnRateLimitedPeer_Call{Call: _e.mock.On("OnRateLimitedPeer", pid, role, msgType, topic, reason)}
}

func (_c *MockNetworkMetrics_OnRateLimitedPeer_Call) Run(run func(pid peer.ID, role string, msgType string, topic string, reason string)) *MockNetworkMetrics_OnRateLimitedPeer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(peer.ID), args[1].(string), args[2].(string), args[3].(string), args[4].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnRateLimitedPeer_Call) Return() *MockNetworkMetrics_OnRateLimitedPeer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnRateLimitedPeer_Call) RunAndReturn(run func(peer.ID, string, string, string, string)) *MockNetworkMetrics_OnRateLimitedPeer_Call {
	_c.Run(run)
	return _c
}

// OnRpcReceived provides a mock function with given fields: msgCount, iHaveCount, iWantCount, graftCount, pruneCount
func (_m *MockNetworkMetrics) OnRpcReceived(msgCount int, iHaveCount int, iWantCount int, graftCount int, pruneCount int) {
	_m.Called(msgCount, iHaveCount, iWantCount, graftCount, pruneCount)
}

// MockNetworkMetrics_OnRpcReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnRpcReceived'
type MockNetworkMetrics_OnRpcReceived_Call struct {
	*mock.Call
}

// OnRpcReceived is a helper method to define mock.On call
//   - msgCount int
//   - iHaveCount int
//   - iWantCount int
//   - graftCount int
//   - pruneCount int
func (_e *MockNetworkMetrics_Expecter) OnRpcReceived(msgCount interface{}, iHaveCount interface{}, iWantCount interface{}, graftCount interface{}, pruneCount interface{}) *MockNetworkMetrics_OnRpcReceived_Call {
	return &MockNetworkMetrics_OnRpcReceived_Call{Call: _e.mock.On("OnRpcReceived", msgCount, iHaveCount, iWantCount, graftCount, pruneCount)}
}

func (_c *MockNetworkMetrics_OnRpcReceived_Call) Run(run func(msgCount int, iHaveCount int, iWantCount int, graftCount int, pruneCount int)) *MockNetworkMetrics_OnRpcReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int), args[2].(int), args[3].(int), args[4].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnRpcReceived_Call) Return() *MockNetworkMetrics_OnRpcReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnRpcReceived_Call) RunAndReturn(run func(int, int, int, int, int)) *MockNetworkMetrics_OnRpcReceived_Call {
	_c.Run(run)
	return _c
}

// OnRpcRejectedFromUnknownSender provides a mock function with no fields
func (_m *MockNetworkMetrics) OnRpcRejectedFromUnknownSender() {
	_m.Called()
}

// MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnRpcRejectedFromUnknownSender'
type MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call struct {
	*mock.Call
}

// OnRpcRejectedFromUnknownSender is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnRpcRejectedFromUnknownSender() *MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call {
	return &MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call{Call: _e.mock.On("OnRpcRejectedFromUnknownSender")}
}

func (_c *MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call) Run(run func()) *MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call) Return() *MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnRpcRejectedFromUnknownSender_Call {
	_c.Run(run)
	return _c
}

// OnRpcSent provides a mock function with given fields: msgCount, iHaveCount, iWantCount, graftCount, pruneCount
func (_m *MockNetworkMetrics) OnRpcSent(msgCount int, iHaveCount int, iWantCount int, graftCount int, pruneCount int) {
	_m.Called(msgCount, iHaveCount, iWantCount, graftCount, pruneCount)
}

// MockNetworkMetrics_OnRpcSent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnRpcSent'
type MockNetworkMetrics_OnRpcSent_Call struct {
	*mock.Call
}

// OnRpcSent is a helper method to define mock.On call
//   - msgCount int
//   - iHaveCount int
//   - iWantCount int
//   - graftCount int
//   - pruneCount int
func (_e *MockNetworkMetrics_Expecter) OnRpcSent(msgCount interface{}, iHaveCount interface{}, iWantCount interface{}, graftCount interface{}, pruneCount interface{}) *MockNetworkMetrics_OnRpcSent_Call {
	return &MockNetworkMetrics_OnRpcSent_Call{Call: _e.mock.On("OnRpcSent", msgCount, iHaveCount, iWantCount, graftCount, pruneCount)}
}

func (_c *MockNetworkMetrics_OnRpcSent_Call) Run(run func(msgCount int, iHaveCount int, iWantCount int, graftCount int, pruneCount int)) *MockNetworkMetrics_OnRpcSent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(int), args[2].(int), args[3].(int), args[4].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnRpcSent_Call) Return() *MockNetworkMetrics_OnRpcSent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnRpcSent_Call) RunAndReturn(run func(int, int, int, int, int)) *MockNetworkMetrics_OnRpcSent_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreated provides a mock function with given fields: duration, attempts
func (_m *MockNetworkMetrics) OnStreamCreated(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockNetworkMetrics_OnStreamCreated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreated'
type MockNetworkMetrics_OnStreamCreated_Call struct {
	*mock.Call
}

// OnStreamCreated is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockNetworkMetrics_Expecter) OnStreamCreated(duration interface{}, attempts interface{}) *MockNetworkMetrics_OnStreamCreated_Call {
	return &MockNetworkMetrics_OnStreamCreated_Call{Call: _e.mock.On("OnStreamCreated", duration, attempts)}
}

func (_c *MockNetworkMetrics_OnStreamCreated_Call) Run(run func(duration time.Duration, attempts int)) *MockNetworkMetrics_OnStreamCreated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreated_Call) Return() *MockNetworkMetrics_OnStreamCreated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreated_Call) RunAndReturn(run func(time.Duration, int)) *MockNetworkMetrics_OnStreamCreated_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreationFailure provides a mock function with given fields: duration, attempts
func (_m *MockNetworkMetrics) OnStreamCreationFailure(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockNetworkMetrics_OnStreamCreationFailure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreationFailure'
type MockNetworkMetrics_OnStreamCreationFailure_Call struct {
	*mock.Call
}

// OnStreamCreationFailure is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockNetworkMetrics_Expecter) OnStreamCreationFailure(duration interface{}, attempts interface{}) *MockNetworkMetrics_OnStreamCreationFailure_Call {
	return &MockNetworkMetrics_OnStreamCreationFailure_Call{Call: _e.mock.On("OnStreamCreationFailure", duration, attempts)}
}

func (_c *MockNetworkMetrics_OnStreamCreationFailure_Call) Run(run func(duration time.Duration, attempts int)) *MockNetworkMetrics_OnStreamCreationFailure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreationFailure_Call) Return() *MockNetworkMetrics_OnStreamCreationFailure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreationFailure_Call) RunAndReturn(run func(time.Duration, int)) *MockNetworkMetrics_OnStreamCreationFailure_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreationRetryBudgetResetToDefault provides a mock function with no fields
func (_m *MockNetworkMetrics) OnStreamCreationRetryBudgetResetToDefault() {
	_m.Called()
}

// MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreationRetryBudgetResetToDefault'
type MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call struct {
	*mock.Call
}

// OnStreamCreationRetryBudgetResetToDefault is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnStreamCreationRetryBudgetResetToDefault() *MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	return &MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call{Call: _e.mock.On("OnStreamCreationRetryBudgetResetToDefault")}
}

func (_c *MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call) Run(run func()) *MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call) Return() *MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnStreamCreationRetryBudgetResetToDefault_Call {
	_c.Run(run)
	return _c
}

// OnStreamCreationRetryBudgetUpdated provides a mock function with given fields: budget
func (_m *MockNetworkMetrics) OnStreamCreationRetryBudgetUpdated(budget uint64) {
	_m.Called(budget)
}

// MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamCreationRetryBudgetUpdated'
type MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call struct {
	*mock.Call
}

// OnStreamCreationRetryBudgetUpdated is a helper method to define mock.On call
//   - budget uint64
func (_e *MockNetworkMetrics_Expecter) OnStreamCreationRetryBudgetUpdated(budget interface{}) *MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	return &MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call{Call: _e.mock.On("OnStreamCreationRetryBudgetUpdated", budget)}
}

func (_c *MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call) Run(run func(budget uint64)) *MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call) Return() *MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call) RunAndReturn(run func(uint64)) *MockNetworkMetrics_OnStreamCreationRetryBudgetUpdated_Call {
	_c.Run(run)
	return _c
}

// OnStreamEstablished provides a mock function with given fields: duration, attempts
func (_m *MockNetworkMetrics) OnStreamEstablished(duration time.Duration, attempts int) {
	_m.Called(duration, attempts)
}

// MockNetworkMetrics_OnStreamEstablished_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnStreamEstablished'
type MockNetworkMetrics_OnStreamEstablished_Call struct {
	*mock.Call
}

// OnStreamEstablished is a helper method to define mock.On call
//   - duration time.Duration
//   - attempts int
func (_e *MockNetworkMetrics_Expecter) OnStreamEstablished(duration interface{}, attempts interface{}) *MockNetworkMetrics_OnStreamEstablished_Call {
	return &MockNetworkMetrics_OnStreamEstablished_Call{Call: _e.mock.On("OnStreamEstablished", duration, attempts)}
}

func (_c *MockNetworkMetrics_OnStreamEstablished_Call) Run(run func(duration time.Duration, attempts int)) *MockNetworkMetrics_OnStreamEstablished_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnStreamEstablished_Call) Return() *MockNetworkMetrics_OnStreamEstablished_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnStreamEstablished_Call) RunAndReturn(run func(time.Duration, int)) *MockNetworkMetrics_OnStreamEstablished_Call {
	_c.Run(run)
	return _c
}

// OnTimeInMeshUpdated provides a mock function with given fields: _a0, _a1
func (_m *MockNetworkMetrics) OnTimeInMeshUpdated(_a0 channels.Topic, _a1 time.Duration) {
	_m.Called(_a0, _a1)
}

// MockNetworkMetrics_OnTimeInMeshUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnTimeInMeshUpdated'
type MockNetworkMetrics_OnTimeInMeshUpdated_Call struct {
	*mock.Call
}

// OnTimeInMeshUpdated is a helper method to define mock.On call
//   - _a0 channels.Topic
//   - _a1 time.Duration
func (_e *MockNetworkMetrics_Expecter) OnTimeInMeshUpdated(_a0 interface{}, _a1 interface{}) *MockNetworkMetrics_OnTimeInMeshUpdated_Call {
	return &MockNetworkMetrics_OnTimeInMeshUpdated_Call{Call: _e.mock.On("OnTimeInMeshUpdated", _a0, _a1)}
}

func (_c *MockNetworkMetrics_OnTimeInMeshUpdated_Call) Run(run func(_a0 channels.Topic, _a1 time.Duration)) *MockNetworkMetrics_OnTimeInMeshUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(channels.Topic), args[1].(time.Duration))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnTimeInMeshUpdated_Call) Return() *MockNetworkMetrics_OnTimeInMeshUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnTimeInMeshUpdated_Call) RunAndReturn(run func(channels.Topic, time.Duration)) *MockNetworkMetrics_OnTimeInMeshUpdated_Call {
	_c.Run(run)
	return _c
}

// OnUnauthorizedMessage provides a mock function with given fields: role, msgType, topic, offense
func (_m *MockNetworkMetrics) OnUnauthorizedMessage(role string, msgType string, topic string, offense string) {
	_m.Called(role, msgType, topic, offense)
}

// MockNetworkMetrics_OnUnauthorizedMessage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUnauthorizedMessage'
type MockNetworkMetrics_OnUnauthorizedMessage_Call struct {
	*mock.Call
}

// OnUnauthorizedMessage is a helper method to define mock.On call
//   - role string
//   - msgType string
//   - topic string
//   - offense string
func (_e *MockNetworkMetrics_Expecter) OnUnauthorizedMessage(role interface{}, msgType interface{}, topic interface{}, offense interface{}) *MockNetworkMetrics_OnUnauthorizedMessage_Call {
	return &MockNetworkMetrics_OnUnauthorizedMessage_Call{Call: _e.mock.On("OnUnauthorizedMessage", role, msgType, topic, offense)}
}

func (_c *MockNetworkMetrics_OnUnauthorizedMessage_Call) Run(run func(role string, msgType string, topic string, offense string)) *MockNetworkMetrics_OnUnauthorizedMessage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OnUnauthorizedMessage_Call) Return() *MockNetworkMetrics_OnUnauthorizedMessage_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnUnauthorizedMessage_Call) RunAndReturn(run func(string, string, string, string)) *MockNetworkMetrics_OnUnauthorizedMessage_Call {
	_c.Run(run)
	return _c
}

// OnUndeliveredMessage provides a mock function with no fields
func (_m *MockNetworkMetrics) OnUndeliveredMessage() {
	_m.Called()
}

// MockNetworkMetrics_OnUndeliveredMessage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUndeliveredMessage'
type MockNetworkMetrics_OnUndeliveredMessage_Call struct {
	*mock.Call
}

// OnUndeliveredMessage is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnUndeliveredMessage() *MockNetworkMetrics_OnUndeliveredMessage_Call {
	return &MockNetworkMetrics_OnUndeliveredMessage_Call{Call: _e.mock.On("OnUndeliveredMessage")}
}

func (_c *MockNetworkMetrics_OnUndeliveredMessage_Call) Run(run func()) *MockNetworkMetrics_OnUndeliveredMessage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnUndeliveredMessage_Call) Return() *MockNetworkMetrics_OnUndeliveredMessage_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnUndeliveredMessage_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnUndeliveredMessage_Call {
	_c.Run(run)
	return _c
}

// OnUnstakedPeerInspectionFailed provides a mock function with no fields
func (_m *MockNetworkMetrics) OnUnstakedPeerInspectionFailed() {
	_m.Called()
}

// MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUnstakedPeerInspectionFailed'
type MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call struct {
	*mock.Call
}

// OnUnstakedPeerInspectionFailed is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnUnstakedPeerInspectionFailed() *MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call {
	return &MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call{Call: _e.mock.On("OnUnstakedPeerInspectionFailed")}
}

func (_c *MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call) Run(run func()) *MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call) Return() *MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnUnstakedPeerInspectionFailed_Call {
	_c.Run(run)
	return _c
}

// OnViolationReportSkipped provides a mock function with no fields
func (_m *MockNetworkMetrics) OnViolationReportSkipped() {
	_m.Called()
}

// MockNetworkMetrics_OnViolationReportSkipped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnViolationReportSkipped'
type MockNetworkMetrics_OnViolationReportSkipped_Call struct {
	*mock.Call
}

// OnViolationReportSkipped is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) OnViolationReportSkipped() *MockNetworkMetrics_OnViolationReportSkipped_Call {
	return &MockNetworkMetrics_OnViolationReportSkipped_Call{Call: _e.mock.On("OnViolationReportSkipped")}
}

func (_c *MockNetworkMetrics_OnViolationReportSkipped_Call) Run(run func()) *MockNetworkMetrics_OnViolationReportSkipped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_OnViolationReportSkipped_Call) Return() *MockNetworkMetrics_OnViolationReportSkipped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OnViolationReportSkipped_Call) RunAndReturn(run func()) *MockNetworkMetrics_OnViolationReportSkipped_Call {
	_c.Run(run)
	return _c
}

// OutboundConnections provides a mock function with given fields: connectionCount
func (_m *MockNetworkMetrics) OutboundConnections(connectionCount uint) {
	_m.Called(connectionCount)
}

// MockNetworkMetrics_OutboundConnections_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OutboundConnections'
type MockNetworkMetrics_OutboundConnections_Call struct {
	*mock.Call
}

// OutboundConnections is a helper method to define mock.On call
//   - connectionCount uint
func (_e *MockNetworkMetrics_Expecter) OutboundConnections(connectionCount interface{}) *MockNetworkMetrics_OutboundConnections_Call {
	return &MockNetworkMetrics_OutboundConnections_Call{Call: _e.mock.On("OutboundConnections", connectionCount)}
}

func (_c *MockNetworkMetrics_OutboundConnections_Call) Run(run func(connectionCount uint)) *MockNetworkMetrics_OutboundConnections_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint))
	})
	return _c
}

func (_c *MockNetworkMetrics_OutboundConnections_Call) Return() *MockNetworkMetrics_OutboundConnections_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OutboundConnections_Call) RunAndReturn(run func(uint)) *MockNetworkMetrics_OutboundConnections_Call {
	_c.Run(run)
	return _c
}

// OutboundMessageSent provides a mock function with given fields: sizeBytes, topic, _a2, messageType
func (_m *MockNetworkMetrics) OutboundMessageSent(sizeBytes int, topic string, _a2 string, messageType string) {
	_m.Called(sizeBytes, topic, _a2, messageType)
}

// MockNetworkMetrics_OutboundMessageSent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OutboundMessageSent'
type MockNetworkMetrics_OutboundMessageSent_Call struct {
	*mock.Call
}

// OutboundMessageSent is a helper method to define mock.On call
//   - sizeBytes int
//   - topic string
//   - _a2 string
//   - messageType string
func (_e *MockNetworkMetrics_Expecter) OutboundMessageSent(sizeBytes interface{}, topic interface{}, _a2 interface{}, messageType interface{}) *MockNetworkMetrics_OutboundMessageSent_Call {
	return &MockNetworkMetrics_OutboundMessageSent_Call{Call: _e.mock.On("OutboundMessageSent", sizeBytes, topic, _a2, messageType)}
}

func (_c *MockNetworkMetrics_OutboundMessageSent_Call) Run(run func(sizeBytes int, topic string, _a2 string, messageType string)) *MockNetworkMetrics_OutboundMessageSent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_OutboundMessageSent_Call) Return() *MockNetworkMetrics_OutboundMessageSent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_OutboundMessageSent_Call) RunAndReturn(run func(int, string, string, string)) *MockNetworkMetrics_OutboundMessageSent_Call {
	_c.Run(run)
	return _c
}

// QueueDuration provides a mock function with given fields: duration, priority
func (_m *MockNetworkMetrics) QueueDuration(duration time.Duration, priority int) {
	_m.Called(duration, priority)
}

// MockNetworkMetrics_QueueDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'QueueDuration'
type MockNetworkMetrics_QueueDuration_Call struct {
	*mock.Call
}

// QueueDuration is a helper method to define mock.On call
//   - duration time.Duration
//   - priority int
func (_e *MockNetworkMetrics_Expecter) QueueDuration(duration interface{}, priority interface{}) *MockNetworkMetrics_QueueDuration_Call {
	return &MockNetworkMetrics_QueueDuration_Call{Call: _e.mock.On("QueueDuration", duration, priority)}
}

func (_c *MockNetworkMetrics_QueueDuration_Call) Run(run func(duration time.Duration, priority int)) *MockNetworkMetrics_QueueDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockNetworkMetrics_QueueDuration_Call) Return() *MockNetworkMetrics_QueueDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_QueueDuration_Call) RunAndReturn(run func(time.Duration, int)) *MockNetworkMetrics_QueueDuration_Call {
	_c.Run(run)
	return _c
}

// RoutingTablePeerAdded provides a mock function with no fields
func (_m *MockNetworkMetrics) RoutingTablePeerAdded() {
	_m.Called()
}

// MockNetworkMetrics_RoutingTablePeerAdded_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RoutingTablePeerAdded'
type MockNetworkMetrics_RoutingTablePeerAdded_Call struct {
	*mock.Call
}

// RoutingTablePeerAdded is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) RoutingTablePeerAdded() *MockNetworkMetrics_RoutingTablePeerAdded_Call {
	return &MockNetworkMetrics_RoutingTablePeerAdded_Call{Call: _e.mock.On("RoutingTablePeerAdded")}
}

func (_c *MockNetworkMetrics_RoutingTablePeerAdded_Call) Run(run func()) *MockNetworkMetrics_RoutingTablePeerAdded_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_RoutingTablePeerAdded_Call) Return() *MockNetworkMetrics_RoutingTablePeerAdded_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_RoutingTablePeerAdded_Call) RunAndReturn(run func()) *MockNetworkMetrics_RoutingTablePeerAdded_Call {
	_c.Run(run)
	return _c
}

// RoutingTablePeerRemoved provides a mock function with no fields
func (_m *MockNetworkMetrics) RoutingTablePeerRemoved() {
	_m.Called()
}

// MockNetworkMetrics_RoutingTablePeerRemoved_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RoutingTablePeerRemoved'
type MockNetworkMetrics_RoutingTablePeerRemoved_Call struct {
	*mock.Call
}

// RoutingTablePeerRemoved is a helper method to define mock.On call
func (_e *MockNetworkMetrics_Expecter) RoutingTablePeerRemoved() *MockNetworkMetrics_RoutingTablePeerRemoved_Call {
	return &MockNetworkMetrics_RoutingTablePeerRemoved_Call{Call: _e.mock.On("RoutingTablePeerRemoved")}
}

func (_c *MockNetworkMetrics_RoutingTablePeerRemoved_Call) Run(run func()) *MockNetworkMetrics_RoutingTablePeerRemoved_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkMetrics_RoutingTablePeerRemoved_Call) Return() *MockNetworkMetrics_RoutingTablePeerRemoved_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_RoutingTablePeerRemoved_Call) RunAndReturn(run func()) *MockNetworkMetrics_RoutingTablePeerRemoved_Call {
	_c.Run(run)
	return _c
}

// SetWarningStateCount provides a mock function with given fields: _a0
func (_m *MockNetworkMetrics) SetWarningStateCount(_a0 uint) {
	_m.Called(_a0)
}

// MockNetworkMetrics_SetWarningStateCount_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetWarningStateCount'
type MockNetworkMetrics_SetWarningStateCount_Call struct {
	*mock.Call
}

// SetWarningStateCount is a helper method to define mock.On call
//   - _a0 uint
func (_e *MockNetworkMetrics_Expecter) SetWarningStateCount(_a0 interface{}) *MockNetworkMetrics_SetWarningStateCount_Call {
	return &MockNetworkMetrics_SetWarningStateCount_Call{Call: _e.mock.On("SetWarningStateCount", _a0)}
}

func (_c *MockNetworkMetrics_SetWarningStateCount_Call) Run(run func(_a0 uint)) *MockNetworkMetrics_SetWarningStateCount_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint))
	})
	return _c
}

func (_c *MockNetworkMetrics_SetWarningStateCount_Call) Return() *MockNetworkMetrics_SetWarningStateCount_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_SetWarningStateCount_Call) RunAndReturn(run func(uint)) *MockNetworkMetrics_SetWarningStateCount_Call {
	_c.Run(run)
	return _c
}

// UnicastMessageSendingCompleted provides a mock function with given fields: topic
func (_m *MockNetworkMetrics) UnicastMessageSendingCompleted(topic string) {
	_m.Called(topic)
}

// MockNetworkMetrics_UnicastMessageSendingCompleted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnicastMessageSendingCompleted'
type MockNetworkMetrics_UnicastMessageSendingCompleted_Call struct {
	*mock.Call
}

// UnicastMessageSendingCompleted is a helper method to define mock.On call
//   - topic string
func (_e *MockNetworkMetrics_Expecter) UnicastMessageSendingCompleted(topic interface{}) *MockNetworkMetrics_UnicastMessageSendingCompleted_Call {
	return &MockNetworkMetrics_UnicastMessageSendingCompleted_Call{Call: _e.mock.On("UnicastMessageSendingCompleted", topic)}
}

func (_c *MockNetworkMetrics_UnicastMessageSendingCompleted_Call) Run(run func(topic string)) *MockNetworkMetrics_UnicastMessageSendingCompleted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_UnicastMessageSendingCompleted_Call) Return() *MockNetworkMetrics_UnicastMessageSendingCompleted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_UnicastMessageSendingCompleted_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_UnicastMessageSendingCompleted_Call {
	_c.Run(run)
	return _c
}

// UnicastMessageSendingStarted provides a mock function with given fields: topic
func (_m *MockNetworkMetrics) UnicastMessageSendingStarted(topic string) {
	_m.Called(topic)
}

// MockNetworkMetrics_UnicastMessageSendingStarted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnicastMessageSendingStarted'
type MockNetworkMetrics_UnicastMessageSendingStarted_Call struct {
	*mock.Call
}

// UnicastMessageSendingStarted is a helper method to define mock.On call
//   - topic string
func (_e *MockNetworkMetrics_Expecter) UnicastMessageSendingStarted(topic interface{}) *MockNetworkMetrics_UnicastMessageSendingStarted_Call {
	return &MockNetworkMetrics_UnicastMessageSendingStarted_Call{Call: _e.mock.On("UnicastMessageSendingStarted", topic)}
}

func (_c *MockNetworkMetrics_UnicastMessageSendingStarted_Call) Run(run func(topic string)) *MockNetworkMetrics_UnicastMessageSendingStarted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockNetworkMetrics_UnicastMessageSendingStarted_Call) Return() *MockNetworkMetrics_UnicastMessageSendingStarted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkMetrics_UnicastMessageSendingStarted_Call) RunAndReturn(run func(string)) *MockNetworkMetrics_UnicastMessageSendingStarted_Call {
	_c.Run(run)
	return _c
}

// NewMockNetworkMetrics creates a new instance of MockNetworkMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockNetworkMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockNetworkMetrics {
	mock := &MockNetworkMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
