// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockConsensusMetrics is an autogenerated mock type for the ConsensusMetrics type
type MockConsensusMetrics struct {
	mock.Mock
}

type MockConsensusMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConsensusMetrics) EXPECT() *MockConsensusMetrics_Expecter {
	return &MockConsensusMetrics_Expecter{mock: &_m.Mock}
}

// CheckSealingDuration provides a mock function with given fields: duration
func (_m *MockConsensusMetrics) CheckSealingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockConsensusMetrics_CheckSealingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckSealingDuration'
type MockConsensusMetrics_CheckSealingDuration_Call struct {
	*mock.Call
}

// CheckSealingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockConsensusMetrics_Expecter) CheckSealingDuration(duration interface{}) *MockConsensusMetrics_CheckSealingDuration_Call {
	return &MockConsensusMetrics_CheckSealingDuration_Call{Call: _e.mock.On("CheckSealingDuration", duration)}
}

func (_c *MockConsensusMetrics_CheckSealingDuration_Call) Run(run func(duration time.Duration)) *MockConsensusMetrics_CheckSealingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockConsensusMetrics_CheckSealingDuration_Call) Return() *MockConsensusMetrics_CheckSealingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_CheckSealingDuration_Call) RunAndReturn(run func(time.Duration)) *MockConsensusMetrics_CheckSealingDuration_Call {
	_c.Run(run)
	return _c
}

// EmergencySeal provides a mock function with no fields
func (_m *MockConsensusMetrics) EmergencySeal() {
	_m.Called()
}

// MockConsensusMetrics_EmergencySeal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EmergencySeal'
type MockConsensusMetrics_EmergencySeal_Call struct {
	*mock.Call
}

// EmergencySeal is a helper method to define mock.On call
func (_e *MockConsensusMetrics_Expecter) EmergencySeal() *MockConsensusMetrics_EmergencySeal_Call {
	return &MockConsensusMetrics_EmergencySeal_Call{Call: _e.mock.On("EmergencySeal")}
}

func (_c *MockConsensusMetrics_EmergencySeal_Call) Run(run func()) *MockConsensusMetrics_EmergencySeal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockConsensusMetrics_EmergencySeal_Call) Return() *MockConsensusMetrics_EmergencySeal_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_EmergencySeal_Call) RunAndReturn(run func()) *MockConsensusMetrics_EmergencySeal_Call {
	_c.Run(run)
	return _c
}

// FinishBlockToSeal provides a mock function with given fields: blockID
func (_m *MockConsensusMetrics) FinishBlockToSeal(blockID flow.Identifier) {
	_m.Called(blockID)
}

// MockConsensusMetrics_FinishBlockToSeal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FinishBlockToSeal'
type MockConsensusMetrics_FinishBlockToSeal_Call struct {
	*mock.Call
}

// FinishBlockToSeal is a helper method to define mock.On call
//   - blockID flow.Identifier
func (_e *MockConsensusMetrics_Expecter) FinishBlockToSeal(blockID interface{}) *MockConsensusMetrics_FinishBlockToSeal_Call {
	return &MockConsensusMetrics_FinishBlockToSeal_Call{Call: _e.mock.On("FinishBlockToSeal", blockID)}
}

func (_c *MockConsensusMetrics_FinishBlockToSeal_Call) Run(run func(blockID flow.Identifier)) *MockConsensusMetrics_FinishBlockToSeal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier))
	})
	return _c
}

func (_c *MockConsensusMetrics_FinishBlockToSeal_Call) Return() *MockConsensusMetrics_FinishBlockToSeal_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_FinishBlockToSeal_Call) RunAndReturn(run func(flow.Identifier)) *MockConsensusMetrics_FinishBlockToSeal_Call {
	_c.Run(run)
	return _c
}

// FinishCollectionToFinalized provides a mock function with given fields: collectionID
func (_m *MockConsensusMetrics) FinishCollectionToFinalized(collectionID flow.Identifier) {
	_m.Called(collectionID)
}

// MockConsensusMetrics_FinishCollectionToFinalized_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FinishCollectionToFinalized'
type MockConsensusMetrics_FinishCollectionToFinalized_Call struct {
	*mock.Call
}

// FinishCollectionToFinalized is a helper method to define mock.On call
//   - collectionID flow.Identifier
func (_e *MockConsensusMetrics_Expecter) FinishCollectionToFinalized(collectionID interface{}) *MockConsensusMetrics_FinishCollectionToFinalized_Call {
	return &MockConsensusMetrics_FinishCollectionToFinalized_Call{Call: _e.mock.On("FinishCollectionToFinalized", collectionID)}
}

func (_c *MockConsensusMetrics_FinishCollectionToFinalized_Call) Run(run func(collectionID flow.Identifier)) *MockConsensusMetrics_FinishCollectionToFinalized_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier))
	})
	return _c
}

func (_c *MockConsensusMetrics_FinishCollectionToFinalized_Call) Return() *MockConsensusMetrics_FinishCollectionToFinalized_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_FinishCollectionToFinalized_Call) RunAndReturn(run func(flow.Identifier)) *MockConsensusMetrics_FinishCollectionToFinalized_Call {
	_c.Run(run)
	return _c
}

// OnApprovalProcessingDuration provides a mock function with given fields: duration
func (_m *MockConsensusMetrics) OnApprovalProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockConsensusMetrics_OnApprovalProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnApprovalProcessingDuration'
type MockConsensusMetrics_OnApprovalProcessingDuration_Call struct {
	*mock.Call
}

// OnApprovalProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockConsensusMetrics_Expecter) OnApprovalProcessingDuration(duration interface{}) *MockConsensusMetrics_OnApprovalProcessingDuration_Call {
	return &MockConsensusMetrics_OnApprovalProcessingDuration_Call{Call: _e.mock.On("OnApprovalProcessingDuration", duration)}
}

func (_c *MockConsensusMetrics_OnApprovalProcessingDuration_Call) Run(run func(duration time.Duration)) *MockConsensusMetrics_OnApprovalProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockConsensusMetrics_OnApprovalProcessingDuration_Call) Return() *MockConsensusMetrics_OnApprovalProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_OnApprovalProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockConsensusMetrics_OnApprovalProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// OnReceiptProcessingDuration provides a mock function with given fields: duration
func (_m *MockConsensusMetrics) OnReceiptProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockConsensusMetrics_OnReceiptProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnReceiptProcessingDuration'
type MockConsensusMetrics_OnReceiptProcessingDuration_Call struct {
	*mock.Call
}

// OnReceiptProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockConsensusMetrics_Expecter) OnReceiptProcessingDuration(duration interface{}) *MockConsensusMetrics_OnReceiptProcessingDuration_Call {
	return &MockConsensusMetrics_OnReceiptProcessingDuration_Call{Call: _e.mock.On("OnReceiptProcessingDuration", duration)}
}

func (_c *MockConsensusMetrics_OnReceiptProcessingDuration_Call) Run(run func(duration time.Duration)) *MockConsensusMetrics_OnReceiptProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockConsensusMetrics_OnReceiptProcessingDuration_Call) Return() *MockConsensusMetrics_OnReceiptProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_OnReceiptProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockConsensusMetrics_OnReceiptProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// StartBlockToSeal provides a mock function with given fields: blockID
func (_m *MockConsensusMetrics) StartBlockToSeal(blockID flow.Identifier) {
	_m.Called(blockID)
}

// MockConsensusMetrics_StartBlockToSeal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'StartBlockToSeal'
type MockConsensusMetrics_StartBlockToSeal_Call struct {
	*mock.Call
}

// StartBlockToSeal is a helper method to define mock.On call
//   - blockID flow.Identifier
func (_e *MockConsensusMetrics_Expecter) StartBlockToSeal(blockID interface{}) *MockConsensusMetrics_StartBlockToSeal_Call {
	return &MockConsensusMetrics_StartBlockToSeal_Call{Call: _e.mock.On("StartBlockToSeal", blockID)}
}

func (_c *MockConsensusMetrics_StartBlockToSeal_Call) Run(run func(blockID flow.Identifier)) *MockConsensusMetrics_StartBlockToSeal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier))
	})
	return _c
}

func (_c *MockConsensusMetrics_StartBlockToSeal_Call) Return() *MockConsensusMetrics_StartBlockToSeal_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_StartBlockToSeal_Call) RunAndReturn(run func(flow.Identifier)) *MockConsensusMetrics_StartBlockToSeal_Call {
	_c.Run(run)
	return _c
}

// StartCollectionToFinalized provides a mock function with given fields: collectionID
func (_m *MockConsensusMetrics) StartCollectionToFinalized(collectionID flow.Identifier) {
	_m.Called(collectionID)
}

// MockConsensusMetrics_StartCollectionToFinalized_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'StartCollectionToFinalized'
type MockConsensusMetrics_StartCollectionToFinalized_Call struct {
	*mock.Call
}

// StartCollectionToFinalized is a helper method to define mock.On call
//   - collectionID flow.Identifier
func (_e *MockConsensusMetrics_Expecter) StartCollectionToFinalized(collectionID interface{}) *MockConsensusMetrics_StartCollectionToFinalized_Call {
	return &MockConsensusMetrics_StartCollectionToFinalized_Call{Call: _e.mock.On("StartCollectionToFinalized", collectionID)}
}

func (_c *MockConsensusMetrics_StartCollectionToFinalized_Call) Run(run func(collectionID flow.Identifier)) *MockConsensusMetrics_StartCollectionToFinalized_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier))
	})
	return _c
}

func (_c *MockConsensusMetrics_StartCollectionToFinalized_Call) Return() *MockConsensusMetrics_StartCollectionToFinalized_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConsensusMetrics_StartCollectionToFinalized_Call) RunAndReturn(run func(flow.Identifier)) *MockConsensusMetrics_StartCollectionToFinalized_Call {
	_c.Run(run)
	return _c
}

// NewMockConsensusMetrics creates a new instance of MockConsensusMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConsensusMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConsensusMetrics {
	mock := &MockConsensusMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
