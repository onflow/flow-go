// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	verification "github.com/onflow/flow-go/model/verification"
)

// MockChunkVerifier is an autogenerated mock type for the ChunkVerifier type
type MockChunkVerifier struct {
	mock.Mock
}

type MockChunkVerifier_Expecter struct {
	mock *mock.Mock
}

func (_m *MockChunkVerifier) EXPECT() *MockChunkVerifier_Expecter {
	return &MockChunkVerifier_Expecter{mock: &_m.Mock}
}

// Verify provides a mock function with given fields: ch
func (_m *MockChunkVerifier) Verify(ch *verification.VerifiableChunkData) ([]byte, error) {
	ret := _m.Called(ch)

	if len(ret) == 0 {
		panic("no return value specified for Verify")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func(*verification.VerifiableChunkData) ([]byte, error)); ok {
		return rf(ch)
	}
	if rf, ok := ret.Get(0).(func(*verification.VerifiableChunkData) []byte); ok {
		r0 = rf(ch)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func(*verification.VerifiableChunkData) error); ok {
		r1 = rf(ch)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockChunkVerifier_Verify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Verify'
type MockChunkVerifier_Verify_Call struct {
	*mock.Call
}

// Verify is a helper method to define mock.On call
//   - ch *verification.VerifiableChunkData
func (_e *MockChunkVerifier_Expecter) Verify(ch interface{}) *MockChunkVerifier_Verify_Call {
	return &MockChunkVerifier_Verify_Call{Call: _e.mock.On("Verify", ch)}
}

func (_c *MockChunkVerifier_Verify_Call) Run(run func(ch *verification.VerifiableChunkData)) *MockChunkVerifier_Verify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*verification.VerifiableChunkData))
	})
	return _c
}

func (_c *MockChunkVerifier_Verify_Call) Return(_a0 []byte, _a1 error) *MockChunkVerifier_Verify_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockChunkVerifier_Verify_Call) RunAndReturn(run func(*verification.VerifiableChunkData) ([]byte, error)) *MockChunkVerifier_Verify_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockChunkVerifier creates a new instance of MockChunkVerifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockChunkVerifier(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockChunkVerifier {
	mock := &MockChunkVerifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
