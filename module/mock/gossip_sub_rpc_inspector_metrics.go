// Code generated by mockery v2.21.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// GossipSubRpcInspectorMetrics is an autogenerated mock type for the GossipSubRpcInspectorMetrics type
type GossipSubRpcInspectorMetrics struct {
	mock.Mock
}

// OnGraftReceived provides a mock function with given fields: count
func (_m *GossipSubRpcInspectorMetrics) OnGraftReceived(count int) {
	_m.Called(count)
}

// OnIHaveReceived provides a mock function with given fields: count
func (_m *GossipSubRpcInspectorMetrics) OnIHaveReceived(count int) {
	_m.Called(count)
}

// OnIWantReceived provides a mock function with given fields: count
func (_m *GossipSubRpcInspectorMetrics) OnIWantReceived(count int) {
	_m.Called(count)
}

// OnIncomingRpcAcceptedFully provides a mock function with given fields:
func (_m *GossipSubRpcInspectorMetrics) OnIncomingRpcAcceptedFully() {
	_m.Called()
}

// OnIncomingRpcAcceptedOnlyForControlMessages provides a mock function with given fields:
func (_m *GossipSubRpcInspectorMetrics) OnIncomingRpcAcceptedOnlyForControlMessages() {
	_m.Called()
}

// OnIncomingRpcRejected provides a mock function with given fields:
func (_m *GossipSubRpcInspectorMetrics) OnIncomingRpcRejected() {
	_m.Called()
}

// OnPruneReceived provides a mock function with given fields: count
func (_m *GossipSubRpcInspectorMetrics) OnPruneReceived(count int) {
	_m.Called(count)
}

// OnPublishedGossipMessagesReceived provides a mock function with given fields: count
func (_m *GossipSubRpcInspectorMetrics) OnPublishedGossipMessagesReceived(count int) {
	_m.Called(count)
}

type mockConstructorTestingTNewGossipSubRpcInspectorMetrics interface {
	mock.TestingT
	Cleanup(func())
}

// NewGossipSubRpcInspectorMetrics creates a new instance of GossipSubRpcInspectorMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGossipSubRpcInspectorMetrics(t mockConstructorTestingTNewGossipSubRpcInspectorMetrics) *GossipSubRpcInspectorMetrics {
	mock := &GossipSubRpcInspectorMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
