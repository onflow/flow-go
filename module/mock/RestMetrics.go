// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	context "context"

	metrics "github.com/slok/go-http-metrics/metrics"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockRestMetrics is an autogenerated mock type for the RestMetrics type
type MockRestMetrics struct {
	mock.Mock
}

type MockRestMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRestMetrics) EXPECT() *MockRestMetrics_Expecter {
	return &MockRestMetrics_Expecter{mock: &_m.Mock}
}

// AddInflightRequests provides a mock function with given fields: ctx, props, quantity
func (_m *MockRestMetrics) AddInflightRequests(ctx context.Context, props metrics.HTTPProperties, quantity int) {
	_m.Called(ctx, props, quantity)
}

// MockRestMetrics_AddInflightRequests_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddInflightRequests'
type MockRestMetrics_AddInflightRequests_Call struct {
	*mock.Call
}

// AddInflightRequests is a helper method to define mock.On call
//   - ctx context.Context
//   - props metrics.HTTPProperties
//   - quantity int
func (_e *MockRestMetrics_Expecter) AddInflightRequests(ctx interface{}, props interface{}, quantity interface{}) *MockRestMetrics_AddInflightRequests_Call {
	return &MockRestMetrics_AddInflightRequests_Call{Call: _e.mock.On("AddInflightRequests", ctx, props, quantity)}
}

func (_c *MockRestMetrics_AddInflightRequests_Call) Run(run func(ctx context.Context, props metrics.HTTPProperties, quantity int)) *MockRestMetrics_AddInflightRequests_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(metrics.HTTPProperties), args[2].(int))
	})
	return _c
}

func (_c *MockRestMetrics_AddInflightRequests_Call) Return() *MockRestMetrics_AddInflightRequests_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRestMetrics_AddInflightRequests_Call) RunAndReturn(run func(context.Context, metrics.HTTPProperties, int)) *MockRestMetrics_AddInflightRequests_Call {
	_c.Run(run)
	return _c
}

// AddTotalRequests provides a mock function with given fields: ctx, method, routeName
func (_m *MockRestMetrics) AddTotalRequests(ctx context.Context, method string, routeName string) {
	_m.Called(ctx, method, routeName)
}

// MockRestMetrics_AddTotalRequests_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddTotalRequests'
type MockRestMetrics_AddTotalRequests_Call struct {
	*mock.Call
}

// AddTotalRequests is a helper method to define mock.On call
//   - ctx context.Context
//   - method string
//   - routeName string
func (_e *MockRestMetrics_Expecter) AddTotalRequests(ctx interface{}, method interface{}, routeName interface{}) *MockRestMetrics_AddTotalRequests_Call {
	return &MockRestMetrics_AddTotalRequests_Call{Call: _e.mock.On("AddTotalRequests", ctx, method, routeName)}
}

func (_c *MockRestMetrics_AddTotalRequests_Call) Run(run func(ctx context.Context, method string, routeName string)) *MockRestMetrics_AddTotalRequests_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockRestMetrics_AddTotalRequests_Call) Return() *MockRestMetrics_AddTotalRequests_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRestMetrics_AddTotalRequests_Call) RunAndReturn(run func(context.Context, string, string)) *MockRestMetrics_AddTotalRequests_Call {
	_c.Run(run)
	return _c
}

// ObserveHTTPRequestDuration provides a mock function with given fields: ctx, props, duration
func (_m *MockRestMetrics) ObserveHTTPRequestDuration(ctx context.Context, props metrics.HTTPReqProperties, duration time.Duration) {
	_m.Called(ctx, props, duration)
}

// MockRestMetrics_ObserveHTTPRequestDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveHTTPRequestDuration'
type MockRestMetrics_ObserveHTTPRequestDuration_Call struct {
	*mock.Call
}

// ObserveHTTPRequestDuration is a helper method to define mock.On call
//   - ctx context.Context
//   - props metrics.HTTPReqProperties
//   - duration time.Duration
func (_e *MockRestMetrics_Expecter) ObserveHTTPRequestDuration(ctx interface{}, props interface{}, duration interface{}) *MockRestMetrics_ObserveHTTPRequestDuration_Call {
	return &MockRestMetrics_ObserveHTTPRequestDuration_Call{Call: _e.mock.On("ObserveHTTPRequestDuration", ctx, props, duration)}
}

func (_c *MockRestMetrics_ObserveHTTPRequestDuration_Call) Run(run func(ctx context.Context, props metrics.HTTPReqProperties, duration time.Duration)) *MockRestMetrics_ObserveHTTPRequestDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(metrics.HTTPReqProperties), args[2].(time.Duration))
	})
	return _c
}

func (_c *MockRestMetrics_ObserveHTTPRequestDuration_Call) Return() *MockRestMetrics_ObserveHTTPRequestDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRestMetrics_ObserveHTTPRequestDuration_Call) RunAndReturn(run func(context.Context, metrics.HTTPReqProperties, time.Duration)) *MockRestMetrics_ObserveHTTPRequestDuration_Call {
	_c.Run(run)
	return _c
}

// ObserveHTTPResponseSize provides a mock function with given fields: ctx, props, sizeBytes
func (_m *MockRestMetrics) ObserveHTTPResponseSize(ctx context.Context, props metrics.HTTPReqProperties, sizeBytes int64) {
	_m.Called(ctx, props, sizeBytes)
}

// MockRestMetrics_ObserveHTTPResponseSize_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveHTTPResponseSize'
type MockRestMetrics_ObserveHTTPResponseSize_Call struct {
	*mock.Call
}

// ObserveHTTPResponseSize is a helper method to define mock.On call
//   - ctx context.Context
//   - props metrics.HTTPReqProperties
//   - sizeBytes int64
func (_e *MockRestMetrics_Expecter) ObserveHTTPResponseSize(ctx interface{}, props interface{}, sizeBytes interface{}) *MockRestMetrics_ObserveHTTPResponseSize_Call {
	return &MockRestMetrics_ObserveHTTPResponseSize_Call{Call: _e.mock.On("ObserveHTTPResponseSize", ctx, props, sizeBytes)}
}

func (_c *MockRestMetrics_ObserveHTTPResponseSize_Call) Run(run func(ctx context.Context, props metrics.HTTPReqProperties, sizeBytes int64)) *MockRestMetrics_ObserveHTTPResponseSize_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(metrics.HTTPReqProperties), args[2].(int64))
	})
	return _c
}

func (_c *MockRestMetrics_ObserveHTTPResponseSize_Call) Return() *MockRestMetrics_ObserveHTTPResponseSize_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRestMetrics_ObserveHTTPResponseSize_Call) RunAndReturn(run func(context.Context, metrics.HTTPReqProperties, int64)) *MockRestMetrics_ObserveHTTPResponseSize_Call {
	_c.Run(run)
	return _c
}

// NewMockRestMetrics creates a new instance of MockRestMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRestMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRestMetrics {
	mock := &MockRestMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
