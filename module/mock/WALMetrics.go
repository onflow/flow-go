// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockWALMetrics is an autogenerated mock type for the WALMetrics type
type MockWALMetrics struct {
	mock.Mock
}

type MockWALMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockWALMetrics) EXPECT() *MockWALMetrics_Expecter {
	return &MockWALMetrics_Expecter{mock: &_m.Mock}
}

// ExecutionCheckpointSize provides a mock function with given fields: bytes
func (_m *MockWALMetrics) ExecutionCheckpointSize(bytes uint64) {
	_m.Called(bytes)
}

// MockWALMetrics_ExecutionCheckpointSize_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExecutionCheckpointSize'
type MockWALMetrics_ExecutionCheckpointSize_Call struct {
	*mock.Call
}

// ExecutionCheckpointSize is a helper method to define mock.On call
//   - bytes uint64
func (_e *MockWALMetrics_Expecter) ExecutionCheckpointSize(bytes interface{}) *MockWALMetrics_ExecutionCheckpointSize_Call {
	return &MockWALMetrics_ExecutionCheckpointSize_Call{Call: _e.mock.On("ExecutionCheckpointSize", bytes)}
}

func (_c *MockWALMetrics_ExecutionCheckpointSize_Call) Run(run func(bytes uint64)) *MockWALMetrics_ExecutionCheckpointSize_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockWALMetrics_ExecutionCheckpointSize_Call) Return() *MockWALMetrics_ExecutionCheckpointSize_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockWALMetrics_ExecutionCheckpointSize_Call) RunAndReturn(run func(uint64)) *MockWALMetrics_ExecutionCheckpointSize_Call {
	_c.Run(run)
	return _c
}

// NewMockWALMetrics creates a new instance of MockWALMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWALMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWALMetrics {
	mock := &MockWALMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
