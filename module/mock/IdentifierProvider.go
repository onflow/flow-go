// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockIdentifierProvider is an autogenerated mock type for the IdentifierProvider type
type MockIdentifierProvider struct {
	mock.Mock
}

type MockIdentifierProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIdentifierProvider) EXPECT() *MockIdentifierProvider_Expecter {
	return &MockIdentifierProvider_Expecter{mock: &_m.Mock}
}

// Identifiers provides a mock function with no fields
func (_m *MockIdentifierProvider) Identifiers() flow.IdentifierList {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Identifiers")
	}

	var r0 flow.IdentifierList
	if rf, ok := ret.Get(0).(func() flow.IdentifierList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.IdentifierList)
		}
	}

	return r0
}

// MockIdentifierProvider_Identifiers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Identifiers'
type MockIdentifierProvider_Identifiers_Call struct {
	*mock.Call
}

// Identifiers is a helper method to define mock.On call
func (_e *MockIdentifierProvider_Expecter) Identifiers() *MockIdentifierProvider_Identifiers_Call {
	return &MockIdentifierProvider_Identifiers_Call{Call: _e.mock.On("Identifiers")}
}

func (_c *MockIdentifierProvider_Identifiers_Call) Run(run func()) *MockIdentifierProvider_Identifiers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIdentifierProvider_Identifiers_Call) Return(_a0 flow.IdentifierList) *MockIdentifierProvider_Identifiers_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIdentifierProvider_Identifiers_Call) RunAndReturn(run func() flow.IdentifierList) *MockIdentifierProvider_Identifiers_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIdentifierProvider creates a new instance of MockIdentifierProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIdentifierProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIdentifierProvider {
	mock := &MockIdentifierProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
