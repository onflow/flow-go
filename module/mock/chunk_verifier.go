// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	verification "github.com/onflow/flow-go/model/verification"
)

// ChunkVerifier is an autogenerated mock type for the ChunkVerifier type
type ChunkVerifier struct {
	mock.Mock
}

// Verify provides a mock function with given fields: ch
func (_m *ChunkVerifier) Verify(ch *verification.VerifiableChunkData) ([]byte, error) {
	ret := _m.Called(ch)

	if len(ret) == 0 {
		panic("no return value specified for Verify")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func(*verification.VerifiableChunkData) ([]byte, error)); ok {
		return rf(ch)
	}
	if rf, ok := ret.Get(0).(func(*verification.VerifiableChunkData) []byte); ok {
		r0 = rf(ch)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func(*verification.VerifiableChunkData) error); ok {
		r1 = rf(ch)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewChunkVerifier creates a new instance of ChunkVerifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChunkVerifier(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChunkVerifier {
	mock := &ChunkVerifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
