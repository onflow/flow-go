// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockRuntimeMetrics is an autogenerated mock type for the RuntimeMetrics type
type MockRuntimeMetrics struct {
	mock.Mock
}

type MockRuntimeMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRuntimeMetrics) EXPECT() *MockRuntimeMetrics_Expecter {
	return &MockRuntimeMetrics_Expecter{mock: &_m.Mock}
}

// RuntimeSetNumberOfAccounts provides a mock function with given fields: count
func (_m *MockRuntimeMetrics) RuntimeSetNumberOfAccounts(count uint64) {
	_m.Called(count)
}

// MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RuntimeSetNumberOfAccounts'
type MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call struct {
	*mock.Call
}

// RuntimeSetNumberOfAccounts is a helper method to define mock.On call
//   - count uint64
func (_e *MockRuntimeMetrics_Expecter) RuntimeSetNumberOfAccounts(count interface{}) *MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call {
	return &MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call{Call: _e.mock.On("RuntimeSetNumberOfAccounts", count)}
}

func (_c *MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call) Run(run func(count uint64)) *MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call) Return() *MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call) RunAndReturn(run func(uint64)) *MockRuntimeMetrics_RuntimeSetNumberOfAccounts_Call {
	_c.Run(run)
	return _c
}

// RuntimeTransactionChecked provides a mock function with given fields: dur
func (_m *MockRuntimeMetrics) RuntimeTransactionChecked(dur time.Duration) {
	_m.Called(dur)
}

// MockRuntimeMetrics_RuntimeTransactionChecked_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RuntimeTransactionChecked'
type MockRuntimeMetrics_RuntimeTransactionChecked_Call struct {
	*mock.Call
}

// RuntimeTransactionChecked is a helper method to define mock.On call
//   - dur time.Duration
func (_e *MockRuntimeMetrics_Expecter) RuntimeTransactionChecked(dur interface{}) *MockRuntimeMetrics_RuntimeTransactionChecked_Call {
	return &MockRuntimeMetrics_RuntimeTransactionChecked_Call{Call: _e.mock.On("RuntimeTransactionChecked", dur)}
}

func (_c *MockRuntimeMetrics_RuntimeTransactionChecked_Call) Run(run func(dur time.Duration)) *MockRuntimeMetrics_RuntimeTransactionChecked_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionChecked_Call) Return() *MockRuntimeMetrics_RuntimeTransactionChecked_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionChecked_Call) RunAndReturn(run func(time.Duration)) *MockRuntimeMetrics_RuntimeTransactionChecked_Call {
	_c.Run(run)
	return _c
}

// RuntimeTransactionInterpreted provides a mock function with given fields: dur
func (_m *MockRuntimeMetrics) RuntimeTransactionInterpreted(dur time.Duration) {
	_m.Called(dur)
}

// MockRuntimeMetrics_RuntimeTransactionInterpreted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RuntimeTransactionInterpreted'
type MockRuntimeMetrics_RuntimeTransactionInterpreted_Call struct {
	*mock.Call
}

// RuntimeTransactionInterpreted is a helper method to define mock.On call
//   - dur time.Duration
func (_e *MockRuntimeMetrics_Expecter) RuntimeTransactionInterpreted(dur interface{}) *MockRuntimeMetrics_RuntimeTransactionInterpreted_Call {
	return &MockRuntimeMetrics_RuntimeTransactionInterpreted_Call{Call: _e.mock.On("RuntimeTransactionInterpreted", dur)}
}

func (_c *MockRuntimeMetrics_RuntimeTransactionInterpreted_Call) Run(run func(dur time.Duration)) *MockRuntimeMetrics_RuntimeTransactionInterpreted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionInterpreted_Call) Return() *MockRuntimeMetrics_RuntimeTransactionInterpreted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionInterpreted_Call) RunAndReturn(run func(time.Duration)) *MockRuntimeMetrics_RuntimeTransactionInterpreted_Call {
	_c.Run(run)
	return _c
}

// RuntimeTransactionParsed provides a mock function with given fields: dur
func (_m *MockRuntimeMetrics) RuntimeTransactionParsed(dur time.Duration) {
	_m.Called(dur)
}

// MockRuntimeMetrics_RuntimeTransactionParsed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RuntimeTransactionParsed'
type MockRuntimeMetrics_RuntimeTransactionParsed_Call struct {
	*mock.Call
}

// RuntimeTransactionParsed is a helper method to define mock.On call
//   - dur time.Duration
func (_e *MockRuntimeMetrics_Expecter) RuntimeTransactionParsed(dur interface{}) *MockRuntimeMetrics_RuntimeTransactionParsed_Call {
	return &MockRuntimeMetrics_RuntimeTransactionParsed_Call{Call: _e.mock.On("RuntimeTransactionParsed", dur)}
}

func (_c *MockRuntimeMetrics_RuntimeTransactionParsed_Call) Run(run func(dur time.Duration)) *MockRuntimeMetrics_RuntimeTransactionParsed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionParsed_Call) Return() *MockRuntimeMetrics_RuntimeTransactionParsed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionParsed_Call) RunAndReturn(run func(time.Duration)) *MockRuntimeMetrics_RuntimeTransactionParsed_Call {
	_c.Run(run)
	return _c
}

// RuntimeTransactionProgramsCacheHit provides a mock function with no fields
func (_m *MockRuntimeMetrics) RuntimeTransactionProgramsCacheHit() {
	_m.Called()
}

// MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RuntimeTransactionProgramsCacheHit'
type MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call struct {
	*mock.Call
}

// RuntimeTransactionProgramsCacheHit is a helper method to define mock.On call
func (_e *MockRuntimeMetrics_Expecter) RuntimeTransactionProgramsCacheHit() *MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call {
	return &MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call{Call: _e.mock.On("RuntimeTransactionProgramsCacheHit")}
}

func (_c *MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call) Run(run func()) *MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call) Return() *MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call) RunAndReturn(run func()) *MockRuntimeMetrics_RuntimeTransactionProgramsCacheHit_Call {
	_c.Run(run)
	return _c
}

// RuntimeTransactionProgramsCacheMiss provides a mock function with no fields
func (_m *MockRuntimeMetrics) RuntimeTransactionProgramsCacheMiss() {
	_m.Called()
}

// MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RuntimeTransactionProgramsCacheMiss'
type MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call struct {
	*mock.Call
}

// RuntimeTransactionProgramsCacheMiss is a helper method to define mock.On call
func (_e *MockRuntimeMetrics_Expecter) RuntimeTransactionProgramsCacheMiss() *MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call {
	return &MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call{Call: _e.mock.On("RuntimeTransactionProgramsCacheMiss")}
}

func (_c *MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call) Run(run func()) *MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call) Return() *MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call) RunAndReturn(run func()) *MockRuntimeMetrics_RuntimeTransactionProgramsCacheMiss_Call {
	_c.Run(run)
	return _c
}

// NewMockRuntimeMetrics creates a new instance of MockRuntimeMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRuntimeMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRuntimeMetrics {
	mock := &MockRuntimeMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
