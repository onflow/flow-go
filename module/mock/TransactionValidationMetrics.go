// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockTransactionValidationMetrics is an autogenerated mock type for the TransactionValidationMetrics type
type MockTransactionValidationMetrics struct {
	mock.Mock
}

type MockTransactionValidationMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTransactionValidationMetrics) EXPECT() *MockTransactionValidationMetrics_Expecter {
	return &MockTransactionValidationMetrics_Expecter{mock: &_m.Mock}
}

// TransactionValidated provides a mock function with no fields
func (_m *MockTransactionValidationMetrics) TransactionValidated() {
	_m.Called()
}

// MockTransactionValidationMetrics_TransactionValidated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionValidated'
type MockTransactionValidationMetrics_TransactionValidated_Call struct {
	*mock.Call
}

// TransactionValidated is a helper method to define mock.On call
func (_e *MockTransactionValidationMetrics_Expecter) TransactionValidated() *MockTransactionValidationMetrics_TransactionValidated_Call {
	return &MockTransactionValidationMetrics_TransactionValidated_Call{Call: _e.mock.On("TransactionValidated")}
}

func (_c *MockTransactionValidationMetrics_TransactionValidated_Call) Run(run func()) *MockTransactionValidationMetrics_TransactionValidated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockTransactionValidationMetrics_TransactionValidated_Call) Return() *MockTransactionValidationMetrics_TransactionValidated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockTransactionValidationMetrics_TransactionValidated_Call) RunAndReturn(run func()) *MockTransactionValidationMetrics_TransactionValidated_Call {
	_c.Run(run)
	return _c
}

// TransactionValidationFailed provides a mock function with given fields: reason
func (_m *MockTransactionValidationMetrics) TransactionValidationFailed(reason string) {
	_m.Called(reason)
}

// MockTransactionValidationMetrics_TransactionValidationFailed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionValidationFailed'
type MockTransactionValidationMetrics_TransactionValidationFailed_Call struct {
	*mock.Call
}

// TransactionValidationFailed is a helper method to define mock.On call
//   - reason string
func (_e *MockTransactionValidationMetrics_Expecter) TransactionValidationFailed(reason interface{}) *MockTransactionValidationMetrics_TransactionValidationFailed_Call {
	return &MockTransactionValidationMetrics_TransactionValidationFailed_Call{Call: _e.mock.On("TransactionValidationFailed", reason)}
}

func (_c *MockTransactionValidationMetrics_TransactionValidationFailed_Call) Run(run func(reason string)) *MockTransactionValidationMetrics_TransactionValidationFailed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockTransactionValidationMetrics_TransactionValidationFailed_Call) Return() *MockTransactionValidationMetrics_TransactionValidationFailed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockTransactionValidationMetrics_TransactionValidationFailed_Call) RunAndReturn(run func(string)) *MockTransactionValidationMetrics_TransactionValidationFailed_Call {
	_c.Run(run)
	return _c
}

// TransactionValidationSkipped provides a mock function with no fields
func (_m *MockTransactionValidationMetrics) TransactionValidationSkipped() {
	_m.Called()
}

// MockTransactionValidationMetrics_TransactionValidationSkipped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionValidationSkipped'
type MockTransactionValidationMetrics_TransactionValidationSkipped_Call struct {
	*mock.Call
}

// TransactionValidationSkipped is a helper method to define mock.On call
func (_e *MockTransactionValidationMetrics_Expecter) TransactionValidationSkipped() *MockTransactionValidationMetrics_TransactionValidationSkipped_Call {
	return &MockTransactionValidationMetrics_TransactionValidationSkipped_Call{Call: _e.mock.On("TransactionValidationSkipped")}
}

func (_c *MockTransactionValidationMetrics_TransactionValidationSkipped_Call) Run(run func()) *MockTransactionValidationMetrics_TransactionValidationSkipped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockTransactionValidationMetrics_TransactionValidationSkipped_Call) Return() *MockTransactionValidationMetrics_TransactionValidationSkipped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockTransactionValidationMetrics_TransactionValidationSkipped_Call) RunAndReturn(run func()) *MockTransactionValidationMetrics_TransactionValidationSkipped_Call {
	_c.Run(run)
	return _c
}

// NewMockTransactionValidationMetrics creates a new instance of MockTransactionValidationMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTransactionValidationMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTransactionValidationMetrics {
	mock := &MockTransactionValidationMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
