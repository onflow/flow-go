// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockRateLimitedBlockstoreMetrics is an autogenerated mock type for the RateLimitedBlockstoreMetrics type
type MockRateLimitedBlockstoreMetrics struct {
	mock.Mock
}

type MockRateLimitedBlockstoreMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRateLimitedBlockstoreMetrics) EXPECT() *MockRateLimitedBlockstoreMetrics_Expecter {
	return &MockRateLimitedBlockstoreMetrics_Expecter{mock: &_m.Mock}
}

// BytesRead provides a mock function with given fields: _a0
func (_m *MockRateLimitedBlockstoreMetrics) BytesRead(_a0 int) {
	_m.Called(_a0)
}

// MockRateLimitedBlockstoreMetrics_BytesRead_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BytesRead'
type MockRateLimitedBlockstoreMetrics_BytesRead_Call struct {
	*mock.Call
}

// BytesRead is a helper method to define mock.On call
//   - _a0 int
func (_e *MockRateLimitedBlockstoreMetrics_Expecter) BytesRead(_a0 interface{}) *MockRateLimitedBlockstoreMetrics_BytesRead_Call {
	return &MockRateLimitedBlockstoreMetrics_BytesRead_Call{Call: _e.mock.On("BytesRead", _a0)}
}

func (_c *MockRateLimitedBlockstoreMetrics_BytesRead_Call) Run(run func(_a0 int)) *MockRateLimitedBlockstoreMetrics_BytesRead_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockRateLimitedBlockstoreMetrics_BytesRead_Call) Return() *MockRateLimitedBlockstoreMetrics_BytesRead_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRateLimitedBlockstoreMetrics_BytesRead_Call) RunAndReturn(run func(int)) *MockRateLimitedBlockstoreMetrics_BytesRead_Call {
	_c.Run(run)
	return _c
}

// NewMockRateLimitedBlockstoreMetrics creates a new instance of MockRateLimitedBlockstoreMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRateLimitedBlockstoreMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRateLimitedBlockstoreMetrics {
	mock := &MockRateLimitedBlockstoreMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
