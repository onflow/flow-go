// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockAlspMetrics is an autogenerated mock type for the AlspMetrics type
type MockAlspMetrics struct {
	mock.Mock
}

type MockAlspMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAlspMetrics) EXPECT() *MockAlspMetrics_Expecter {
	return &MockAlspMetrics_Expecter{mock: &_m.Mock}
}

// OnMisbehaviorReported provides a mock function with given fields: channel, misbehaviorType
func (_m *MockAlspMetrics) OnMisbehaviorReported(channel string, misbehaviorType string) {
	_m.Called(channel, misbehaviorType)
}

// MockAlspMetrics_OnMisbehaviorReported_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnMisbehaviorReported'
type MockAlspMetrics_OnMisbehaviorReported_Call struct {
	*mock.Call
}

// OnMisbehaviorReported is a helper method to define mock.On call
//   - channel string
//   - misbehaviorType string
func (_e *MockAlspMetrics_Expecter) OnMisbehaviorReported(channel interface{}, misbehaviorType interface{}) *MockAlspMetrics_OnMisbehaviorReported_Call {
	return &MockAlspMetrics_OnMisbehaviorReported_Call{Call: _e.mock.On("OnMisbehaviorReported", channel, misbehaviorType)}
}

func (_c *MockAlspMetrics_OnMisbehaviorReported_Call) Run(run func(channel string, misbehaviorType string)) *MockAlspMetrics_OnMisbehaviorReported_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockAlspMetrics_OnMisbehaviorReported_Call) Return() *MockAlspMetrics_OnMisbehaviorReported_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAlspMetrics_OnMisbehaviorReported_Call) RunAndReturn(run func(string, string)) *MockAlspMetrics_OnMisbehaviorReported_Call {
	_c.Run(run)
	return _c
}

// NewMockAlspMetrics creates a new instance of MockAlspMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAlspMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAlspMetrics {
	mock := &MockAlspMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
