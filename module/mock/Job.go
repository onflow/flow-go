// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	module "github.com/onflow/flow-go/module"
	mock "github.com/stretchr/testify/mock"
)

// MockJob is an autogenerated mock type for the Job type
type MockJob struct {
	mock.Mock
}

type MockJob_Expecter struct {
	mock *mock.Mock
}

func (_m *MockJob) EXPECT() *MockJob_Expecter {
	return &MockJob_Expecter{mock: &_m.Mock}
}

// ID provides a mock function with no fields
func (_m *MockJob) ID() module.JobID {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ID")
	}

	var r0 module.JobID
	if rf, ok := ret.Get(0).(func() module.JobID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(module.JobID)
	}

	return r0
}

// MockJob_ID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ID'
type MockJob_ID_Call struct {
	*mock.Call
}

// ID is a helper method to define mock.On call
func (_e *MockJob_Expecter) ID() *MockJob_ID_Call {
	return &MockJob_ID_Call{Call: _e.mock.On("ID")}
}

func (_c *MockJob_ID_Call) Run(run func()) *MockJob_ID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockJob_ID_Call) Return(_a0 module.JobID) *MockJob_ID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockJob_ID_Call) RunAndReturn(run func() module.JobID) *MockJob_ID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockJob creates a new instance of MockJob. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockJob(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockJob {
	mock := &MockJob{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
