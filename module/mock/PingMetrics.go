// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockPingMetrics is an autogenerated mock type for the PingMetrics type
type MockPingMetrics struct {
	mock.Mock
}

type MockPingMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPingMetrics) EXPECT() *MockPingMetrics_Expecter {
	return &MockPingMetrics_Expecter{mock: &_m.Mock}
}

// NodeInfo provides a mock function with given fields: node, nodeInfo, version, sealedHeight, hotstuffCurView
func (_m *MockPingMetrics) NodeInfo(node *flow.Identity, nodeInfo string, version string, sealedHeight uint64, hotstuffCurView uint64) {
	_m.Called(node, nodeInfo, version, sealedHeight, hotstuffCurView)
}

// MockPingMetrics_NodeInfo_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NodeInfo'
type MockPingMetrics_NodeInfo_Call struct {
	*mock.Call
}

// NodeInfo is a helper method to define mock.On call
//   - node *flow.Identity
//   - nodeInfo string
//   - version string
//   - sealedHeight uint64
//   - hotstuffCurView uint64
func (_e *MockPingMetrics_Expecter) NodeInfo(node interface{}, nodeInfo interface{}, version interface{}, sealedHeight interface{}, hotstuffCurView interface{}) *MockPingMetrics_NodeInfo_Call {
	return &MockPingMetrics_NodeInfo_Call{Call: _e.mock.On("NodeInfo", node, nodeInfo, version, sealedHeight, hotstuffCurView)}
}

func (_c *MockPingMetrics_NodeInfo_Call) Run(run func(node *flow.Identity, nodeInfo string, version string, sealedHeight uint64, hotstuffCurView uint64)) *MockPingMetrics_NodeInfo_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*flow.Identity), args[1].(string), args[2].(string), args[3].(uint64), args[4].(uint64))
	})
	return _c
}

func (_c *MockPingMetrics_NodeInfo_Call) Return() *MockPingMetrics_NodeInfo_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockPingMetrics_NodeInfo_Call) RunAndReturn(run func(*flow.Identity, string, string, uint64, uint64)) *MockPingMetrics_NodeInfo_Call {
	_c.Run(run)
	return _c
}

// NodeReachable provides a mock function with given fields: node, nodeInfo, rtt
func (_m *MockPingMetrics) NodeReachable(node *flow.Identity, nodeInfo string, rtt time.Duration) {
	_m.Called(node, nodeInfo, rtt)
}

// MockPingMetrics_NodeReachable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NodeReachable'
type MockPingMetrics_NodeReachable_Call struct {
	*mock.Call
}

// NodeReachable is a helper method to define mock.On call
//   - node *flow.Identity
//   - nodeInfo string
//   - rtt time.Duration
func (_e *MockPingMetrics_Expecter) NodeReachable(node interface{}, nodeInfo interface{}, rtt interface{}) *MockPingMetrics_NodeReachable_Call {
	return &MockPingMetrics_NodeReachable_Call{Call: _e.mock.On("NodeReachable", node, nodeInfo, rtt)}
}

func (_c *MockPingMetrics_NodeReachable_Call) Run(run func(node *flow.Identity, nodeInfo string, rtt time.Duration)) *MockPingMetrics_NodeReachable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*flow.Identity), args[1].(string), args[2].(time.Duration))
	})
	return _c
}

func (_c *MockPingMetrics_NodeReachable_Call) Return() *MockPingMetrics_NodeReachable_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockPingMetrics_NodeReachable_Call) RunAndReturn(run func(*flow.Identity, string, time.Duration)) *MockPingMetrics_NodeReachable_Call {
	_c.Run(run)
	return _c
}

// NewMockPingMetrics creates a new instance of MockPingMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPingMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPingMetrics {
	mock := &MockPingMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
