// Code generated by mockery v2.13.1. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// NetworkCoreMetrics is an autogenerated mock type for the NetworkCoreMetrics type
type NetworkCoreMetrics struct {
	mock.Mock
}

// DuplicateInboundMessagesDropped provides a mock function with given fields: topic, protocol, messageType
func (_m *NetworkCoreMetrics) DuplicateInboundMessagesDropped(topic string, protocol string, messageType string) {
	_m.Called(topic, protocol, messageType)
}

// InboundMessageReceived provides a mock function with given fields: sizeBytes, topic, protocol, messageType
func (_m *NetworkCoreMetrics) InboundMessageReceived(sizeBytes int, topic string, protocol string, messageType string) {
	_m.Called(sizeBytes, topic, protocol, messageType)
}

// MessageAdded provides a mock function with given fields: priority
func (_m *NetworkCoreMetrics) MessageAdded(priority int) {
	_m.Called(priority)
}

// MessageProcessingFinished provides a mock function with given fields: topic, duration
func (_m *NetworkCoreMetrics) MessageProcessingFinished(topic string, duration time.Duration) {
	_m.Called(topic, duration)
}

// MessageProcessingStarted provides a mock function with given fields: topic
func (_m *NetworkCoreMetrics) MessageProcessingStarted(topic string) {
	_m.Called(topic)
}

// MessageRemoved provides a mock function with given fields: priority
func (_m *NetworkCoreMetrics) MessageRemoved(priority int) {
	_m.Called(priority)
}

// OutboundMessageSent provides a mock function with given fields: sizeBytes, topic, protocol, messageType
func (_m *NetworkCoreMetrics) OutboundMessageSent(sizeBytes int, topic string, protocol string, messageType string) {
	_m.Called(sizeBytes, topic, protocol, messageType)
}

// QueueDuration provides a mock function with given fields: duration, priority
func (_m *NetworkCoreMetrics) QueueDuration(duration time.Duration, priority int) {
	_m.Called(duration, priority)
}

// UnicastMessageSendingCompleted provides a mock function with given fields: topic
func (_m *NetworkCoreMetrics) UnicastMessageSendingCompleted(topic string) {
	_m.Called(topic)
}

// UnicastMessageSendingStarted provides a mock function with given fields: topic
func (_m *NetworkCoreMetrics) UnicastMessageSendingStarted(topic string) {
	_m.Called(topic)
}

type mockConstructorTestingTNewNetworkCoreMetrics interface {
	mock.TestingT
	Cleanup(func())
}

// NewNetworkCoreMetrics creates a new instance of NetworkCoreMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNetworkCoreMetrics(t mockConstructorTestingTNewNetworkCoreMetrics) *NetworkCoreMetrics {
	mock := &NetworkCoreMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
