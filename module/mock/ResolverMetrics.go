// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockResolverMetrics is an autogenerated mock type for the ResolverMetrics type
type MockResolverMetrics struct {
	mock.Mock
}

type MockResolverMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockResolverMetrics) EXPECT() *MockResolverMetrics_Expecter {
	return &MockResolverMetrics_Expecter{mock: &_m.Mock}
}

// DNSLookupDuration provides a mock function with given fields: duration
func (_m *MockResolverMetrics) DNSLookupDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockResolverMetrics_DNSLookupDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DNSLookupDuration'
type MockResolverMetrics_DNSLookupDuration_Call struct {
	*mock.Call
}

// DNSLookupDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockResolverMetrics_Expecter) DNSLookupDuration(duration interface{}) *MockResolverMetrics_DNSLookupDuration_Call {
	return &MockResolverMetrics_DNSLookupDuration_Call{Call: _e.mock.On("DNSLookupDuration", duration)}
}

func (_c *MockResolverMetrics_DNSLookupDuration_Call) Run(run func(duration time.Duration)) *MockResolverMetrics_DNSLookupDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockResolverMetrics_DNSLookupDuration_Call) Return() *MockResolverMetrics_DNSLookupDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResolverMetrics_DNSLookupDuration_Call) RunAndReturn(run func(time.Duration)) *MockResolverMetrics_DNSLookupDuration_Call {
	_c.Run(run)
	return _c
}

// OnDNSCacheHit provides a mock function with no fields
func (_m *MockResolverMetrics) OnDNSCacheHit() {
	_m.Called()
}

// MockResolverMetrics_OnDNSCacheHit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSCacheHit'
type MockResolverMetrics_OnDNSCacheHit_Call struct {
	*mock.Call
}

// OnDNSCacheHit is a helper method to define mock.On call
func (_e *MockResolverMetrics_Expecter) OnDNSCacheHit() *MockResolverMetrics_OnDNSCacheHit_Call {
	return &MockResolverMetrics_OnDNSCacheHit_Call{Call: _e.mock.On("OnDNSCacheHit")}
}

func (_c *MockResolverMetrics_OnDNSCacheHit_Call) Run(run func()) *MockResolverMetrics_OnDNSCacheHit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResolverMetrics_OnDNSCacheHit_Call) Return() *MockResolverMetrics_OnDNSCacheHit_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResolverMetrics_OnDNSCacheHit_Call) RunAndReturn(run func()) *MockResolverMetrics_OnDNSCacheHit_Call {
	_c.Run(run)
	return _c
}

// OnDNSCacheInvalidated provides a mock function with no fields
func (_m *MockResolverMetrics) OnDNSCacheInvalidated() {
	_m.Called()
}

// MockResolverMetrics_OnDNSCacheInvalidated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSCacheInvalidated'
type MockResolverMetrics_OnDNSCacheInvalidated_Call struct {
	*mock.Call
}

// OnDNSCacheInvalidated is a helper method to define mock.On call
func (_e *MockResolverMetrics_Expecter) OnDNSCacheInvalidated() *MockResolverMetrics_OnDNSCacheInvalidated_Call {
	return &MockResolverMetrics_OnDNSCacheInvalidated_Call{Call: _e.mock.On("OnDNSCacheInvalidated")}
}

func (_c *MockResolverMetrics_OnDNSCacheInvalidated_Call) Run(run func()) *MockResolverMetrics_OnDNSCacheInvalidated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResolverMetrics_OnDNSCacheInvalidated_Call) Return() *MockResolverMetrics_OnDNSCacheInvalidated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResolverMetrics_OnDNSCacheInvalidated_Call) RunAndReturn(run func()) *MockResolverMetrics_OnDNSCacheInvalidated_Call {
	_c.Run(run)
	return _c
}

// OnDNSCacheMiss provides a mock function with no fields
func (_m *MockResolverMetrics) OnDNSCacheMiss() {
	_m.Called()
}

// MockResolverMetrics_OnDNSCacheMiss_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSCacheMiss'
type MockResolverMetrics_OnDNSCacheMiss_Call struct {
	*mock.Call
}

// OnDNSCacheMiss is a helper method to define mock.On call
func (_e *MockResolverMetrics_Expecter) OnDNSCacheMiss() *MockResolverMetrics_OnDNSCacheMiss_Call {
	return &MockResolverMetrics_OnDNSCacheMiss_Call{Call: _e.mock.On("OnDNSCacheMiss")}
}

func (_c *MockResolverMetrics_OnDNSCacheMiss_Call) Run(run func()) *MockResolverMetrics_OnDNSCacheMiss_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResolverMetrics_OnDNSCacheMiss_Call) Return() *MockResolverMetrics_OnDNSCacheMiss_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResolverMetrics_OnDNSCacheMiss_Call) RunAndReturn(run func()) *MockResolverMetrics_OnDNSCacheMiss_Call {
	_c.Run(run)
	return _c
}

// OnDNSLookupRequestDropped provides a mock function with no fields
func (_m *MockResolverMetrics) OnDNSLookupRequestDropped() {
	_m.Called()
}

// MockResolverMetrics_OnDNSLookupRequestDropped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDNSLookupRequestDropped'
type MockResolverMetrics_OnDNSLookupRequestDropped_Call struct {
	*mock.Call
}

// OnDNSLookupRequestDropped is a helper method to define mock.On call
func (_e *MockResolverMetrics_Expecter) OnDNSLookupRequestDropped() *MockResolverMetrics_OnDNSLookupRequestDropped_Call {
	return &MockResolverMetrics_OnDNSLookupRequestDropped_Call{Call: _e.mock.On("OnDNSLookupRequestDropped")}
}

func (_c *MockResolverMetrics_OnDNSLookupRequestDropped_Call) Run(run func()) *MockResolverMetrics_OnDNSLookupRequestDropped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockResolverMetrics_OnDNSLookupRequestDropped_Call) Return() *MockResolverMetrics_OnDNSLookupRequestDropped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockResolverMetrics_OnDNSLookupRequestDropped_Call) RunAndReturn(run func()) *MockResolverMetrics_OnDNSLookupRequestDropped_Call {
	_c.Run(run)
	return _c
}

// NewMockResolverMetrics creates a new instance of MockResolverMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockResolverMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockResolverMetrics {
	mock := &MockResolverMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
