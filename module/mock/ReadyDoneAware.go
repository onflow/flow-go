// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockReadyDoneAware is an autogenerated mock type for the ReadyDoneAware type
type MockReadyDoneAware struct {
	mock.Mock
}

type MockReadyDoneAware_Expecter struct {
	mock *mock.Mock
}

func (_m *MockReadyDoneAware) EXPECT() *MockReadyDoneAware_Expecter {
	return &MockReadyDoneAware_Expecter{mock: &_m.Mock}
}

// Done provides a mock function with no fields
func (_m *MockReadyDoneAware) Done() <-chan struct{} {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Done")
	}

	var r0 <-chan struct{}
	if rf, ok := ret.Get(0).(func() <-chan struct{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan struct{})
		}
	}

	return r0
}

// MockReadyDoneAware_Done_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Done'
type MockReadyDoneAware_Done_Call struct {
	*mock.Call
}

// Done is a helper method to define mock.On call
func (_e *MockReadyDoneAware_Expecter) Done() *MockReadyDoneAware_Done_Call {
	return &MockReadyDoneAware_Done_Call{Call: _e.mock.On("Done")}
}

func (_c *MockReadyDoneAware_Done_Call) Run(run func()) *MockReadyDoneAware_Done_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockReadyDoneAware_Done_Call) Return(_a0 <-chan struct{}) *MockReadyDoneAware_Done_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockReadyDoneAware_Done_Call) RunAndReturn(run func() <-chan struct{}) *MockReadyDoneAware_Done_Call {
	_c.Call.Return(run)
	return _c
}

// Ready provides a mock function with no fields
func (_m *MockReadyDoneAware) Ready() <-chan struct{} {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Ready")
	}

	var r0 <-chan struct{}
	if rf, ok := ret.Get(0).(func() <-chan struct{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan struct{})
		}
	}

	return r0
}

// MockReadyDoneAware_Ready_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Ready'
type MockReadyDoneAware_Ready_Call struct {
	*mock.Call
}

// Ready is a helper method to define mock.On call
func (_e *MockReadyDoneAware_Expecter) Ready() *MockReadyDoneAware_Ready_Call {
	return &MockReadyDoneAware_Ready_Call{Call: _e.mock.On("Ready")}
}

func (_c *MockReadyDoneAware_Ready_Call) Run(run func()) *MockReadyDoneAware_Ready_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockReadyDoneAware_Ready_Call) Return(_a0 <-chan struct{}) *MockReadyDoneAware_Ready_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockReadyDoneAware_Ready_Call) RunAndReturn(run func() <-chan struct{}) *MockReadyDoneAware_Ready_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockReadyDoneAware creates a new instance of MockReadyDoneAware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockReadyDoneAware(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockReadyDoneAware {
	mock := &MockReadyDoneAware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
