// Code generated by mockery. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// DKGProcessor is an autogenerated mock type for the DKGProcessor type
type DKGProcessor struct {
	mock.Mock
}

// Broadcast provides a mock function with given fields: data
func (_m *DKGProcessor) Broadcast(data []byte) {
	_m.Called(data)
}

// Disqualify provides a mock function with given fields: index, log
func (_m *DKGProcessor) Disqualify(index int, log string) {
	_m.Called(index, log)
}

// FlagMisbehavior provides a mock function with given fields: index, log
func (_m *DKGProcessor) FlagMisbehavior(index int, log string) {
	_m.Called(index, log)
}

// PrivateSend provides a mock function with given fields: dest, data
func (_m *DKGProcessor) PrivateSend(dest int, data []byte) {
	_m.Called(dest, data)
}

// NewDKGProcessor creates a new instance of DKGProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDKGProcessor(t interface {
	mock.TestingT
	Cleanup(func())
}) *DKGProcessor {
	mock := &DKGProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
