// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockBlockRequester is an autogenerated mock type for the BlockRequester type
type MockBlockRequester struct {
	mock.Mock
}

type MockBlockRequester_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBlockRequester) EXPECT() *MockBlockRequester_Expecter {
	return &MockBlockRequester_Expecter{mock: &_m.Mock}
}

// Prune provides a mock function with given fields: final
func (_m *MockBlockRequester) Prune(final *flow.Header) {
	_m.Called(final)
}

// MockBlockRequester_Prune_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Prune'
type MockBlockRequester_Prune_Call struct {
	*mock.Call
}

// Prune is a helper method to define mock.On call
//   - final *flow.Header
func (_e *MockBlockRequester_Expecter) Prune(final interface{}) *MockBlockRequester_Prune_Call {
	return &MockBlockRequester_Prune_Call{Call: _e.mock.On("Prune", final)}
}

func (_c *MockBlockRequester_Prune_Call) Run(run func(final *flow.Header)) *MockBlockRequester_Prune_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*flow.Header))
	})
	return _c
}

func (_c *MockBlockRequester_Prune_Call) Return() *MockBlockRequester_Prune_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBlockRequester_Prune_Call) RunAndReturn(run func(*flow.Header)) *MockBlockRequester_Prune_Call {
	_c.Run(run)
	return _c
}

// RequestBlock provides a mock function with given fields: blockID, height
func (_m *MockBlockRequester) RequestBlock(blockID flow.Identifier, height uint64) {
	_m.Called(blockID, height)
}

// MockBlockRequester_RequestBlock_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestBlock'
type MockBlockRequester_RequestBlock_Call struct {
	*mock.Call
}

// RequestBlock is a helper method to define mock.On call
//   - blockID flow.Identifier
//   - height uint64
func (_e *MockBlockRequester_Expecter) RequestBlock(blockID interface{}, height interface{}) *MockBlockRequester_RequestBlock_Call {
	return &MockBlockRequester_RequestBlock_Call{Call: _e.mock.On("RequestBlock", blockID, height)}
}

func (_c *MockBlockRequester_RequestBlock_Call) Run(run func(blockID flow.Identifier, height uint64)) *MockBlockRequester_RequestBlock_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier), args[1].(uint64))
	})
	return _c
}

func (_c *MockBlockRequester_RequestBlock_Call) Return() *MockBlockRequester_RequestBlock_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBlockRequester_RequestBlock_Call) RunAndReturn(run func(flow.Identifier, uint64)) *MockBlockRequester_RequestBlock_Call {
	_c.Run(run)
	return _c
}

// RequestHeight provides a mock function with given fields: height
func (_m *MockBlockRequester) RequestHeight(height uint64) {
	_m.Called(height)
}

// MockBlockRequester_RequestHeight_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestHeight'
type MockBlockRequester_RequestHeight_Call struct {
	*mock.Call
}

// RequestHeight is a helper method to define mock.On call
//   - height uint64
func (_e *MockBlockRequester_Expecter) RequestHeight(height interface{}) *MockBlockRequester_RequestHeight_Call {
	return &MockBlockRequester_RequestHeight_Call{Call: _e.mock.On("RequestHeight", height)}
}

func (_c *MockBlockRequester_RequestHeight_Call) Run(run func(height uint64)) *MockBlockRequester_RequestHeight_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockBlockRequester_RequestHeight_Call) Return() *MockBlockRequester_RequestHeight_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBlockRequester_RequestHeight_Call) RunAndReturn(run func(uint64)) *MockBlockRequester_RequestHeight_Call {
	_c.Run(run)
	return _c
}

// NewMockBlockRequester creates a new instance of MockBlockRequester. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBlockRequester(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBlockRequester {
	mock := &MockBlockRequester{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
