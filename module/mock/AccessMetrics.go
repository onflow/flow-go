// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	context "context"

	flow "github.com/onflow/flow-go/model/flow"
	metrics "github.com/slok/go-http-metrics/metrics"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockAccessMetrics is an autogenerated mock type for the AccessMetrics type
type MockAccessMetrics struct {
	mock.Mock
}

type MockAccessMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAccessMetrics) EXPECT() *MockAccessMetrics_Expecter {
	return &MockAccessMetrics_Expecter{mock: &_m.Mock}
}

// AddInflightRequests provides a mock function with given fields: ctx, props, quantity
func (_m *MockAccessMetrics) AddInflightRequests(ctx context.Context, props metrics.HTTPProperties, quantity int) {
	_m.Called(ctx, props, quantity)
}

// MockAccessMetrics_AddInflightRequests_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddInflightRequests'
type MockAccessMetrics_AddInflightRequests_Call struct {
	*mock.Call
}

// AddInflightRequests is a helper method to define mock.On call
//   - ctx context.Context
//   - props metrics.HTTPProperties
//   - quantity int
func (_e *MockAccessMetrics_Expecter) AddInflightRequests(ctx interface{}, props interface{}, quantity interface{}) *MockAccessMetrics_AddInflightRequests_Call {
	return &MockAccessMetrics_AddInflightRequests_Call{Call: _e.mock.On("AddInflightRequests", ctx, props, quantity)}
}

func (_c *MockAccessMetrics_AddInflightRequests_Call) Run(run func(ctx context.Context, props metrics.HTTPProperties, quantity int)) *MockAccessMetrics_AddInflightRequests_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(metrics.HTTPProperties), args[2].(int))
	})
	return _c
}

func (_c *MockAccessMetrics_AddInflightRequests_Call) Return() *MockAccessMetrics_AddInflightRequests_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_AddInflightRequests_Call) RunAndReturn(run func(context.Context, metrics.HTTPProperties, int)) *MockAccessMetrics_AddInflightRequests_Call {
	_c.Run(run)
	return _c
}

// AddTotalRequests provides a mock function with given fields: ctx, method, routeName
func (_m *MockAccessMetrics) AddTotalRequests(ctx context.Context, method string, routeName string) {
	_m.Called(ctx, method, routeName)
}

// MockAccessMetrics_AddTotalRequests_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddTotalRequests'
type MockAccessMetrics_AddTotalRequests_Call struct {
	*mock.Call
}

// AddTotalRequests is a helper method to define mock.On call
//   - ctx context.Context
//   - method string
//   - routeName string
func (_e *MockAccessMetrics_Expecter) AddTotalRequests(ctx interface{}, method interface{}, routeName interface{}) *MockAccessMetrics_AddTotalRequests_Call {
	return &MockAccessMetrics_AddTotalRequests_Call{Call: _e.mock.On("AddTotalRequests", ctx, method, routeName)}
}

func (_c *MockAccessMetrics_AddTotalRequests_Call) Run(run func(ctx context.Context, method string, routeName string)) *MockAccessMetrics_AddTotalRequests_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockAccessMetrics_AddTotalRequests_Call) Return() *MockAccessMetrics_AddTotalRequests_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_AddTotalRequests_Call) RunAndReturn(run func(context.Context, string, string)) *MockAccessMetrics_AddTotalRequests_Call {
	_c.Run(run)
	return _c
}

// ConnectionAddedToPool provides a mock function with no fields
func (_m *MockAccessMetrics) ConnectionAddedToPool() {
	_m.Called()
}

// MockAccessMetrics_ConnectionAddedToPool_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ConnectionAddedToPool'
type MockAccessMetrics_ConnectionAddedToPool_Call struct {
	*mock.Call
}

// ConnectionAddedToPool is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ConnectionAddedToPool() *MockAccessMetrics_ConnectionAddedToPool_Call {
	return &MockAccessMetrics_ConnectionAddedToPool_Call{Call: _e.mock.On("ConnectionAddedToPool")}
}

func (_c *MockAccessMetrics_ConnectionAddedToPool_Call) Run(run func()) *MockAccessMetrics_ConnectionAddedToPool_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ConnectionAddedToPool_Call) Return() *MockAccessMetrics_ConnectionAddedToPool_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ConnectionAddedToPool_Call) RunAndReturn(run func()) *MockAccessMetrics_ConnectionAddedToPool_Call {
	_c.Run(run)
	return _c
}

// ConnectionFromPoolEvicted provides a mock function with no fields
func (_m *MockAccessMetrics) ConnectionFromPoolEvicted() {
	_m.Called()
}

// MockAccessMetrics_ConnectionFromPoolEvicted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ConnectionFromPoolEvicted'
type MockAccessMetrics_ConnectionFromPoolEvicted_Call struct {
	*mock.Call
}

// ConnectionFromPoolEvicted is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ConnectionFromPoolEvicted() *MockAccessMetrics_ConnectionFromPoolEvicted_Call {
	return &MockAccessMetrics_ConnectionFromPoolEvicted_Call{Call: _e.mock.On("ConnectionFromPoolEvicted")}
}

func (_c *MockAccessMetrics_ConnectionFromPoolEvicted_Call) Run(run func()) *MockAccessMetrics_ConnectionFromPoolEvicted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolEvicted_Call) Return() *MockAccessMetrics_ConnectionFromPoolEvicted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolEvicted_Call) RunAndReturn(run func()) *MockAccessMetrics_ConnectionFromPoolEvicted_Call {
	_c.Run(run)
	return _c
}

// ConnectionFromPoolInvalidated provides a mock function with no fields
func (_m *MockAccessMetrics) ConnectionFromPoolInvalidated() {
	_m.Called()
}

// MockAccessMetrics_ConnectionFromPoolInvalidated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ConnectionFromPoolInvalidated'
type MockAccessMetrics_ConnectionFromPoolInvalidated_Call struct {
	*mock.Call
}

// ConnectionFromPoolInvalidated is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ConnectionFromPoolInvalidated() *MockAccessMetrics_ConnectionFromPoolInvalidated_Call {
	return &MockAccessMetrics_ConnectionFromPoolInvalidated_Call{Call: _e.mock.On("ConnectionFromPoolInvalidated")}
}

func (_c *MockAccessMetrics_ConnectionFromPoolInvalidated_Call) Run(run func()) *MockAccessMetrics_ConnectionFromPoolInvalidated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolInvalidated_Call) Return() *MockAccessMetrics_ConnectionFromPoolInvalidated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolInvalidated_Call) RunAndReturn(run func()) *MockAccessMetrics_ConnectionFromPoolInvalidated_Call {
	_c.Run(run)
	return _c
}

// ConnectionFromPoolReused provides a mock function with no fields
func (_m *MockAccessMetrics) ConnectionFromPoolReused() {
	_m.Called()
}

// MockAccessMetrics_ConnectionFromPoolReused_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ConnectionFromPoolReused'
type MockAccessMetrics_ConnectionFromPoolReused_Call struct {
	*mock.Call
}

// ConnectionFromPoolReused is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ConnectionFromPoolReused() *MockAccessMetrics_ConnectionFromPoolReused_Call {
	return &MockAccessMetrics_ConnectionFromPoolReused_Call{Call: _e.mock.On("ConnectionFromPoolReused")}
}

func (_c *MockAccessMetrics_ConnectionFromPoolReused_Call) Run(run func()) *MockAccessMetrics_ConnectionFromPoolReused_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolReused_Call) Return() *MockAccessMetrics_ConnectionFromPoolReused_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolReused_Call) RunAndReturn(run func()) *MockAccessMetrics_ConnectionFromPoolReused_Call {
	_c.Run(run)
	return _c
}

// ConnectionFromPoolUpdated provides a mock function with no fields
func (_m *MockAccessMetrics) ConnectionFromPoolUpdated() {
	_m.Called()
}

// MockAccessMetrics_ConnectionFromPoolUpdated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ConnectionFromPoolUpdated'
type MockAccessMetrics_ConnectionFromPoolUpdated_Call struct {
	*mock.Call
}

// ConnectionFromPoolUpdated is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ConnectionFromPoolUpdated() *MockAccessMetrics_ConnectionFromPoolUpdated_Call {
	return &MockAccessMetrics_ConnectionFromPoolUpdated_Call{Call: _e.mock.On("ConnectionFromPoolUpdated")}
}

func (_c *MockAccessMetrics_ConnectionFromPoolUpdated_Call) Run(run func()) *MockAccessMetrics_ConnectionFromPoolUpdated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolUpdated_Call) Return() *MockAccessMetrics_ConnectionFromPoolUpdated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ConnectionFromPoolUpdated_Call) RunAndReturn(run func()) *MockAccessMetrics_ConnectionFromPoolUpdated_Call {
	_c.Run(run)
	return _c
}

// NewConnectionEstablished provides a mock function with no fields
func (_m *MockAccessMetrics) NewConnectionEstablished() {
	_m.Called()
}

// MockAccessMetrics_NewConnectionEstablished_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewConnectionEstablished'
type MockAccessMetrics_NewConnectionEstablished_Call struct {
	*mock.Call
}

// NewConnectionEstablished is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) NewConnectionEstablished() *MockAccessMetrics_NewConnectionEstablished_Call {
	return &MockAccessMetrics_NewConnectionEstablished_Call{Call: _e.mock.On("NewConnectionEstablished")}
}

func (_c *MockAccessMetrics_NewConnectionEstablished_Call) Run(run func()) *MockAccessMetrics_NewConnectionEstablished_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_NewConnectionEstablished_Call) Return() *MockAccessMetrics_NewConnectionEstablished_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_NewConnectionEstablished_Call) RunAndReturn(run func()) *MockAccessMetrics_NewConnectionEstablished_Call {
	_c.Run(run)
	return _c
}

// ObserveHTTPRequestDuration provides a mock function with given fields: ctx, props, duration
func (_m *MockAccessMetrics) ObserveHTTPRequestDuration(ctx context.Context, props metrics.HTTPReqProperties, duration time.Duration) {
	_m.Called(ctx, props, duration)
}

// MockAccessMetrics_ObserveHTTPRequestDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveHTTPRequestDuration'
type MockAccessMetrics_ObserveHTTPRequestDuration_Call struct {
	*mock.Call
}

// ObserveHTTPRequestDuration is a helper method to define mock.On call
//   - ctx context.Context
//   - props metrics.HTTPReqProperties
//   - duration time.Duration
func (_e *MockAccessMetrics_Expecter) ObserveHTTPRequestDuration(ctx interface{}, props interface{}, duration interface{}) *MockAccessMetrics_ObserveHTTPRequestDuration_Call {
	return &MockAccessMetrics_ObserveHTTPRequestDuration_Call{Call: _e.mock.On("ObserveHTTPRequestDuration", ctx, props, duration)}
}

func (_c *MockAccessMetrics_ObserveHTTPRequestDuration_Call) Run(run func(ctx context.Context, props metrics.HTTPReqProperties, duration time.Duration)) *MockAccessMetrics_ObserveHTTPRequestDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(metrics.HTTPReqProperties), args[2].(time.Duration))
	})
	return _c
}

func (_c *MockAccessMetrics_ObserveHTTPRequestDuration_Call) Return() *MockAccessMetrics_ObserveHTTPRequestDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ObserveHTTPRequestDuration_Call) RunAndReturn(run func(context.Context, metrics.HTTPReqProperties, time.Duration)) *MockAccessMetrics_ObserveHTTPRequestDuration_Call {
	_c.Run(run)
	return _c
}

// ObserveHTTPResponseSize provides a mock function with given fields: ctx, props, sizeBytes
func (_m *MockAccessMetrics) ObserveHTTPResponseSize(ctx context.Context, props metrics.HTTPReqProperties, sizeBytes int64) {
	_m.Called(ctx, props, sizeBytes)
}

// MockAccessMetrics_ObserveHTTPResponseSize_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveHTTPResponseSize'
type MockAccessMetrics_ObserveHTTPResponseSize_Call struct {
	*mock.Call
}

// ObserveHTTPResponseSize is a helper method to define mock.On call
//   - ctx context.Context
//   - props metrics.HTTPReqProperties
//   - sizeBytes int64
func (_e *MockAccessMetrics_Expecter) ObserveHTTPResponseSize(ctx interface{}, props interface{}, sizeBytes interface{}) *MockAccessMetrics_ObserveHTTPResponseSize_Call {
	return &MockAccessMetrics_ObserveHTTPResponseSize_Call{Call: _e.mock.On("ObserveHTTPResponseSize", ctx, props, sizeBytes)}
}

func (_c *MockAccessMetrics_ObserveHTTPResponseSize_Call) Run(run func(ctx context.Context, props metrics.HTTPReqProperties, sizeBytes int64)) *MockAccessMetrics_ObserveHTTPResponseSize_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(metrics.HTTPReqProperties), args[2].(int64))
	})
	return _c
}

func (_c *MockAccessMetrics_ObserveHTTPResponseSize_Call) Return() *MockAccessMetrics_ObserveHTTPResponseSize_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ObserveHTTPResponseSize_Call) RunAndReturn(run func(context.Context, metrics.HTTPReqProperties, int64)) *MockAccessMetrics_ObserveHTTPResponseSize_Call {
	_c.Run(run)
	return _c
}

// ScriptExecuted provides a mock function with given fields: dur, size
func (_m *MockAccessMetrics) ScriptExecuted(dur time.Duration, size int) {
	_m.Called(dur, size)
}

// MockAccessMetrics_ScriptExecuted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecuted'
type MockAccessMetrics_ScriptExecuted_Call struct {
	*mock.Call
}

// ScriptExecuted is a helper method to define mock.On call
//   - dur time.Duration
//   - size int
func (_e *MockAccessMetrics_Expecter) ScriptExecuted(dur interface{}, size interface{}) *MockAccessMetrics_ScriptExecuted_Call {
	return &MockAccessMetrics_ScriptExecuted_Call{Call: _e.mock.On("ScriptExecuted", dur, size)}
}

func (_c *MockAccessMetrics_ScriptExecuted_Call) Run(run func(dur time.Duration, size int)) *MockAccessMetrics_ScriptExecuted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecuted_Call) Return() *MockAccessMetrics_ScriptExecuted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecuted_Call) RunAndReturn(run func(time.Duration, int)) *MockAccessMetrics_ScriptExecuted_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorLocal provides a mock function with no fields
func (_m *MockAccessMetrics) ScriptExecutionErrorLocal() {
	_m.Called()
}

// MockAccessMetrics_ScriptExecutionErrorLocal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorLocal'
type MockAccessMetrics_ScriptExecutionErrorLocal_Call struct {
	*mock.Call
}

// ScriptExecutionErrorLocal is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ScriptExecutionErrorLocal() *MockAccessMetrics_ScriptExecutionErrorLocal_Call {
	return &MockAccessMetrics_ScriptExecutionErrorLocal_Call{Call: _e.mock.On("ScriptExecutionErrorLocal")}
}

func (_c *MockAccessMetrics_ScriptExecutionErrorLocal_Call) Run(run func()) *MockAccessMetrics_ScriptExecutionErrorLocal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorLocal_Call) Return() *MockAccessMetrics_ScriptExecutionErrorLocal_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorLocal_Call) RunAndReturn(run func()) *MockAccessMetrics_ScriptExecutionErrorLocal_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorMatch provides a mock function with no fields
func (_m *MockAccessMetrics) ScriptExecutionErrorMatch() {
	_m.Called()
}

// MockAccessMetrics_ScriptExecutionErrorMatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorMatch'
type MockAccessMetrics_ScriptExecutionErrorMatch_Call struct {
	*mock.Call
}

// ScriptExecutionErrorMatch is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ScriptExecutionErrorMatch() *MockAccessMetrics_ScriptExecutionErrorMatch_Call {
	return &MockAccessMetrics_ScriptExecutionErrorMatch_Call{Call: _e.mock.On("ScriptExecutionErrorMatch")}
}

func (_c *MockAccessMetrics_ScriptExecutionErrorMatch_Call) Run(run func()) *MockAccessMetrics_ScriptExecutionErrorMatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorMatch_Call) Return() *MockAccessMetrics_ScriptExecutionErrorMatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorMatch_Call) RunAndReturn(run func()) *MockAccessMetrics_ScriptExecutionErrorMatch_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorMismatch provides a mock function with no fields
func (_m *MockAccessMetrics) ScriptExecutionErrorMismatch() {
	_m.Called()
}

// MockAccessMetrics_ScriptExecutionErrorMismatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorMismatch'
type MockAccessMetrics_ScriptExecutionErrorMismatch_Call struct {
	*mock.Call
}

// ScriptExecutionErrorMismatch is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ScriptExecutionErrorMismatch() *MockAccessMetrics_ScriptExecutionErrorMismatch_Call {
	return &MockAccessMetrics_ScriptExecutionErrorMismatch_Call{Call: _e.mock.On("ScriptExecutionErrorMismatch")}
}

func (_c *MockAccessMetrics_ScriptExecutionErrorMismatch_Call) Run(run func()) *MockAccessMetrics_ScriptExecutionErrorMismatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorMismatch_Call) Return() *MockAccessMetrics_ScriptExecutionErrorMismatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorMismatch_Call) RunAndReturn(run func()) *MockAccessMetrics_ScriptExecutionErrorMismatch_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionErrorOnExecutionNode provides a mock function with no fields
func (_m *MockAccessMetrics) ScriptExecutionErrorOnExecutionNode() {
	_m.Called()
}

// MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionErrorOnExecutionNode'
type MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call struct {
	*mock.Call
}

// ScriptExecutionErrorOnExecutionNode is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ScriptExecutionErrorOnExecutionNode() *MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	return &MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call{Call: _e.mock.On("ScriptExecutionErrorOnExecutionNode")}
}

func (_c *MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call) Run(run func()) *MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call) Return() *MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call) RunAndReturn(run func()) *MockAccessMetrics_ScriptExecutionErrorOnExecutionNode_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionNotIndexed provides a mock function with no fields
func (_m *MockAccessMetrics) ScriptExecutionNotIndexed() {
	_m.Called()
}

// MockAccessMetrics_ScriptExecutionNotIndexed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionNotIndexed'
type MockAccessMetrics_ScriptExecutionNotIndexed_Call struct {
	*mock.Call
}

// ScriptExecutionNotIndexed is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ScriptExecutionNotIndexed() *MockAccessMetrics_ScriptExecutionNotIndexed_Call {
	return &MockAccessMetrics_ScriptExecutionNotIndexed_Call{Call: _e.mock.On("ScriptExecutionNotIndexed")}
}

func (_c *MockAccessMetrics_ScriptExecutionNotIndexed_Call) Run(run func()) *MockAccessMetrics_ScriptExecutionNotIndexed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionNotIndexed_Call) Return() *MockAccessMetrics_ScriptExecutionNotIndexed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionNotIndexed_Call) RunAndReturn(run func()) *MockAccessMetrics_ScriptExecutionNotIndexed_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionResultMatch provides a mock function with no fields
func (_m *MockAccessMetrics) ScriptExecutionResultMatch() {
	_m.Called()
}

// MockAccessMetrics_ScriptExecutionResultMatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionResultMatch'
type MockAccessMetrics_ScriptExecutionResultMatch_Call struct {
	*mock.Call
}

// ScriptExecutionResultMatch is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ScriptExecutionResultMatch() *MockAccessMetrics_ScriptExecutionResultMatch_Call {
	return &MockAccessMetrics_ScriptExecutionResultMatch_Call{Call: _e.mock.On("ScriptExecutionResultMatch")}
}

func (_c *MockAccessMetrics_ScriptExecutionResultMatch_Call) Run(run func()) *MockAccessMetrics_ScriptExecutionResultMatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionResultMatch_Call) Return() *MockAccessMetrics_ScriptExecutionResultMatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionResultMatch_Call) RunAndReturn(run func()) *MockAccessMetrics_ScriptExecutionResultMatch_Call {
	_c.Run(run)
	return _c
}

// ScriptExecutionResultMismatch provides a mock function with no fields
func (_m *MockAccessMetrics) ScriptExecutionResultMismatch() {
	_m.Called()
}

// MockAccessMetrics_ScriptExecutionResultMismatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ScriptExecutionResultMismatch'
type MockAccessMetrics_ScriptExecutionResultMismatch_Call struct {
	*mock.Call
}

// ScriptExecutionResultMismatch is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) ScriptExecutionResultMismatch() *MockAccessMetrics_ScriptExecutionResultMismatch_Call {
	return &MockAccessMetrics_ScriptExecutionResultMismatch_Call{Call: _e.mock.On("ScriptExecutionResultMismatch")}
}

func (_c *MockAccessMetrics_ScriptExecutionResultMismatch_Call) Run(run func()) *MockAccessMetrics_ScriptExecutionResultMismatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionResultMismatch_Call) Return() *MockAccessMetrics_ScriptExecutionResultMismatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_ScriptExecutionResultMismatch_Call) RunAndReturn(run func()) *MockAccessMetrics_ScriptExecutionResultMismatch_Call {
	_c.Run(run)
	return _c
}

// TotalConnectionsInPool provides a mock function with given fields: connectionCount, connectionPoolSize
func (_m *MockAccessMetrics) TotalConnectionsInPool(connectionCount uint, connectionPoolSize uint) {
	_m.Called(connectionCount, connectionPoolSize)
}

// MockAccessMetrics_TotalConnectionsInPool_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TotalConnectionsInPool'
type MockAccessMetrics_TotalConnectionsInPool_Call struct {
	*mock.Call
}

// TotalConnectionsInPool is a helper method to define mock.On call
//   - connectionCount uint
//   - connectionPoolSize uint
func (_e *MockAccessMetrics_Expecter) TotalConnectionsInPool(connectionCount interface{}, connectionPoolSize interface{}) *MockAccessMetrics_TotalConnectionsInPool_Call {
	return &MockAccessMetrics_TotalConnectionsInPool_Call{Call: _e.mock.On("TotalConnectionsInPool", connectionCount, connectionPoolSize)}
}

func (_c *MockAccessMetrics_TotalConnectionsInPool_Call) Run(run func(connectionCount uint, connectionPoolSize uint)) *MockAccessMetrics_TotalConnectionsInPool_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint), args[1].(uint))
	})
	return _c
}

func (_c *MockAccessMetrics_TotalConnectionsInPool_Call) Return() *MockAccessMetrics_TotalConnectionsInPool_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TotalConnectionsInPool_Call) RunAndReturn(run func(uint, uint)) *MockAccessMetrics_TotalConnectionsInPool_Call {
	_c.Run(run)
	return _c
}

// TransactionExecuted provides a mock function with given fields: txID, when
func (_m *MockAccessMetrics) TransactionExecuted(txID flow.Identifier, when time.Time) {
	_m.Called(txID, when)
}

// MockAccessMetrics_TransactionExecuted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionExecuted'
type MockAccessMetrics_TransactionExecuted_Call struct {
	*mock.Call
}

// TransactionExecuted is a helper method to define mock.On call
//   - txID flow.Identifier
//   - when time.Time
func (_e *MockAccessMetrics_Expecter) TransactionExecuted(txID interface{}, when interface{}) *MockAccessMetrics_TransactionExecuted_Call {
	return &MockAccessMetrics_TransactionExecuted_Call{Call: _e.mock.On("TransactionExecuted", txID, when)}
}

func (_c *MockAccessMetrics_TransactionExecuted_Call) Run(run func(txID flow.Identifier, when time.Time)) *MockAccessMetrics_TransactionExecuted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier), args[1].(time.Time))
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionExecuted_Call) Return() *MockAccessMetrics_TransactionExecuted_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionExecuted_Call) RunAndReturn(run func(flow.Identifier, time.Time)) *MockAccessMetrics_TransactionExecuted_Call {
	_c.Run(run)
	return _c
}

// TransactionExpired provides a mock function with given fields: txID
func (_m *MockAccessMetrics) TransactionExpired(txID flow.Identifier) {
	_m.Called(txID)
}

// MockAccessMetrics_TransactionExpired_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionExpired'
type MockAccessMetrics_TransactionExpired_Call struct {
	*mock.Call
}

// TransactionExpired is a helper method to define mock.On call
//   - txID flow.Identifier
func (_e *MockAccessMetrics_Expecter) TransactionExpired(txID interface{}) *MockAccessMetrics_TransactionExpired_Call {
	return &MockAccessMetrics_TransactionExpired_Call{Call: _e.mock.On("TransactionExpired", txID)}
}

func (_c *MockAccessMetrics_TransactionExpired_Call) Run(run func(txID flow.Identifier)) *MockAccessMetrics_TransactionExpired_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier))
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionExpired_Call) Return() *MockAccessMetrics_TransactionExpired_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionExpired_Call) RunAndReturn(run func(flow.Identifier)) *MockAccessMetrics_TransactionExpired_Call {
	_c.Run(run)
	return _c
}

// TransactionFinalized provides a mock function with given fields: txID, when
func (_m *MockAccessMetrics) TransactionFinalized(txID flow.Identifier, when time.Time) {
	_m.Called(txID, when)
}

// MockAccessMetrics_TransactionFinalized_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionFinalized'
type MockAccessMetrics_TransactionFinalized_Call struct {
	*mock.Call
}

// TransactionFinalized is a helper method to define mock.On call
//   - txID flow.Identifier
//   - when time.Time
func (_e *MockAccessMetrics_Expecter) TransactionFinalized(txID interface{}, when interface{}) *MockAccessMetrics_TransactionFinalized_Call {
	return &MockAccessMetrics_TransactionFinalized_Call{Call: _e.mock.On("TransactionFinalized", txID, when)}
}

func (_c *MockAccessMetrics_TransactionFinalized_Call) Run(run func(txID flow.Identifier, when time.Time)) *MockAccessMetrics_TransactionFinalized_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier), args[1].(time.Time))
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionFinalized_Call) Return() *MockAccessMetrics_TransactionFinalized_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionFinalized_Call) RunAndReturn(run func(flow.Identifier, time.Time)) *MockAccessMetrics_TransactionFinalized_Call {
	_c.Run(run)
	return _c
}

// TransactionReceived provides a mock function with given fields: txID, when
func (_m *MockAccessMetrics) TransactionReceived(txID flow.Identifier, when time.Time) {
	_m.Called(txID, when)
}

// MockAccessMetrics_TransactionReceived_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionReceived'
type MockAccessMetrics_TransactionReceived_Call struct {
	*mock.Call
}

// TransactionReceived is a helper method to define mock.On call
//   - txID flow.Identifier
//   - when time.Time
func (_e *MockAccessMetrics_Expecter) TransactionReceived(txID interface{}, when interface{}) *MockAccessMetrics_TransactionReceived_Call {
	return &MockAccessMetrics_TransactionReceived_Call{Call: _e.mock.On("TransactionReceived", txID, when)}
}

func (_c *MockAccessMetrics_TransactionReceived_Call) Run(run func(txID flow.Identifier, when time.Time)) *MockAccessMetrics_TransactionReceived_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier), args[1].(time.Time))
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionReceived_Call) Return() *MockAccessMetrics_TransactionReceived_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionReceived_Call) RunAndReturn(run func(flow.Identifier, time.Time)) *MockAccessMetrics_TransactionReceived_Call {
	_c.Run(run)
	return _c
}

// TransactionResultFetched provides a mock function with given fields: dur, size
func (_m *MockAccessMetrics) TransactionResultFetched(dur time.Duration, size int) {
	_m.Called(dur, size)
}

// MockAccessMetrics_TransactionResultFetched_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionResultFetched'
type MockAccessMetrics_TransactionResultFetched_Call struct {
	*mock.Call
}

// TransactionResultFetched is a helper method to define mock.On call
//   - dur time.Duration
//   - size int
func (_e *MockAccessMetrics_Expecter) TransactionResultFetched(dur interface{}, size interface{}) *MockAccessMetrics_TransactionResultFetched_Call {
	return &MockAccessMetrics_TransactionResultFetched_Call{Call: _e.mock.On("TransactionResultFetched", dur, size)}
}

func (_c *MockAccessMetrics_TransactionResultFetched_Call) Run(run func(dur time.Duration, size int)) *MockAccessMetrics_TransactionResultFetched_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(int))
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionResultFetched_Call) Return() *MockAccessMetrics_TransactionResultFetched_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionResultFetched_Call) RunAndReturn(run func(time.Duration, int)) *MockAccessMetrics_TransactionResultFetched_Call {
	_c.Run(run)
	return _c
}

// TransactionSealed provides a mock function with given fields: txID, when
func (_m *MockAccessMetrics) TransactionSealed(txID flow.Identifier, when time.Time) {
	_m.Called(txID, when)
}

// MockAccessMetrics_TransactionSealed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionSealed'
type MockAccessMetrics_TransactionSealed_Call struct {
	*mock.Call
}

// TransactionSealed is a helper method to define mock.On call
//   - txID flow.Identifier
//   - when time.Time
func (_e *MockAccessMetrics_Expecter) TransactionSealed(txID interface{}, when interface{}) *MockAccessMetrics_TransactionSealed_Call {
	return &MockAccessMetrics_TransactionSealed_Call{Call: _e.mock.On("TransactionSealed", txID, when)}
}

func (_c *MockAccessMetrics_TransactionSealed_Call) Run(run func(txID flow.Identifier, when time.Time)) *MockAccessMetrics_TransactionSealed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.Identifier), args[1].(time.Time))
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionSealed_Call) Return() *MockAccessMetrics_TransactionSealed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionSealed_Call) RunAndReturn(run func(flow.Identifier, time.Time)) *MockAccessMetrics_TransactionSealed_Call {
	_c.Run(run)
	return _c
}

// TransactionSubmissionFailed provides a mock function with no fields
func (_m *MockAccessMetrics) TransactionSubmissionFailed() {
	_m.Called()
}

// MockAccessMetrics_TransactionSubmissionFailed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionSubmissionFailed'
type MockAccessMetrics_TransactionSubmissionFailed_Call struct {
	*mock.Call
}

// TransactionSubmissionFailed is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) TransactionSubmissionFailed() *MockAccessMetrics_TransactionSubmissionFailed_Call {
	return &MockAccessMetrics_TransactionSubmissionFailed_Call{Call: _e.mock.On("TransactionSubmissionFailed")}
}

func (_c *MockAccessMetrics_TransactionSubmissionFailed_Call) Run(run func()) *MockAccessMetrics_TransactionSubmissionFailed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionSubmissionFailed_Call) Return() *MockAccessMetrics_TransactionSubmissionFailed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionSubmissionFailed_Call) RunAndReturn(run func()) *MockAccessMetrics_TransactionSubmissionFailed_Call {
	_c.Run(run)
	return _c
}

// TransactionValidated provides a mock function with no fields
func (_m *MockAccessMetrics) TransactionValidated() {
	_m.Called()
}

// MockAccessMetrics_TransactionValidated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionValidated'
type MockAccessMetrics_TransactionValidated_Call struct {
	*mock.Call
}

// TransactionValidated is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) TransactionValidated() *MockAccessMetrics_TransactionValidated_Call {
	return &MockAccessMetrics_TransactionValidated_Call{Call: _e.mock.On("TransactionValidated")}
}

func (_c *MockAccessMetrics_TransactionValidated_Call) Run(run func()) *MockAccessMetrics_TransactionValidated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionValidated_Call) Return() *MockAccessMetrics_TransactionValidated_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionValidated_Call) RunAndReturn(run func()) *MockAccessMetrics_TransactionValidated_Call {
	_c.Run(run)
	return _c
}

// TransactionValidationFailed provides a mock function with given fields: reason
func (_m *MockAccessMetrics) TransactionValidationFailed(reason string) {
	_m.Called(reason)
}

// MockAccessMetrics_TransactionValidationFailed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionValidationFailed'
type MockAccessMetrics_TransactionValidationFailed_Call struct {
	*mock.Call
}

// TransactionValidationFailed is a helper method to define mock.On call
//   - reason string
func (_e *MockAccessMetrics_Expecter) TransactionValidationFailed(reason interface{}) *MockAccessMetrics_TransactionValidationFailed_Call {
	return &MockAccessMetrics_TransactionValidationFailed_Call{Call: _e.mock.On("TransactionValidationFailed", reason)}
}

func (_c *MockAccessMetrics_TransactionValidationFailed_Call) Run(run func(reason string)) *MockAccessMetrics_TransactionValidationFailed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionValidationFailed_Call) Return() *MockAccessMetrics_TransactionValidationFailed_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionValidationFailed_Call) RunAndReturn(run func(string)) *MockAccessMetrics_TransactionValidationFailed_Call {
	_c.Run(run)
	return _c
}

// TransactionValidationSkipped provides a mock function with no fields
func (_m *MockAccessMetrics) TransactionValidationSkipped() {
	_m.Called()
}

// MockAccessMetrics_TransactionValidationSkipped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransactionValidationSkipped'
type MockAccessMetrics_TransactionValidationSkipped_Call struct {
	*mock.Call
}

// TransactionValidationSkipped is a helper method to define mock.On call
func (_e *MockAccessMetrics_Expecter) TransactionValidationSkipped() *MockAccessMetrics_TransactionValidationSkipped_Call {
	return &MockAccessMetrics_TransactionValidationSkipped_Call{Call: _e.mock.On("TransactionValidationSkipped")}
}

func (_c *MockAccessMetrics_TransactionValidationSkipped_Call) Run(run func()) *MockAccessMetrics_TransactionValidationSkipped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockAccessMetrics_TransactionValidationSkipped_Call) Return() *MockAccessMetrics_TransactionValidationSkipped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_TransactionValidationSkipped_Call) RunAndReturn(run func()) *MockAccessMetrics_TransactionValidationSkipped_Call {
	_c.Run(run)
	return _c
}

// UpdateExecutionReceiptMaxHeight provides a mock function with given fields: height
func (_m *MockAccessMetrics) UpdateExecutionReceiptMaxHeight(height uint64) {
	_m.Called(height)
}

// MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateExecutionReceiptMaxHeight'
type MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call struct {
	*mock.Call
}

// UpdateExecutionReceiptMaxHeight is a helper method to define mock.On call
//   - height uint64
func (_e *MockAccessMetrics_Expecter) UpdateExecutionReceiptMaxHeight(height interface{}) *MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call {
	return &MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call{Call: _e.mock.On("UpdateExecutionReceiptMaxHeight", height)}
}

func (_c *MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call) Run(run func(height uint64)) *MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call) Return() *MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call) RunAndReturn(run func(uint64)) *MockAccessMetrics_UpdateExecutionReceiptMaxHeight_Call {
	_c.Run(run)
	return _c
}

// UpdateLastFullBlockHeight provides a mock function with given fields: height
func (_m *MockAccessMetrics) UpdateLastFullBlockHeight(height uint64) {
	_m.Called(height)
}

// MockAccessMetrics_UpdateLastFullBlockHeight_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateLastFullBlockHeight'
type MockAccessMetrics_UpdateLastFullBlockHeight_Call struct {
	*mock.Call
}

// UpdateLastFullBlockHeight is a helper method to define mock.On call
//   - height uint64
func (_e *MockAccessMetrics_Expecter) UpdateLastFullBlockHeight(height interface{}) *MockAccessMetrics_UpdateLastFullBlockHeight_Call {
	return &MockAccessMetrics_UpdateLastFullBlockHeight_Call{Call: _e.mock.On("UpdateLastFullBlockHeight", height)}
}

func (_c *MockAccessMetrics_UpdateLastFullBlockHeight_Call) Run(run func(height uint64)) *MockAccessMetrics_UpdateLastFullBlockHeight_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockAccessMetrics_UpdateLastFullBlockHeight_Call) Return() *MockAccessMetrics_UpdateLastFullBlockHeight_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAccessMetrics_UpdateLastFullBlockHeight_Call) RunAndReturn(run func(uint64)) *MockAccessMetrics_UpdateLastFullBlockHeight_Call {
	_c.Run(run)
	return _c
}

// NewMockAccessMetrics creates a new instance of MockAccessMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAccessMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAccessMetrics {
	mock := &MockAccessMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
