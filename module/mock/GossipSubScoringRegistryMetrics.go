// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// MockGossipSubScoringRegistryMetrics is an autogenerated mock type for the GossipSubScoringRegistryMetrics type
type MockGossipSubScoringRegistryMetrics struct {
	mock.Mock
}

type MockGossipSubScoringRegistryMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockGossipSubScoringRegistryMetrics) EXPECT() *MockGossipSubScoringRegistryMetrics_Expecter {
	return &MockGossipSubScoringRegistryMetrics_Expecter{mock: &_m.Mock}
}

// DuplicateMessagePenalties provides a mock function with given fields: penalty
func (_m *MockGossipSubScoringRegistryMetrics) DuplicateMessagePenalties(penalty float64) {
	_m.Called(penalty)
}

// MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DuplicateMessagePenalties'
type MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call struct {
	*mock.Call
}

// DuplicateMessagePenalties is a helper method to define mock.On call
//   - penalty float64
func (_e *MockGossipSubScoringRegistryMetrics_Expecter) DuplicateMessagePenalties(penalty interface{}) *MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call {
	return &MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call{Call: _e.mock.On("DuplicateMessagePenalties", penalty)}
}

func (_c *MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call) Run(run func(penalty float64)) *MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call) Return() *MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call) RunAndReturn(run func(float64)) *MockGossipSubScoringRegistryMetrics_DuplicateMessagePenalties_Call {
	_c.Run(run)
	return _c
}

// DuplicateMessagesCounts provides a mock function with given fields: count
func (_m *MockGossipSubScoringRegistryMetrics) DuplicateMessagesCounts(count float64) {
	_m.Called(count)
}

// MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DuplicateMessagesCounts'
type MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call struct {
	*mock.Call
}

// DuplicateMessagesCounts is a helper method to define mock.On call
//   - count float64
func (_e *MockGossipSubScoringRegistryMetrics_Expecter) DuplicateMessagesCounts(count interface{}) *MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call {
	return &MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call{Call: _e.mock.On("DuplicateMessagesCounts", count)}
}

func (_c *MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call) Run(run func(count float64)) *MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(float64))
	})
	return _c
}

func (_c *MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call) Return() *MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call) RunAndReturn(run func(float64)) *MockGossipSubScoringRegistryMetrics_DuplicateMessagesCounts_Call {
	_c.Run(run)
	return _c
}

// NewMockGossipSubScoringRegistryMetrics creates a new instance of MockGossipSubScoringRegistryMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGossipSubScoringRegistryMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGossipSubScoringRegistryMetrics {
	mock := &MockGossipSubScoringRegistryMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
