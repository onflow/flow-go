// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockCleanerMetrics is an autogenerated mock type for the CleanerMetrics type
type MockCleanerMetrics struct {
	mock.Mock
}

type MockCleanerMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCleanerMetrics) EXPECT() *MockCleanerMetrics_Expecter {
	return &MockCleanerMetrics_Expecter{mock: &_m.Mock}
}

// RanGC provides a mock function with given fields: took
func (_m *MockCleanerMetrics) RanGC(took time.Duration) {
	_m.Called(took)
}

// MockCleanerMetrics_RanGC_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RanGC'
type MockCleanerMetrics_RanGC_Call struct {
	*mock.Call
}

// RanGC is a helper method to define mock.On call
//   - took time.Duration
func (_e *MockCleanerMetrics_Expecter) RanGC(took interface{}) *MockCleanerMetrics_RanGC_Call {
	return &MockCleanerMetrics_RanGC_Call{Call: _e.mock.On("RanGC", took)}
}

func (_c *MockCleanerMetrics_RanGC_Call) Run(run func(took time.Duration)) *MockCleanerMetrics_RanGC_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockCleanerMetrics_RanGC_Call) Return() *MockCleanerMetrics_RanGC_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCleanerMetrics_RanGC_Call) RunAndReturn(run func(time.Duration)) *MockCleanerMetrics_RanGC_Call {
	_c.Run(run)
	return _c
}

// NewMockCleanerMetrics creates a new instance of MockCleanerMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCleanerMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCleanerMetrics {
	mock := &MockCleanerMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
