// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockHotstuffMetrics is an autogenerated mock type for the HotstuffMetrics type
type MockHotstuffMetrics struct {
	mock.Mock
}

type MockHotstuffMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHotstuffMetrics) EXPECT() *MockHotstuffMetrics_Expecter {
	return &MockHotstuffMetrics_Expecter{mock: &_m.Mock}
}

// BlockProcessingDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) BlockProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_BlockProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BlockProcessingDuration'
type MockHotstuffMetrics_BlockProcessingDuration_Call struct {
	*mock.Call
}

// BlockProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) BlockProcessingDuration(duration interface{}) *MockHotstuffMetrics_BlockProcessingDuration_Call {
	return &MockHotstuffMetrics_BlockProcessingDuration_Call{Call: _e.mock.On("BlockProcessingDuration", duration)}
}

func (_c *MockHotstuffMetrics_BlockProcessingDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_BlockProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_BlockProcessingDuration_Call) Return() *MockHotstuffMetrics_BlockProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_BlockProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_BlockProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// CommitteeProcessingDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) CommitteeProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_CommitteeProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CommitteeProcessingDuration'
type MockHotstuffMetrics_CommitteeProcessingDuration_Call struct {
	*mock.Call
}

// CommitteeProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) CommitteeProcessingDuration(duration interface{}) *MockHotstuffMetrics_CommitteeProcessingDuration_Call {
	return &MockHotstuffMetrics_CommitteeProcessingDuration_Call{Call: _e.mock.On("CommitteeProcessingDuration", duration)}
}

func (_c *MockHotstuffMetrics_CommitteeProcessingDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_CommitteeProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_CommitteeProcessingDuration_Call) Return() *MockHotstuffMetrics_CommitteeProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_CommitteeProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_CommitteeProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// CountSkipped provides a mock function with no fields
func (_m *MockHotstuffMetrics) CountSkipped() {
	_m.Called()
}

// MockHotstuffMetrics_CountSkipped_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CountSkipped'
type MockHotstuffMetrics_CountSkipped_Call struct {
	*mock.Call
}

// CountSkipped is a helper method to define mock.On call
func (_e *MockHotstuffMetrics_Expecter) CountSkipped() *MockHotstuffMetrics_CountSkipped_Call {
	return &MockHotstuffMetrics_CountSkipped_Call{Call: _e.mock.On("CountSkipped")}
}

func (_c *MockHotstuffMetrics_CountSkipped_Call) Run(run func()) *MockHotstuffMetrics_CountSkipped_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHotstuffMetrics_CountSkipped_Call) Return() *MockHotstuffMetrics_CountSkipped_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_CountSkipped_Call) RunAndReturn(run func()) *MockHotstuffMetrics_CountSkipped_Call {
	_c.Run(run)
	return _c
}

// CountTimeout provides a mock function with no fields
func (_m *MockHotstuffMetrics) CountTimeout() {
	_m.Called()
}

// MockHotstuffMetrics_CountTimeout_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CountTimeout'
type MockHotstuffMetrics_CountTimeout_Call struct {
	*mock.Call
}

// CountTimeout is a helper method to define mock.On call
func (_e *MockHotstuffMetrics_Expecter) CountTimeout() *MockHotstuffMetrics_CountTimeout_Call {
	return &MockHotstuffMetrics_CountTimeout_Call{Call: _e.mock.On("CountTimeout")}
}

func (_c *MockHotstuffMetrics_CountTimeout_Call) Run(run func()) *MockHotstuffMetrics_CountTimeout_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHotstuffMetrics_CountTimeout_Call) Return() *MockHotstuffMetrics_CountTimeout_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_CountTimeout_Call) RunAndReturn(run func()) *MockHotstuffMetrics_CountTimeout_Call {
	_c.Run(run)
	return _c
}

// HotStuffBusyDuration provides a mock function with given fields: duration, event
func (_m *MockHotstuffMetrics) HotStuffBusyDuration(duration time.Duration, event string) {
	_m.Called(duration, event)
}

// MockHotstuffMetrics_HotStuffBusyDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HotStuffBusyDuration'
type MockHotstuffMetrics_HotStuffBusyDuration_Call struct {
	*mock.Call
}

// HotStuffBusyDuration is a helper method to define mock.On call
//   - duration time.Duration
//   - event string
func (_e *MockHotstuffMetrics_Expecter) HotStuffBusyDuration(duration interface{}, event interface{}) *MockHotstuffMetrics_HotStuffBusyDuration_Call {
	return &MockHotstuffMetrics_HotStuffBusyDuration_Call{Call: _e.mock.On("HotStuffBusyDuration", duration, event)}
}

func (_c *MockHotstuffMetrics_HotStuffBusyDuration_Call) Run(run func(duration time.Duration, event string)) *MockHotstuffMetrics_HotStuffBusyDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(string))
	})
	return _c
}

func (_c *MockHotstuffMetrics_HotStuffBusyDuration_Call) Return() *MockHotstuffMetrics_HotStuffBusyDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_HotStuffBusyDuration_Call) RunAndReturn(run func(time.Duration, string)) *MockHotstuffMetrics_HotStuffBusyDuration_Call {
	_c.Run(run)
	return _c
}

// HotStuffIdleDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) HotStuffIdleDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_HotStuffIdleDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HotStuffIdleDuration'
type MockHotstuffMetrics_HotStuffIdleDuration_Call struct {
	*mock.Call
}

// HotStuffIdleDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) HotStuffIdleDuration(duration interface{}) *MockHotstuffMetrics_HotStuffIdleDuration_Call {
	return &MockHotstuffMetrics_HotStuffIdleDuration_Call{Call: _e.mock.On("HotStuffIdleDuration", duration)}
}

func (_c *MockHotstuffMetrics_HotStuffIdleDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_HotStuffIdleDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_HotStuffIdleDuration_Call) Return() *MockHotstuffMetrics_HotStuffIdleDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_HotStuffIdleDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_HotStuffIdleDuration_Call {
	_c.Run(run)
	return _c
}

// HotStuffWaitDuration provides a mock function with given fields: duration, event
func (_m *MockHotstuffMetrics) HotStuffWaitDuration(duration time.Duration, event string) {
	_m.Called(duration, event)
}

// MockHotstuffMetrics_HotStuffWaitDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HotStuffWaitDuration'
type MockHotstuffMetrics_HotStuffWaitDuration_Call struct {
	*mock.Call
}

// HotStuffWaitDuration is a helper method to define mock.On call
//   - duration time.Duration
//   - event string
func (_e *MockHotstuffMetrics_Expecter) HotStuffWaitDuration(duration interface{}, event interface{}) *MockHotstuffMetrics_HotStuffWaitDuration_Call {
	return &MockHotstuffMetrics_HotStuffWaitDuration_Call{Call: _e.mock.On("HotStuffWaitDuration", duration, event)}
}

func (_c *MockHotstuffMetrics_HotStuffWaitDuration_Call) Run(run func(duration time.Duration, event string)) *MockHotstuffMetrics_HotStuffWaitDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration), args[1].(string))
	})
	return _c
}

func (_c *MockHotstuffMetrics_HotStuffWaitDuration_Call) Return() *MockHotstuffMetrics_HotStuffWaitDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_HotStuffWaitDuration_Call) RunAndReturn(run func(time.Duration, string)) *MockHotstuffMetrics_HotStuffWaitDuration_Call {
	_c.Run(run)
	return _c
}

// PayloadProductionDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) PayloadProductionDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_PayloadProductionDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PayloadProductionDuration'
type MockHotstuffMetrics_PayloadProductionDuration_Call struct {
	*mock.Call
}

// PayloadProductionDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) PayloadProductionDuration(duration interface{}) *MockHotstuffMetrics_PayloadProductionDuration_Call {
	return &MockHotstuffMetrics_PayloadProductionDuration_Call{Call: _e.mock.On("PayloadProductionDuration", duration)}
}

func (_c *MockHotstuffMetrics_PayloadProductionDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_PayloadProductionDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_PayloadProductionDuration_Call) Return() *MockHotstuffMetrics_PayloadProductionDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_PayloadProductionDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_PayloadProductionDuration_Call {
	_c.Run(run)
	return _c
}

// SetCurView provides a mock function with given fields: view
func (_m *MockHotstuffMetrics) SetCurView(view uint64) {
	_m.Called(view)
}

// MockHotstuffMetrics_SetCurView_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetCurView'
type MockHotstuffMetrics_SetCurView_Call struct {
	*mock.Call
}

// SetCurView is a helper method to define mock.On call
//   - view uint64
func (_e *MockHotstuffMetrics_Expecter) SetCurView(view interface{}) *MockHotstuffMetrics_SetCurView_Call {
	return &MockHotstuffMetrics_SetCurView_Call{Call: _e.mock.On("SetCurView", view)}
}

func (_c *MockHotstuffMetrics_SetCurView_Call) Run(run func(view uint64)) *MockHotstuffMetrics_SetCurView_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockHotstuffMetrics_SetCurView_Call) Return() *MockHotstuffMetrics_SetCurView_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_SetCurView_Call) RunAndReturn(run func(uint64)) *MockHotstuffMetrics_SetCurView_Call {
	_c.Run(run)
	return _c
}

// SetQCView provides a mock function with given fields: view
func (_m *MockHotstuffMetrics) SetQCView(view uint64) {
	_m.Called(view)
}

// MockHotstuffMetrics_SetQCView_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetQCView'
type MockHotstuffMetrics_SetQCView_Call struct {
	*mock.Call
}

// SetQCView is a helper method to define mock.On call
//   - view uint64
func (_e *MockHotstuffMetrics_Expecter) SetQCView(view interface{}) *MockHotstuffMetrics_SetQCView_Call {
	return &MockHotstuffMetrics_SetQCView_Call{Call: _e.mock.On("SetQCView", view)}
}

func (_c *MockHotstuffMetrics_SetQCView_Call) Run(run func(view uint64)) *MockHotstuffMetrics_SetQCView_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockHotstuffMetrics_SetQCView_Call) Return() *MockHotstuffMetrics_SetQCView_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_SetQCView_Call) RunAndReturn(run func(uint64)) *MockHotstuffMetrics_SetQCView_Call {
	_c.Run(run)
	return _c
}

// SetTCView provides a mock function with given fields: view
func (_m *MockHotstuffMetrics) SetTCView(view uint64) {
	_m.Called(view)
}

// MockHotstuffMetrics_SetTCView_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetTCView'
type MockHotstuffMetrics_SetTCView_Call struct {
	*mock.Call
}

// SetTCView is a helper method to define mock.On call
//   - view uint64
func (_e *MockHotstuffMetrics_Expecter) SetTCView(view interface{}) *MockHotstuffMetrics_SetTCView_Call {
	return &MockHotstuffMetrics_SetTCView_Call{Call: _e.mock.On("SetTCView", view)}
}

func (_c *MockHotstuffMetrics_SetTCView_Call) Run(run func(view uint64)) *MockHotstuffMetrics_SetTCView_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *MockHotstuffMetrics_SetTCView_Call) Return() *MockHotstuffMetrics_SetTCView_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_SetTCView_Call) RunAndReturn(run func(uint64)) *MockHotstuffMetrics_SetTCView_Call {
	_c.Run(run)
	return _c
}

// SetTimeout provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) SetTimeout(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_SetTimeout_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetTimeout'
type MockHotstuffMetrics_SetTimeout_Call struct {
	*mock.Call
}

// SetTimeout is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) SetTimeout(duration interface{}) *MockHotstuffMetrics_SetTimeout_Call {
	return &MockHotstuffMetrics_SetTimeout_Call{Call: _e.mock.On("SetTimeout", duration)}
}

func (_c *MockHotstuffMetrics_SetTimeout_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_SetTimeout_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_SetTimeout_Call) Return() *MockHotstuffMetrics_SetTimeout_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_SetTimeout_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_SetTimeout_Call {
	_c.Run(run)
	return _c
}

// SignerProcessingDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) SignerProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_SignerProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SignerProcessingDuration'
type MockHotstuffMetrics_SignerProcessingDuration_Call struct {
	*mock.Call
}

// SignerProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) SignerProcessingDuration(duration interface{}) *MockHotstuffMetrics_SignerProcessingDuration_Call {
	return &MockHotstuffMetrics_SignerProcessingDuration_Call{Call: _e.mock.On("SignerProcessingDuration", duration)}
}

func (_c *MockHotstuffMetrics_SignerProcessingDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_SignerProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_SignerProcessingDuration_Call) Return() *MockHotstuffMetrics_SignerProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_SignerProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_SignerProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// TimeoutCollectorsRange provides a mock function with given fields: lowestRetainedView, newestViewCreatedCollector, activeCollectors
func (_m *MockHotstuffMetrics) TimeoutCollectorsRange(lowestRetainedView uint64, newestViewCreatedCollector uint64, activeCollectors int) {
	_m.Called(lowestRetainedView, newestViewCreatedCollector, activeCollectors)
}

// MockHotstuffMetrics_TimeoutCollectorsRange_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TimeoutCollectorsRange'
type MockHotstuffMetrics_TimeoutCollectorsRange_Call struct {
	*mock.Call
}

// TimeoutCollectorsRange is a helper method to define mock.On call
//   - lowestRetainedView uint64
//   - newestViewCreatedCollector uint64
//   - activeCollectors int
func (_e *MockHotstuffMetrics_Expecter) TimeoutCollectorsRange(lowestRetainedView interface{}, newestViewCreatedCollector interface{}, activeCollectors interface{}) *MockHotstuffMetrics_TimeoutCollectorsRange_Call {
	return &MockHotstuffMetrics_TimeoutCollectorsRange_Call{Call: _e.mock.On("TimeoutCollectorsRange", lowestRetainedView, newestViewCreatedCollector, activeCollectors)}
}

func (_c *MockHotstuffMetrics_TimeoutCollectorsRange_Call) Run(run func(lowestRetainedView uint64, newestViewCreatedCollector uint64, activeCollectors int)) *MockHotstuffMetrics_TimeoutCollectorsRange_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64), args[1].(uint64), args[2].(int))
	})
	return _c
}

func (_c *MockHotstuffMetrics_TimeoutCollectorsRange_Call) Return() *MockHotstuffMetrics_TimeoutCollectorsRange_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_TimeoutCollectorsRange_Call) RunAndReturn(run func(uint64, uint64, int)) *MockHotstuffMetrics_TimeoutCollectorsRange_Call {
	_c.Run(run)
	return _c
}

// TimeoutObjectProcessingDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) TimeoutObjectProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TimeoutObjectProcessingDuration'
type MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call struct {
	*mock.Call
}

// TimeoutObjectProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) TimeoutObjectProcessingDuration(duration interface{}) *MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call {
	return &MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call{Call: _e.mock.On("TimeoutObjectProcessingDuration", duration)}
}

func (_c *MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call) Return() *MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_TimeoutObjectProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// ValidatorProcessingDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) ValidatorProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_ValidatorProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidatorProcessingDuration'
type MockHotstuffMetrics_ValidatorProcessingDuration_Call struct {
	*mock.Call
}

// ValidatorProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) ValidatorProcessingDuration(duration interface{}) *MockHotstuffMetrics_ValidatorProcessingDuration_Call {
	return &MockHotstuffMetrics_ValidatorProcessingDuration_Call{Call: _e.mock.On("ValidatorProcessingDuration", duration)}
}

func (_c *MockHotstuffMetrics_ValidatorProcessingDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_ValidatorProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_ValidatorProcessingDuration_Call) Return() *MockHotstuffMetrics_ValidatorProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_ValidatorProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_ValidatorProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// VoteProcessingDuration provides a mock function with given fields: duration
func (_m *MockHotstuffMetrics) VoteProcessingDuration(duration time.Duration) {
	_m.Called(duration)
}

// MockHotstuffMetrics_VoteProcessingDuration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VoteProcessingDuration'
type MockHotstuffMetrics_VoteProcessingDuration_Call struct {
	*mock.Call
}

// VoteProcessingDuration is a helper method to define mock.On call
//   - duration time.Duration
func (_e *MockHotstuffMetrics_Expecter) VoteProcessingDuration(duration interface{}) *MockHotstuffMetrics_VoteProcessingDuration_Call {
	return &MockHotstuffMetrics_VoteProcessingDuration_Call{Call: _e.mock.On("VoteProcessingDuration", duration)}
}

func (_c *MockHotstuffMetrics_VoteProcessingDuration_Call) Run(run func(duration time.Duration)) *MockHotstuffMetrics_VoteProcessingDuration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockHotstuffMetrics_VoteProcessingDuration_Call) Return() *MockHotstuffMetrics_VoteProcessingDuration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHotstuffMetrics_VoteProcessingDuration_Call) RunAndReturn(run func(time.Duration)) *MockHotstuffMetrics_VoteProcessingDuration_Call {
	_c.Run(run)
	return _c
}

// NewMockHotstuffMetrics creates a new instance of MockHotstuffMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHotstuffMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHotstuffMetrics {
	mock := &MockHotstuffMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
