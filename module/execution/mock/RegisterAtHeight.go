// Code generated by mockery v2.53.4. DO NOT EDIT.

package mock

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"
)

// MockRegisterAtHeight is an autogenerated mock type for the RegisterAtHeight type
type MockRegisterAtHeight struct {
	mock.Mock
}

type MockRegisterAtHeight_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRegisterAtHeight) EXPECT() *MockRegisterAtHeight_Expecter {
	return &MockRegisterAtHeight_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: ID, height
func (_m *MockRegisterAtHeight) Execute(ID flow.RegisterID, height uint64) ([]byte, error) {
	ret := _m.Called(ID, height)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func(flow.RegisterID, uint64) ([]byte, error)); ok {
		return rf(ID, height)
	}
	if rf, ok := ret.Get(0).(func(flow.RegisterID, uint64) []byte); ok {
		r0 = rf(ID, height)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func(flow.RegisterID, uint64) error); ok {
		r1 = rf(ID, height)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockRegisterAtHeight_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockRegisterAtHeight_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - ID flow.RegisterID
//   - height uint64
func (_e *MockRegisterAtHeight_Expecter) Execute(ID interface{}, height interface{}) *MockRegisterAtHeight_Execute_Call {
	return &MockRegisterAtHeight_Execute_Call{Call: _e.mock.On("Execute", ID, height)}
}

func (_c *MockRegisterAtHeight_Execute_Call) Run(run func(ID flow.RegisterID, height uint64)) *MockRegisterAtHeight_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(flow.RegisterID), args[1].(uint64))
	})
	return _c
}

func (_c *MockRegisterAtHeight_Execute_Call) Return(_a0 []byte, _a1 error) *MockRegisterAtHeight_Execute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockRegisterAtHeight_Execute_Call) RunAndReturn(run func(flow.RegisterID, uint64) ([]byte, error)) *MockRegisterAtHeight_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRegisterAtHeight creates a new instance of MockRegisterAtHeight. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRegisterAtHeight(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRegisterAtHeight {
	mock := &MockRegisterAtHeight{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
