// Code generated by mockery v2.21.4. DO NOT EDIT.

package state_synchronization

import mock "github.com/stretchr/testify/mock"

// IndexReporter is an autogenerated mock type for the IndexReporter type
type IndexReporter struct {
	mock.Mock
}

// HighestIndexedHeight provides a mock function with given fields:
func (_m *IndexReporter) HighestIndexedHeight() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// LowestIndexedHeight provides a mock function with given fields:
func (_m *IndexReporter) LowestIndexedHeight() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

type mockConstructorTestingTNewIndexReporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewIndexReporter creates a new instance of IndexReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIndexReporter(t mockConstructorTestingTNewIndexReporter) *IndexReporter {
	mock := &IndexReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
